{
  "id": "8a55eec74476305bf85311b01e2e14b4",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "contracts/MintableERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MintableERC20 is ERC20 {\n    constructor(\n        string memory _name,\n        string memory _symbol\n    ) ERC20(_name, _symbol) {}\n\n    function mintToken() public {\n        _mint(msg.sender, 100000000000000000000);\n    }\n}\n"
      },
      "contracts/MyToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor(uint256 initialSupply) ERC20(\"MyToken\", \"MTK\") {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(PAUSER_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n\n        _mint(msg.sender, initialSupply);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    function _update(address from, address to, uint256 amount)\n        internal\n        override\n        whenNotPaused\n    {\n        super._update(from, to, amount);\n    }\n}\n"
      }
    },
    "settings": {
      "evmVersion": "paris",
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [],
    "version": "0.8.28",
    "long_version": "0.8.28+commit.7893614a.Emscripten.clang",
    "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1210
            ],
            "ERC165": [
              1342
            ],
            "IAccessControl": [
              378
            ]
          },
          "id": 296,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
              "file": "./IAccessControl.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 379,
              "src": "134:52:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "IAccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "142:14:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1211,
              "src": "187:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "195:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
              "file": "../utils/introspection/ERC165.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1343,
              "src": "233:57:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 6,
                    "name": "ERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1342,
                    "src": "241:6:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 9,
                    "name": "Context",
                    "nameLocations": [
                      "1988:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "1988:7:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1988:7:0"
                },
                {
                  "baseName": {
                    "id": 11,
                    "name": "IAccessControl",
                    "nameLocations": [
                      "1997:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 378,
                    "src": "1997:14:0"
                  },
                  "id": 12,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1997:14:0"
                },
                {
                  "baseName": {
                    "id": 13,
                    "name": "ERC165",
                    "nameLocations": [
                      "2013:6:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1342,
                    "src": "2013:6:0"
                  },
                  "id": 14,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2013:6:0"
                }
              ],
              "canonicalName": "AccessControl",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 8,
                "nodeType": "StructuredDocumentation",
                "src": "292:1660:0",
                "text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
              },
              "fullyImplemented": true,
              "id": 295,
              "linearizedBaseContracts": [
                295,
                1342,
                1354,
                378,
                1210
              ],
              "name": "AccessControl",
              "nameLocation": "1971:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "AccessControl.RoleData",
                  "id": 21,
                  "members": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "hasRole",
                      "nameLocation": "2085:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2052:40:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "typeName": {
                        "id": 17,
                        "keyName": "account",
                        "keyNameLocation": "2068:7:0",
                        "keyType": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2052:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 16,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2079:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 20,
                      "mutability": "mutable",
                      "name": "adminRole",
                      "nameLocation": "2110:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2102:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2102:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RoleData",
                  "nameLocation": "2033:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 295,
                  "src": "2026:100:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_roles",
                  "nameLocation": "2174:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2132:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                    "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                  },
                  "typeName": {
                    "id": 25,
                    "keyName": "role",
                    "keyNameLocation": "2148:4:0",
                    "keyType": {
                      "id": 22,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2132:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                      "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 24,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 23,
                        "name": "RoleData",
                        "nameLocations": [
                          "2156:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 21,
                        "src": "2156:8:0"
                      },
                      "referencedDeclaration": 21,
                      "src": "2156:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
                        "typeString": "struct AccessControl.RoleData"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "functionSelector": "a217fddf",
                  "id": 29,
                  "mutability": "constant",
                  "name": "DEFAULT_ADMIN_ROLE",
                  "nameLocation": "2211:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2187:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "30783030",
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2232:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x00"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "2454:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "2475:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 34,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 93,
                            "src": "2464:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2464:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "2464:16:0"
                      },
                      {
                        "id": 38,
                        "nodeType": "PlaceholderStatement",
                        "src": "2490:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 30,
                    "nodeType": "StructuredDocumentation",
                    "src": "2243:174:0",
                    "text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
                  },
                  "id": 40,
                  "name": "onlyRole",
                  "nameLocation": "2431:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2448:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2440:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2439:14:0"
                  },
                  "src": "2422:76:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1341
                  ],
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "2656:111:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "2673:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 51,
                                    "name": "IAccessControl",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "2693:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  ],
                                  "id": 50,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967269,
                                  "src": "2688:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2688:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
                                  "typeString": "type(contract IAccessControl)"
                                }
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2709:11:0",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "2688:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "2673:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 57,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "2748:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "id": 55,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967271,
                                "src": "2724:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
                                  "typeString": "type(contract super AccessControl)"
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2730:17:0",
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1341,
                              "src": "2724:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) view returns (bool)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2724:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2673:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 48,
                        "id": 60,
                        "nodeType": "Return",
                        "src": "2666:94:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "2504:56:0",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 62,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "2574:17:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 45,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2632:8:0"
                  },
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "2599:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2592:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2591:20:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2650:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2649:6:0"
                  },
                  "scope": 295,
                  "src": "2565:202:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    345
                  ],
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "2937:53:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 72,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2954:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 74,
                              "indexExpression": {
                                "id": 73,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2961:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2967:7:0",
                            "memberName": "hasRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "2954:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "id": 76,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "2975:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2954:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 71,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "2947:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 63,
                    "nodeType": "StructuredDocumentation",
                    "src": "2773:76:0",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "2863:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2879:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2871:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2871:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2893:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2885:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2885:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2870:31:0"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2931:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2931:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2930:6:0"
                  },
                  "scope": 295,
                  "src": "2854:136:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "3255:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "3276:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 88,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "3282:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3282:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 114,
                            "src": "3265:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) view"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "3265:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "2996:198:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
                  },
                  "id": 93,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3208:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3227:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "3219:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3219:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3218:14:0"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3255:0:0"
                  },
                  "scope": 295,
                  "src": "3199:103:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "3505:124:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3519:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 102,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "3528:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 103,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "3534:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 101,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "3520:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 112,
                        "nodeType": "IfStatement",
                        "src": "3515:108:0",
                        "trueBody": {
                          "id": 111,
                          "nodeType": "Block",
                          "src": "3544:79:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 107,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "3598:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 108,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96,
                                    "src": "3607:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 106,
                                  "name": "AccessControlUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "3565:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
                                    "typeString": "function (address,bytes32) pure returns (error)"
                                  }
                                },
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3565:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 110,
                              "nodeType": "RevertStatement",
                              "src": "3558:54:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "3308:119:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
                  },
                  "id": 114,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3441:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3460:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3452:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3452:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3474:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3466:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3466:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3451:31:0"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3505:0:0"
                  },
                  "scope": 295,
                  "src": "3432:197:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    353
                  ],
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "3884:46:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 122,
                              "name": "_roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "3901:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                              }
                            },
                            "id": 124,
                            "indexExpression": {
                              "id": 123,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "3908:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3901:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RoleData_$21_storage",
                              "typeString": "struct AccessControl.RoleData storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3914:9:0",
                          "memberName": "adminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "3901:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 121,
                        "id": 126,
                        "nodeType": "Return",
                        "src": "3894:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 115,
                    "nodeType": "StructuredDocumentation",
                    "src": "3635:170:0",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "3819:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3840:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3832:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3832:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3831:14:0"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3875:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3875:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3874:9:0"
                  },
                  "scope": 295,
                  "src": "3810:120:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    361
                  ],
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "4320:42:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 142,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4341:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 143,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "4347:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 141,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "4330:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4330:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "4330:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "3936:285:0",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 147,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 137,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4313:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 136,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4300:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4300:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 139,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 135,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4291:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4291:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4291:28:0"
                    }
                  ],
                  "name": "grantRole",
                  "nameLocation": "4235:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4253:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4245:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4245:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4267:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4259:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4259:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4244:31:0"
                  },
                  "returnParameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4320:0:0"
                  },
                  "scope": 295,
                  "src": "4226:136:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    369
                  ],
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "4737:43:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 161,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4759:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 162,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "4765:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 160,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "4747:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4747:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "4747:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "4368:269:0",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "d547741f",
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 156,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4730:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 155,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4717:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4717:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 158,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 154,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4708:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4708:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4708:28:0"
                    }
                  ],
                  "name": "revokeRole",
                  "nameLocation": "4651:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4670:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4662:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4684:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4676:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4661:31:0"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4737:0:0"
                  },
                  "scope": 295,
                  "src": "4642:138:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    377
                  ],
                  "body": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "5407:166:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 174,
                            "name": "callerConfirmation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5421:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 175,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "5443:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5443:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5421:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 182,
                        "nodeType": "IfStatement",
                        "src": "5417:102:0",
                        "trueBody": {
                          "id": 181,
                          "nodeType": "Block",
                          "src": "5457:62:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 178,
                                  "name": "AccessControlBadConfirmation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "5478:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5478:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 180,
                              "nodeType": "RevertStatement",
                              "src": "5471:37:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 184,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "5541:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 185,
                              "name": "callerConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "5547:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 183,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "5529:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5529:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "5529:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 167,
                    "nodeType": "StructuredDocumentation",
                    "src": "4786:537:0",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "36568abe",
                  "id": 189,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "5337:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5358:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5350:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5350:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "5372:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5364:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5364:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5349:42:0"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5407:0:0"
                  },
                  "scope": 295,
                  "src": "5328:245:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "5771:174:0",
                    "statements": [
                      {
                        "assignments": [
                          198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 198,
                            "mutability": "mutable",
                            "name": "previousAdminRole",
                            "nameLocation": "5789:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "5781:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 197,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5781:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 202,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 200,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5822:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 199,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "5809:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5809:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5781:46:0"
                      },
                      {
                        "expression": {
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 203,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "5837:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 205,
                              "indexExpression": {
                                "id": 204,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "5844:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5837:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5850:9:0",
                            "memberName": "adminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "5837:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 207,
                            "name": "adminRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "5862:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5837:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "5837:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 211,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5903:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 212,
                              "name": "previousAdminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "5909:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 213,
                              "name": "adminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "5928:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 210,
                            "name": "RoleAdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "5886:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32,bytes32)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5886:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "EmitStatement",
                        "src": "5881:57:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 190,
                    "nodeType": "StructuredDocumentation",
                    "src": "5579:114:0",
                    "text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
                  },
                  "id": 217,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setRoleAdmin",
                  "nameLocation": "5707:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5729:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5721:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5721:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "adminRole",
                        "nameLocation": "5743:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5735:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5735:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5720:33:0"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5771:0:0"
                  },
                  "scope": 295,
                  "src": "5698:247:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 255,
                    "nodeType": "Block",
                    "src": "6262:233:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6276:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 228,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6285:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 229,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "6291:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 227,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "6277:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6277:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 253,
                          "nodeType": "Block",
                          "src": "6452:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6473:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 226,
                              "id": 252,
                              "nodeType": "Return",
                              "src": "6466:12:0"
                            }
                          ]
                        },
                        "id": 254,
                        "nodeType": "IfStatement",
                        "src": "6272:217:0",
                        "trueBody": {
                          "id": 250,
                          "nodeType": "Block",
                          "src": "6301:145:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 232,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6315:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 234,
                                      "indexExpression": {
                                        "id": 233,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 220,
                                        "src": "6322:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6315:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6328:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6315:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 237,
                                  "indexExpression": {
                                    "id": 236,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6336:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6315:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6347:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "6315:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 240,
                              "nodeType": "ExpressionStatement",
                              "src": "6315:36:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 242,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 220,
                                    "src": "6382:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 243,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6388:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 244,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1192,
                                      "src": "6397:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6397:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 241,
                                  "name": "RoleGranted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "6370:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6370:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 247,
                              "nodeType": "EmitStatement",
                              "src": "6365:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6431:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 226,
                              "id": 249,
                              "nodeType": "Return",
                              "src": "6424:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 218,
                    "nodeType": "StructuredDocumentation",
                    "src": "5951:223:0",
                    "text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
                  },
                  "id": 256,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_grantRole",
                  "nameLocation": "6188:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6207:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6199:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6199:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6221:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6213:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6213:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6198:31:0"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6256:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6256:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6255:6:0"
                  },
                  "scope": 295,
                  "src": "6179:316:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "6816:233:0",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 267,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "6838:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 268,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "6844:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 266,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "6830:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6830:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 291,
                          "nodeType": "Block",
                          "src": "7006:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7027:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 265,
                              "id": 290,
                              "nodeType": "Return",
                              "src": "7020:12:0"
                            }
                          ]
                        },
                        "id": 292,
                        "nodeType": "IfStatement",
                        "src": "6826:217:0",
                        "trueBody": {
                          "id": 288,
                          "nodeType": "Block",
                          "src": "6854:146:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 270,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6868:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 272,
                                      "indexExpression": {
                                        "id": 271,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 259,
                                        "src": "6875:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6868:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 273,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6881:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6868:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 275,
                                  "indexExpression": {
                                    "id": 274,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6889:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6868:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6900:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6868:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 278,
                              "nodeType": "ExpressionStatement",
                              "src": "6868:37:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 280,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 259,
                                    "src": "6936:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 281,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6942:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 282,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1192,
                                      "src": "6951:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6951:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 279,
                                  "name": "RoleRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 335,
                                  "src": "6924:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6924:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 285,
                              "nodeType": "EmitStatement",
                              "src": "6919:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6985:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 265,
                              "id": 287,
                              "nodeType": "Return",
                              "src": "6978:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 257,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:226:0",
                    "text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
                  },
                  "id": 294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revokeRole",
                  "nameLocation": "6741:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6761:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6753:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6753:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6775:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6767:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6767:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6752:31:0"
                  },
                  "returnParameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6810:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6810:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6809:6:0"
                  },
                  "scope": 295,
                  "src": "6732:317:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 296,
              "src": "1953:5098:0",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "108:6944:0"
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
          "exportedSymbols": {
            "IAccessControl": [
              378
            ]
          },
          "id": 379,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 297,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAccessControl",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 298,
                "nodeType": "StructuredDocumentation",
                "src": "135:90:1",
                "text": " @dev External interface of AccessControl declared to support ERC-165 detection."
              },
              "fullyImplemented": false,
              "id": 378,
              "linearizedBaseContracts": [
                378
              ],
              "name": "IAccessControl",
              "nameLocation": "236:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 299,
                    "nodeType": "StructuredDocumentation",
                    "src": "257:56:1",
                    "text": " @dev The `account` is missing a role."
                  },
                  "errorSelector": "e2517d3f",
                  "id": 305,
                  "name": "AccessControlUnauthorizedAccount",
                  "nameLocation": "324:32:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "365:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "357:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "357:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "neededRole",
                        "nameLocation": "382:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "374:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "356:37:1"
                  },
                  "src": "318:76:1"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "400:148:1",
                    "text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
                  },
                  "errorSelector": "6697b232",
                  "id": 308,
                  "name": "AccessControlBadConfirmation",
                  "nameLocation": "559:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "587:2:1"
                  },
                  "src": "553:37:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 309,
                    "nodeType": "StructuredDocumentation",
                    "src": "596:254:1",
                    "text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
                  },
                  "eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
                  "id": 317,
                  "name": "RoleAdminChanged",
                  "nameLocation": "861:16:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "894:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "878:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "878:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 313,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousAdminRole",
                        "nameLocation": "916:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "900:33:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "900:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 315,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAdminRole",
                        "nameLocation": "951:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "935:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "935:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "877:87:1"
                  },
                  "src": "855:110:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "971:295:1",
                    "text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
                  },
                  "eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
                  "id": 326,
                  "name": "RoleGranted",
                  "nameLocation": "1277:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1305:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1289:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1327:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1311:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1311:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1352:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1336:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1288:71:1"
                  },
                  "src": "1271:89:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 327,
                    "nodeType": "StructuredDocumentation",
                    "src": "1366:275:1",
                    "text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
                  },
                  "eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
                  "id": 335,
                  "name": "RoleRevoked",
                  "nameLocation": "1652:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 329,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1680:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1664:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1702:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1686:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1686:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1727:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1711:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1711:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:71:1"
                  },
                  "src": "1646:89:1"
                },
                {
                  "documentation": {
                    "id": 336,
                    "nodeType": "StructuredDocumentation",
                    "src": "1741:76:1",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 345,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "1831:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1847:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1839:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1839:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1861:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1853:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1853:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1838:31:1"
                  },
                  "returnParameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1893:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1892:6:1"
                  },
                  "scope": 378,
                  "src": "1822:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1905:184:1",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "2103:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2124:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2116:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2115:14:1"
                  },
                  "returnParameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2153:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2152:9:1"
                  },
                  "scope": 378,
                  "src": "2094:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 354,
                    "nodeType": "StructuredDocumentation",
                    "src": "2168:239:1",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 361,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "grantRole",
                  "nameLocation": "2421:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2439:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2431:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2431:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2453:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2445:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2445:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2430:31:1"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2470:0:1"
                  },
                  "scope": 378,
                  "src": "2412:59:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "2477:223:1",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "d547741f",
                  "id": 369,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeRole",
                  "nameLocation": "2714:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2733:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2725:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2747:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2739:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2724:31:1"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2764:0:1"
                  },
                  "scope": 378,
                  "src": "2705:60:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "2771:491:1",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
                  },
                  "functionSelector": "36568abe",
                  "id": 377,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "3276:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3297:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3289:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "3311:18:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3303:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3303:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3288:42:1"
                  },
                  "returnParameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3339:0:1"
                  },
                  "scope": 378,
                  "src": "3267:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 379,
              "src": "226:3116:1",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "109:3234:1"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "id": 2,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              515
            ],
            "IERC20Errors": [
              420
            ],
            "IERC721Errors": [
              468
            ]
          },
          "id": 516,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 380,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 381,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:2",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 420,
              "linearizedBaseContracts": [
                420
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 390,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "654:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "670:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "687:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:2"
                  },
                  "src": "623:80:2"
                },
                {
                  "documentation": {
                    "id": 391,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 395,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 395,
                        "src": "891:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:2"
                  },
                  "src": "866:41:2"
                },
                {
                  "documentation": {
                    "id": 396,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 400,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "1104:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:2"
                  },
                  "src": "1077:45:2"
                },
                {
                  "documentation": {
                    "id": 401,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:2",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 409,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1511:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1528:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1547:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:2"
                  },
                  "src": "1478:85:2"
                },
                {
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 414,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "1775:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:2"
                  },
                  "src": "1748:45:2"
                },
                {
                  "documentation": {
                    "id": 415,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:2",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 419,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 419,
                        "src": "2025:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:2"
                  },
                  "src": "1999:43:2"
                }
              ],
              "scope": 516,
              "src": "280:1764:2",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 421,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:2",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 468,
              "linearizedBaseContracts": [
                468
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 422,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:2",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 426,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "2469:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:2"
                  },
                  "src": "2444:40:2"
                },
                {
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:2",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 431,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "2656:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:2"
                  },
                  "src": "2627:46:2"
                },
                {
                  "documentation": {
                    "id": 432,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:2",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 440,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3000:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3016:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3033:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:2"
                  },
                  "src": "2973:75:2"
                },
                {
                  "documentation": {
                    "id": 441,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 445,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "3237:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:2"
                  },
                  "src": "3211:42:2"
                },
                {
                  "documentation": {
                    "id": 446,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 450,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3451:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:2"
                  },
                  "src": "3423:46:2"
                },
                {
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 457,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3760:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3778:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:2"
                  },
                  "src": "3727:68:2"
                },
                {
                  "documentation": {
                    "id": 458,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 462,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "4008:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:2"
                  },
                  "src": "3980:46:2"
                },
                {
                  "documentation": {
                    "id": 463,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 467,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 465,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 467,
                        "src": "4262:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:2"
                  },
                  "src": "4234:46:2"
                }
              ],
              "scope": 516,
              "src": "2190:2092:2",
              "usedErrors": [
                426,
                431,
                440,
                445,
                450,
                457,
                462,
                467
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 469,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:2",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 515,
              "linearizedBaseContracts": [
                515
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 470,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 480,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 472,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4860:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 471,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4876:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4893:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4909:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:2"
                  },
                  "src": "4827:99:2"
                },
                {
                  "documentation": {
                    "id": 481,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 485,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "5116:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:2"
                  },
                  "src": "5089:43:2"
                },
                {
                  "documentation": {
                    "id": 486,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 490,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 490,
                        "src": "5331:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:2"
                  },
                  "src": "5302:47:2"
                },
                {
                  "documentation": {
                    "id": 491,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 497,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 496,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "5651:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 495,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "5669:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 494,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:2"
                  },
                  "src": "5616:68:2"
                },
                {
                  "documentation": {
                    "id": 498,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 502,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 501,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 502,
                        "src": "5898:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:2"
                  },
                  "src": "5869:47:2"
                },
                {
                  "documentation": {
                    "id": 503,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 507,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 506,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "6153:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:2"
                  },
                  "src": "6124:47:2"
                },
                {
                  "documentation": {
                    "id": 508,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:2",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 514,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6494:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6513:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:2"
                  },
                  "src": "6462:73:2"
                }
              ],
              "scope": 516,
              "src": "4430:2107:2",
              "usedErrors": [
                480,
                485,
                490,
                497,
                502,
                507,
                514
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:2"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "id": 3,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "ERC20": [
              1030
            ],
            "IERC20": [
              1108
            ],
            "IERC20Errors": [
              420
            ],
            "IERC20Metadata": [
              1180
            ]
          },
          "id": 1031,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 517,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 519,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1109,
              "src": "131:36:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 518,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "139:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 521,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1181,
              "src": "168:63:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 520,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1180,
                    "src": "176:14:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 523,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1211,
              "src": "232:48:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 522,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "240:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 525,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 516,
              "src": "281:65:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 524,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 420,
                    "src": "289:12:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 527,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "1133:7:3"
                  },
                  "id": 528,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:3"
                },
                {
                  "baseName": {
                    "id": 529,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1108,
                    "src": "1142:6:3"
                  },
                  "id": 530,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:3"
                },
                {
                  "baseName": {
                    "id": 531,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1180,
                    "src": "1150:14:3"
                  },
                  "id": 532,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:3"
                },
                {
                  "baseName": {
                    "id": 533,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 420,
                    "src": "1166:12:3"
                  },
                  "id": 534,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:3"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 526,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:3",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 1030,
              "linearizedBaseContracts": [
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1185:53:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 537,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:3",
                    "keyType": {
                      "id": 535,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 536,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1245:83:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 543,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:3",
                    "keyType": {
                      "id": 539,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 542,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:3",
                      "keyType": {
                        "id": 540,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1335:28:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1370:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1396:22:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 566,
                    "nodeType": "Block",
                    "src": "1638:57:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 558,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "1648:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 559,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "1656:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 561,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:3"
                      },
                      {
                        "expression": {
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 562,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 550,
                            "src": "1671:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 563,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "1681:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 565,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 551,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:3",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 567,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "1594:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "1615:21:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:3"
                  },
                  "returnParameters": {
                    "id": 557,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:3"
                  },
                  "scope": 1030,
                  "src": "1582:113:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1167
                  ],
                  "body": {
                    "id": 575,
                    "nodeType": "Block",
                    "src": "1820:29:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 573,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "1837:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 572,
                        "id": 574,
                        "nodeType": "Return",
                        "src": "1830:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 568,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 576,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 569,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:3"
                  },
                  "returnParameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "1805:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:3"
                  },
                  "scope": 1030,
                  "src": "1760:89:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1173
                  ],
                  "body": {
                    "id": 584,
                    "nodeType": "Block",
                    "src": "2024:31:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 582,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "2041:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 581,
                        "id": 583,
                        "nodeType": "Return",
                        "src": "2034:14:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 577,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:3",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 585,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:3"
                  },
                  "returnParameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "2009:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:3"
                  },
                  "scope": 1030,
                  "src": "1962:93:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1179
                  ],
                  "body": {
                    "id": 593,
                    "nodeType": "Block",
                    "src": "2744:26:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 590,
                        "id": 592,
                        "nodeType": "Return",
                        "src": "2754:9:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 586,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:3",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:3"
                  },
                  "returnParameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "2737:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:3"
                  },
                  "scope": 1030,
                  "src": "2688:82:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1057
                  ],
                  "body": {
                    "id": 602,
                    "nodeType": "Block",
                    "src": "2891:36:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 600,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "2908:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 599,
                        "id": 601,
                        "nodeType": "Return",
                        "src": "2901:19:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 595,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:3",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 603,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:3"
                  },
                  "returnParameters": {
                    "id": 599,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 603,
                        "src": "2882:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:3"
                  },
                  "scope": 1030,
                  "src": "2830:97:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1065
                  ],
                  "body": {
                    "id": 615,
                    "nodeType": "Block",
                    "src": "3059:42:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 611,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "3076:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 613,
                          "indexExpression": {
                            "id": 612,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "3086:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 610,
                        "id": 614,
                        "nodeType": "Return",
                        "src": "3069:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 604,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:3",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 616,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 607,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 606,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "3004:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 605,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:3"
                  },
                  "returnParameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "3050:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:3"
                  },
                  "scope": 1030,
                  "src": "2985:116:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1075
                  ],
                  "body": {
                    "id": 639,
                    "nodeType": "Block",
                    "src": "3371:103:3",
                    "statements": [
                      {
                        "assignments": [
                          627
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 627,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 639,
                            "src": "3381:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 626,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 630,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 628,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "3397:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 632,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "3429:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 633,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "3436:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 621,
                              "src": "3440:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 631,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "3419:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 636,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 625,
                        "id": 638,
                        "nodeType": "Return",
                        "src": "3456:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 617,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:3",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 640,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3314:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3326:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:3"
                  },
                  "returnParameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3365:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:3"
                  },
                  "scope": 1030,
                  "src": "3296:178:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1085
                  ],
                  "body": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "3621:51:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 650,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "3638:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 652,
                            "indexExpression": {
                              "id": 651,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 643,
                              "src": "3650:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 654,
                          "indexExpression": {
                            "id": 653,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "3657:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 649,
                        "id": 655,
                        "nodeType": "Return",
                        "src": "3631:34:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 641,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:3",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 657,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3551:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3566:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:3"
                  },
                  "returnParameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3612:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:3"
                  },
                  "scope": 1030,
                  "src": "3532:140:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1095
                  ],
                  "body": {
                    "id": 680,
                    "nodeType": "Block",
                    "src": "4058:107:3",
                    "statements": [
                      {
                        "assignments": [
                          668
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 668,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 680,
                            "src": "4068:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 667,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 671,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 669,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "4084:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 673,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4115:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 674,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "4122:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 675,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 662,
                              "src": "4131:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 672,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              921,
                              981
                            ],
                            "referencedDeclaration": 921,
                            "src": "4106:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 677,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 666,
                        "id": 679,
                        "nodeType": "Return",
                        "src": "4147:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 658,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:3",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 681,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 660,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "3996:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 659,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "4013:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:3"
                  },
                  "returnParameters": {
                    "id": 666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 665,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "4052:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:3"
                  },
                  "scope": 1030,
                  "src": "3979:186:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1107
                  ],
                  "body": {
                    "id": 712,
                    "nodeType": "Block",
                    "src": "4850:151:3",
                    "statements": [
                      {
                        "assignments": [
                          694
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 694,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 712,
                            "src": "4860:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 693,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 697,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 695,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "4878:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 699,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4916:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 700,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "4922:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 701,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "4931:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 698,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "4900:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 705,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4957:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 706,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "4963:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 707,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "4967:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 704,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "4947:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 709,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 692,
                        "id": 711,
                        "nodeType": "Return",
                        "src": "4983:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 682,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:3",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 713,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 689,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4779:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4793:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 688,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4805:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:3"
                  },
                  "returnParameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4844:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:3"
                  },
                  "scope": 1030,
                  "src": "4757:244:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 759,
                    "nodeType": "Block",
                    "src": "5443:231:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 723,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 716,
                            "src": "5457:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 724,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 737,
                        "nodeType": "IfStatement",
                        "src": "5453:86:3",
                        "trueBody": {
                          "id": 736,
                          "nodeType": "Block",
                          "src": "5477:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 732,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 731,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 730,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 733,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 729,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "5498:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 735,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 738,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "5552:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 739,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 752,
                        "nodeType": "IfStatement",
                        "src": "5548:86:3",
                        "trueBody": {
                          "id": 751,
                          "nodeType": "Block",
                          "src": "5570:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 746,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 745,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 744,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "5591:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 750,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 754,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "5651:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 755,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "5657:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 756,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "5661:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 753,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "5643:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 758,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 714,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 760,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 716,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5393:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 718,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5407:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5419:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:3"
                  },
                  "returnParameters": {
                    "id": 722,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:3"
                  },
                  "scope": 1030,
                  "src": "5374:300:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 836,
                    "nodeType": "Block",
                    "src": "6064:1032:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 770,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "6078:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 771,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 807,
                          "nodeType": "Block",
                          "src": "6252:362:3",
                          "statements": [
                            {
                              "assignments": [
                                782
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 782,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 807,
                                  "src": "6266:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 781,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 786,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 783,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 538,
                                  "src": "6288:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 785,
                                "indexExpression": {
                                  "id": 784,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "6298:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 787,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 782,
                                  "src": "6321:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 788,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "6335:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 797,
                              "nodeType": "IfStatement",
                              "src": "6317:115:3",
                              "trueBody": {
                                "id": 796,
                                "nodeType": "Block",
                                "src": "6342:90:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 791,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 763,
                                          "src": "6392:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 792,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 782,
                                          "src": "6398:11:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 793,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 767,
                                          "src": "6411:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 790,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 390,
                                        "src": "6367:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 795,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 806,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 798,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "6552:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 800,
                                      "indexExpression": {
                                        "id": 799,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 763,
                                        "src": "6562:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 803,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 801,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 782,
                                        "src": "6570:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 802,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 767,
                                        "src": "6584:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 805,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 808,
                        "nodeType": "IfStatement",
                        "src": "6074:540:3",
                        "trueBody": {
                          "id": 780,
                          "nodeType": "Block",
                          "src": "6098:148:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 776,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 546,
                                  "src": "6214:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 777,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "6230:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 779,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 809,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "6628:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 810,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 828,
                          "nodeType": "Block",
                          "src": "6843:206:3",
                          "statements": [
                            {
                              "id": 827,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 821,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "7002:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 823,
                                      "indexExpression": {
                                        "id": 822,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 765,
                                        "src": "7012:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 824,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "7019:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 826,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 829,
                        "nodeType": "IfStatement",
                        "src": "6624:425:3",
                        "trueBody": {
                          "id": 820,
                          "nodeType": "Block",
                          "src": "6646:191:3",
                          "statements": [
                            {
                              "id": 819,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 817,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 815,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 546,
                                      "src": "6791:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 816,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "6807:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 818,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:3"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 831,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "7073:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 832,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "7079:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 833,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "7083:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 830,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "7064:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 835,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 761,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:3",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 837,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 768,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 763,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6006:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 765,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6020:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6032:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:3"
                  },
                  "returnParameters": {
                    "id": 769,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:3"
                  },
                  "scope": 1030,
                  "src": "5989:1107:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 869,
                    "nodeType": "Block",
                    "src": "7495:152:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 845,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 840,
                            "src": "7509:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 846,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 859,
                        "nodeType": "IfStatement",
                        "src": "7505:91:3",
                        "trueBody": {
                          "id": 858,
                          "nodeType": "Block",
                          "src": "7532:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 853,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 852,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 851,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "7553:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 857,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 861,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 865,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "7625:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 866,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "7634:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 860,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "7605:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 838,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:3",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 870,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 840,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7454:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7471:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:3"
                  },
                  "returnParameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:3"
                  },
                  "scope": 1030,
                  "src": "7439:208:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "8021:150:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 878,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "8035:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 879,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 892,
                        "nodeType": "IfStatement",
                        "src": "8031:89:3",
                        "trueBody": {
                          "id": 891,
                          "nodeType": "Block",
                          "src": "8058:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 887,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 886,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 885,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 888,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 884,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "8079:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 890,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 894,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "8137:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 895,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 899,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "8158:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 893,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "8129:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 901,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 871,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:3",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 903,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 873,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "7980:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "7997:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:3"
                  },
                  "returnParameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:3"
                  },
                  "scope": 1030,
                  "src": "7965:206:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 920,
                    "nodeType": "Block",
                    "src": "8781:54:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 914,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "8800:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 915,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "8807:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 916,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "8816:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 913,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              921,
                              981
                            ],
                            "referencedDeclaration": 981,
                            "src": "8791:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 904,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:3",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 921,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8725:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8740:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8757:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:3"
                  },
                  "returnParameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:3"
                  },
                  "scope": 1030,
                  "src": "8707:128:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 980,
                    "nodeType": "Block",
                    "src": "9780:334:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 933,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 924,
                            "src": "9794:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 934,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 947,
                        "nodeType": "IfStatement",
                        "src": "9790:89:3",
                        "trueBody": {
                          "id": 946,
                          "nodeType": "Block",
                          "src": "9815:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 942,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 941,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 940,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 943,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 939,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "9836:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 945,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 948,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "9892:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 949,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 962,
                        "nodeType": "IfStatement",
                        "src": "9888:90:3",
                        "trueBody": {
                          "id": 961,
                          "nodeType": "Block",
                          "src": "9915:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 957,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 955,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 958,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 954,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 419,
                                  "src": "9936:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 960,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 963,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 544,
                                "src": "9987:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 966,
                              "indexExpression": {
                                "id": 964,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 924,
                                "src": "9999:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 967,
                            "indexExpression": {
                              "id": 965,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 926,
                              "src": "10006:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 968,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "10017:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 970,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:3"
                      },
                      {
                        "condition": {
                          "id": 971,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "10036:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 979,
                        "nodeType": "IfStatement",
                        "src": "10032:76:3",
                        "trueBody": {
                          "id": 978,
                          "nodeType": "Block",
                          "src": "10047:61:3",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 973,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 924,
                                    "src": "10075:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 974,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 926,
                                    "src": "10082:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 975,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 928,
                                    "src": "10091:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 972,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1051,
                                  "src": "10066:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 977,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 922,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:3",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 981,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9700:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 926,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9715:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 925,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9732:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9747:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:3"
                  },
                  "returnParameters": {
                    "id": 932,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:3"
                  },
                  "scope": 1030,
                  "src": "9682:432:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1028,
                    "nodeType": "Block",
                    "src": "10485:387:3",
                    "statements": [
                      {
                        "assignments": [
                          992
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 992,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1028,
                            "src": "10495:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 991,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 997,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 994,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "10532:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 995,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "10539:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 993,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "10522:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 998,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 992,
                            "src": "10561:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1000,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:3",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 999,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "10580:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:3",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1027,
                        "nodeType": "IfStatement",
                        "src": "10557:309:3",
                        "trueBody": {
                          "id": 1026,
                          "nodeType": "Block",
                          "src": "10599:267:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1005,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 992,
                                  "src": "10617:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1006,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 988,
                                  "src": "10636:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1015,
                              "nodeType": "IfStatement",
                              "src": "10613:130:3",
                              "trueBody": {
                                "id": 1014,
                                "nodeType": "Block",
                                "src": "10643:100:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1009,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 986,
                                          "src": "10695:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1010,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 992,
                                          "src": "10704:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1011,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 988,
                                          "src": "10722:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1008,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 409,
                                        "src": "10668:26:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1012,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1013,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1025,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1017,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 984,
                                        "src": "10793:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1018,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 986,
                                        "src": "10800:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1021,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1019,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 992,
                                          "src": "10809:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1020,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 988,
                                          "src": "10828:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 1022,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1016,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        921,
                                        981
                                      ],
                                      "referencedDeclaration": 981,
                                      "src": "10784:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 1023,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1024,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:3"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 982,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:3",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 1029,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 989,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10421:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 986,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10436:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10453:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:3"
                  },
                  "returnParameters": {
                    "id": 990,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:3"
                  },
                  "scope": 1030,
                  "src": "10396:476:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1031,
              "src": "1106:9768:3",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "105:10770:3"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "id": 4,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1108
            ]
          },
          "id": 1109,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1032,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1033,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:4",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 1108,
              "linearizedBaseContracts": [
                1108
              ],
              "name": "IERC20",
              "nameLocation": "214:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1034,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1042,
                  "name": "Transfer",
                  "nameLocation": "396:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1036,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "405:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1035,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1038,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "427:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1040,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "447:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:4"
                  },
                  "src": "390:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1043,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1051,
                  "name": "Approval",
                  "nameLocation": "627:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1045,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "636:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1047,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "659:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "684:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:4"
                  },
                  "src": "621:78:4"
                },
                {
                  "documentation": {
                    "id": 1052,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1057,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:4"
                  },
                  "returnParameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1055,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1057,
                        "src": "821:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:4"
                  },
                  "scope": 1108,
                  "src": "775:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1058,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1065,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1060,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "931:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1059,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:4"
                  },
                  "returnParameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1063,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "971:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:4"
                  },
                  "scope": 1108,
                  "src": "912:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1066,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1075,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1222:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1070,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1234:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:4"
                  },
                  "returnParameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1073,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1267:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:4"
                  },
                  "scope": 1108,
                  "src": "1204:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1076,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1085,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1567:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1080,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1582:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:4"
                  },
                  "returnParameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1622:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:4"
                  },
                  "scope": 1108,
                  "src": "1548:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1086,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1095,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2326:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2343:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:4"
                  },
                  "returnParameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1093,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2376:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1092,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:4"
                  },
                  "scope": 1108,
                  "src": "2309:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1096,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1107,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1098,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2712:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1100,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2726:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1099,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2738:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:4"
                  },
                  "returnParameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2771:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:4"
                  },
                  "scope": 1108,
                  "src": "2690:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1109,
              "src": "204:2575:4",
              "usedErrors": [],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "106:2674:4"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "id": 5,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "ERC20": [
              1030
            ],
            "ERC20Burnable": [
              1154
            ]
          },
          "id": 1155,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1110,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 1112,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1155,
              "sourceUnit": 1031,
              "src": "150:35:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1111,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1030,
                    "src": "158:5:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../../utils/Context.sol",
              "id": 1114,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1155,
              "sourceUnit": 1211,
              "src": "186:51:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1113,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "194:7:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1116,
                    "name": "Context",
                    "nameLocations": [
                      "483:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "483:7:5"
                  },
                  "id": 1117,
                  "nodeType": "InheritanceSpecifier",
                  "src": "483:7:5"
                },
                {
                  "baseName": {
                    "id": 1118,
                    "name": "ERC20",
                    "nameLocations": [
                      "492:5:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "492:5:5"
                  },
                  "id": 1119,
                  "nodeType": "InheritanceSpecifier",
                  "src": "492:5:5"
                }
              ],
              "canonicalName": "ERC20Burnable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1115,
                "nodeType": "StructuredDocumentation",
                "src": "239:208:5",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 1154,
              "linearizedBaseContracts": [
                1154,
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "ERC20Burnable",
              "nameLocation": "466:13:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1131,
                    "nodeType": "Block",
                    "src": "662:43:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1126,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "678:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "678:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1128,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1122,
                              "src": "692:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1125,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "672:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1130,
                        "nodeType": "ExpressionStatement",
                        "src": "672:26:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1120,
                    "nodeType": "StructuredDocumentation",
                    "src": "504:109:5",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 1132,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "627:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "640:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "632:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:15:5"
                  },
                  "returnParameters": {
                    "id": 1124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "662:0:5"
                  },
                  "scope": 1154,
                  "src": "618:87:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1152,
                    "nodeType": "Block",
                    "src": "1086:93:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1141,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "1112:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1142,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "1121:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1121:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1144,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "1135:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1140,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "1096:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:45:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:45:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1148,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "1157:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1149,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "1166:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1147,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "1151:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1151,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:21:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1133,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:305:5",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 1153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1030:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1135,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1047:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "1039:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1064:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "1056:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:32:5"
                  },
                  "returnParameters": {
                    "id": 1139,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1086:0:5"
                  },
                  "scope": 1154,
                  "src": "1021:158:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1155,
              "src": "448:733:5",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "124:1058:5"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "id": 6,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1108
            ],
            "IERC20Metadata": [
              1180
            ]
          },
          "id": 1181,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1156,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1158,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1181,
              "sourceUnit": 1109,
              "src": "151:37:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1157,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "159:6:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1160,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1108,
                    "src": "306:6:6"
                  },
                  "id": 1161,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:6"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1159,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:6",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 1180,
              "linearizedBaseContracts": [
                1180,
                1108
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1162,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:6",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1167,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1163,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:6"
                  },
                  "returnParameters": {
                    "id": 1166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1165,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "417:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1164,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:6"
                  },
                  "scope": 1180,
                  "src": "378:54:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1168,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:6",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1173,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:6"
                  },
                  "returnParameters": {
                    "id": 1172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1171,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1173,
                        "src": "540:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1170,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:6"
                  },
                  "scope": 1180,
                  "src": "499:56:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1174,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:6",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1179,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:6"
                  },
                  "returnParameters": {
                    "id": 1178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1177,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1179,
                        "src": "674:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1176,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:6"
                  },
                  "scope": 1180,
                  "src": "631:50:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1181,
              "src": "278:405:6",
              "usedErrors": [],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "125:559:6"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "id": 7,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ]
          },
          "id": 1211,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1182,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:7"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1183,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:7",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1210,
              "linearizedBaseContracts": [
                1210
              ],
              "name": "Context",
              "nameLocation": "642:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1191,
                    "nodeType": "Block",
                    "src": "718:34:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1188,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "735:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1187,
                        "id": 1190,
                        "nodeType": "Return",
                        "src": "728:17:7"
                      }
                    ]
                  },
                  "id": 1192,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1184,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:7"
                  },
                  "returnParameters": {
                    "id": 1187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1186,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1192,
                        "src": "709:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:7"
                  },
                  "scope": 1210,
                  "src": "656:96:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1200,
                    "nodeType": "Block",
                    "src": "825:32:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1197,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "842:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:7",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1196,
                        "id": 1199,
                        "nodeType": "Return",
                        "src": "835:15:7"
                      }
                    ]
                  },
                  "id": 1201,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1193,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:7"
                  },
                  "returnParameters": {
                    "id": 1196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1195,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "809:14:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:7"
                  },
                  "scope": 1210,
                  "src": "758:99:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1208,
                    "nodeType": "Block",
                    "src": "935:25:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1205,
                        "id": 1207,
                        "nodeType": "Return",
                        "src": "945:8:7"
                      }
                    ]
                  },
                  "id": 1209,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1202,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:7"
                  },
                  "returnParameters": {
                    "id": 1205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1204,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "926:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:7"
                  },
                  "scope": 1210,
                  "src": "863:97:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1211,
              "src": "624:338:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:7"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "id": 8,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "Pausable": [
              1318
            ]
          },
          "id": 1319,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1212,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1214,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1319,
              "sourceUnit": 1211,
              "src": "128:45:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1213,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "136:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1216,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "645:7:8"
                  },
                  "id": 1217,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:8"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1215,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:8",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 1318,
              "linearizedBaseContracts": [
                1318,
                1210
              ],
              "name": "Pausable",
              "nameLocation": "633:8:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "659:20:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1220,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:8",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 1224,
                  "name": "Paused",
                  "nameLocation": "770:6:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1222,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1224,
                        "src": "777:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:8"
                  },
                  "src": "764:30:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1225,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:8",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 1229,
                  "name": "Unpaused",
                  "nameLocation": "881:8:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1227,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "890:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:8"
                  },
                  "src": "875:32:8"
                },
                {
                  "documentation": {
                    "id": 1230,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:8",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 1232,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1231,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:8"
                  },
                  "src": "994:22:8"
                },
                {
                  "documentation": {
                    "id": 1233,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:8",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 1235,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:8"
                  },
                  "src": "1107:22:8"
                },
                {
                  "body": {
                    "id": 1242,
                    "nodeType": "Block",
                    "src": "1340:47:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1238,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1272,
                            "src": "1350:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1240,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:8"
                      },
                      {
                        "id": 1241,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1236,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:8",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1243,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:8"
                  },
                  "src": "1315:72:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1250,
                    "nodeType": "Block",
                    "src": "1587:44:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1246,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1285,
                            "src": "1597:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1248,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:8"
                      },
                      {
                        "id": 1249,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1244,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:8",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1251,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:8"
                  },
                  "src": "1565:66:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1259,
                    "nodeType": "Block",
                    "src": "1779:31:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1257,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "1796:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1256,
                        "id": 1258,
                        "nodeType": "Return",
                        "src": "1789:14:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1252,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:8",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 1260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1253,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:8"
                  },
                  "returnParameters": {
                    "id": 1256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1255,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "1773:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1254,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:8"
                  },
                  "scope": 1318,
                  "src": "1726:84:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1271,
                    "nodeType": "Block",
                    "src": "1929:77:8",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1264,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "1943:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1270,
                        "nodeType": "IfStatement",
                        "src": "1939:61:8",
                        "trueBody": {
                          "id": 1269,
                          "nodeType": "Block",
                          "src": "1953:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1266,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "1974:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1268,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1261,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:8",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 1272,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1262,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:8"
                  },
                  "returnParameters": {
                    "id": 1263,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:8"
                  },
                  "scope": 1318,
                  "src": "1878:128:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1284,
                    "nodeType": "Block",
                    "src": "2126:78:8",
                    "statements": [
                      {
                        "condition": {
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:8",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1276,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1260,
                              "src": "2141:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1283,
                        "nodeType": "IfStatement",
                        "src": "2136:62:8",
                        "trueBody": {
                          "id": 1282,
                          "nodeType": "Block",
                          "src": "2151:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1279,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1235,
                                  "src": "2172:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1281,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1273,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:8",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 1285,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:8"
                  },
                  "returnParameters": {
                    "id": 1275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:8"
                  },
                  "scope": 1318,
                  "src": "2078:126:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1300,
                    "nodeType": "Block",
                    "src": "2388:66:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1291,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "2398:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1294,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1296,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "2434:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1295,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1224,
                            "src": "2427:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1299,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1286,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:8",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1289,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1288,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1243,
                        "src": "2374:13:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:8"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:8"
                  },
                  "returnParameters": {
                    "id": 1290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:8"
                  },
                  "scope": 1318,
                  "src": "2339:115:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1316,
                    "nodeType": "Block",
                    "src": "2634:69:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1307,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "2644:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1310,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1312,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "2683:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1311,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "2674:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1315,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1302,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:8",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1317,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1305,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1304,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1251,
                        "src": "2623:10:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:8"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1303,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:8"
                  },
                  "returnParameters": {
                    "id": 1306,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:8"
                  },
                  "scope": 1318,
                  "src": "2586:117:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1319,
              "src": "615:2090:8",
              "usedErrors": [
                1232,
                1235
              ],
              "usedEvents": [
                1224,
                1229
              ]
            }
          ],
          "src": "102:2604:8"
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "id": 9,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
          "exportedSymbols": {
            "ERC165": [
              1342
            ],
            "IERC165": [
              1354
            ]
          },
          "id": 1343,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1320,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 1322,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1343,
              "sourceUnit": 1355,
              "src": "140:38:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1321,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1354,
                    "src": "148:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1324,
                    "name": "IERC165",
                    "nameLocations": [
                      "688:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1354,
                    "src": "688:7:9"
                  },
                  "id": 1325,
                  "nodeType": "InheritanceSpecifier",
                  "src": "688:7:9"
                }
              ],
              "canonicalName": "ERC165",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1323,
                "nodeType": "StructuredDocumentation",
                "src": "180:479:9",
                "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
              },
              "fullyImplemented": true,
              "id": 1342,
              "linearizedBaseContracts": [
                1342,
                1354
              ],
              "name": "ERC165",
              "nameLocation": "678:6:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1353
                  ],
                  "body": {
                    "id": 1340,
                    "nodeType": "Block",
                    "src": "845:64:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1333,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "862:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1335,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1354,
                                  "src": "882:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1354_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1354_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 1334,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "877:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "877:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1354",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "891:11:9",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "877:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "862:40:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1332,
                        "id": 1339,
                        "nodeType": "Return",
                        "src": "855:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1326,
                    "nodeType": "StructuredDocumentation",
                    "src": "702:56:9",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1341,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "772:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1328,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "797:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1341,
                        "src": "790:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1327,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:20:9"
                  },
                  "returnParameters": {
                    "id": 1332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1331,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1341,
                        "src": "839:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1330,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "839:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "838:6:9"
                  },
                  "scope": 1342,
                  "src": "763:146:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1343,
              "src": "660:251:9",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "114:798:9"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "id": 10,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1354
            ]
          },
          "id": 1355,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1344,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1345,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:10",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1354,
              "linearizedBaseContracts": [
                1354
              ],
              "name": "IERC165",
              "nameLocation": "432:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1346,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:10",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "818:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:10"
                  },
                  "returnParameters": {
                    "id": 1352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "861:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1350,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:10"
                  },
                  "scope": 1354,
                  "src": "791:76:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1355,
              "src": "422:447:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:10"
        }
      },
      "contracts/MintableERC20.sol": {
        "id": 11,
        "ast": {
          "absolutePath": "contracts/MintableERC20.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "ERC20": [
              1030
            ],
            "IERC20": [
              1108
            ],
            "IERC20Errors": [
              420
            ],
            "IERC20Metadata": [
              1180
            ],
            "MintableERC20": [
              1382
            ]
          },
          "id": 1383,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1356,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1357,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1383,
              "sourceUnit": 1031,
              "src": "58:55:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1358,
                    "name": "ERC20",
                    "nameLocations": [
                      "141:5:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "141:5:11"
                  },
                  "id": 1359,
                  "nodeType": "InheritanceSpecifier",
                  "src": "141:5:11"
                }
              ],
              "canonicalName": "MintableERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1382,
              "linearizedBaseContracts": [
                1382,
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "MintableERC20",
              "nameLocation": "124:13:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1370,
                    "nodeType": "Block",
                    "src": "253:2:11",
                    "statements": []
                  },
                  "id": 1371,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1366,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1361,
                          "src": "237:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 1367,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1363,
                          "src": "244:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 1368,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1365,
                        "name": "ERC20",
                        "nameLocations": [
                          "231:5:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1030,
                        "src": "231:5:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "231:21:11"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1364,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1361,
                        "mutability": "mutable",
                        "name": "_name",
                        "nameLocation": "188:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "174:19:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1360,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "174:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1363,
                        "mutability": "mutable",
                        "name": "_symbol",
                        "nameLocation": "217:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "203:21:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1362,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "203:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "164:66:11"
                  },
                  "returnParameters": {
                    "id": 1369,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "253:0:11"
                  },
                  "scope": 1382,
                  "src": "153:102:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1380,
                    "nodeType": "Block",
                    "src": "289:57:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1375,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "305:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "309:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "305:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "313030303030303030303030303030303030303030",
                              "id": 1377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "317:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                                "typeString": "int_const 100000000000000000000"
                              },
                              "value": "100000000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                                "typeString": "int_const 100000000000000000000"
                              }
                            ],
                            "id": 1374,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "299:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "299:40:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1379,
                        "nodeType": "ExpressionStatement",
                        "src": "299:40:11"
                      }
                    ]
                  },
                  "functionSelector": "2004ffd9",
                  "id": 1381,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mintToken",
                  "nameLocation": "270:9:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1372,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "279:2:11"
                  },
                  "returnParameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "289:0:11"
                  },
                  "scope": 1382,
                  "src": "261:85:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1383,
              "src": "115:233:11",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "32:317:11"
        }
      },
      "contracts/MyToken.sol": {
        "id": 12,
        "ast": {
          "absolutePath": "contracts/MyToken.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1210
            ],
            "ERC165": [
              1342
            ],
            "ERC20": [
              1030
            ],
            "ERC20Burnable": [
              1154
            ],
            "IAccessControl": [
              378
            ],
            "IERC20": [
              1108
            ],
            "IERC20Errors": [
              420
            ],
            "IERC20Metadata": [
              1180
            ],
            "MyToken": [
              1498
            ],
            "Pausable": [
              1318
            ]
          },
          "id": 1499,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1384,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:12"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1385,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1499,
              "sourceUnit": 1031,
              "src": "58:55:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "id": 1386,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1499,
              "sourceUnit": 1155,
              "src": "114:74:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 1387,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1499,
              "sourceUnit": 1319,
              "src": "189:52:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 1388,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1499,
              "sourceUnit": 296,
              "src": "242:58:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1389,
                    "name": "ERC20",
                    "nameLocations": [
                      "322:5:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "322:5:12"
                  },
                  "id": 1390,
                  "nodeType": "InheritanceSpecifier",
                  "src": "322:5:12"
                },
                {
                  "baseName": {
                    "id": 1391,
                    "name": "ERC20Burnable",
                    "nameLocations": [
                      "329:13:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1154,
                    "src": "329:13:12"
                  },
                  "id": 1392,
                  "nodeType": "InheritanceSpecifier",
                  "src": "329:13:12"
                },
                {
                  "baseName": {
                    "id": 1393,
                    "name": "Pausable",
                    "nameLocations": [
                      "344:8:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1318,
                    "src": "344:8:12"
                  },
                  "id": 1394,
                  "nodeType": "InheritanceSpecifier",
                  "src": "344:8:12"
                },
                {
                  "baseName": {
                    "id": 1395,
                    "name": "AccessControl",
                    "nameLocations": [
                      "354:13:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "354:13:12"
                  },
                  "id": 1396,
                  "nodeType": "InheritanceSpecifier",
                  "src": "354:13:12"
                }
              ],
              "canonicalName": "MyToken",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1498,
              "linearizedBaseContracts": [
                1498,
                295,
                1342,
                1354,
                378,
                1318,
                1154,
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "MyToken",
              "nameLocation": "311:7:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "e63ab1e9",
                  "id": 1401,
                  "mutability": "constant",
                  "name": "PAUSER_ROLE",
                  "nameLocation": "398:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "374:62:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "5041555345525f524f4c45",
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "422:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        },
                        "value": "PAUSER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        }
                      ],
                      "id": 1398,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "412:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "412:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d5391393",
                  "id": 1406,
                  "mutability": "constant",
                  "name": "MINTER_ROLE",
                  "nameLocation": "466:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "442:62:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1402,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 1404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "490:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 1403,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "480:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "480:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1439,
                    "nodeType": "Block",
                    "src": "570:192:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1416,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "591:18:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1417,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "611:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "615:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "611:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1415,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "580:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "580:42:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1420,
                        "nodeType": "ExpressionStatement",
                        "src": "580:42:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1422,
                              "name": "PAUSER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1401,
                              "src": "643:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1423,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "656:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "660:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "656:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1421,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "632:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "632:35:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1426,
                        "nodeType": "ExpressionStatement",
                        "src": "632:35:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1428,
                              "name": "MINTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1406,
                              "src": "688:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1429,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "701:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "705:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "701:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1427,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "677:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "677:35:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1432,
                        "nodeType": "ExpressionStatement",
                        "src": "677:35:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1434,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "729:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "733:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "729:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1436,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1408,
                              "src": "741:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1433,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "723:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "723:32:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1438,
                        "nodeType": "ExpressionStatement",
                        "src": "723:32:12"
                      }
                    ]
                  },
                  "id": 1440,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4d79546f6b656e",
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "552:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                            "typeString": "literal_string \"MyToken\""
                          },
                          "value": "MyToken"
                        },
                        {
                          "hexValue": "4d544b",
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "563:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                            "typeString": "literal_string \"MTK\""
                          },
                          "value": "MTK"
                        }
                      ],
                      "id": 1413,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1410,
                        "name": "ERC20",
                        "nameLocations": [
                          "546:5:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1030,
                        "src": "546:5:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "546:23:12"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1409,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1408,
                        "mutability": "mutable",
                        "name": "initialSupply",
                        "nameLocation": "531:13:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1440,
                        "src": "523:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1407,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "523:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "522:23:12"
                  },
                  "returnParameters": {
                    "id": 1414,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "570:0:12"
                  },
                  "scope": 1498,
                  "src": "511:251:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1449,
                    "nodeType": "Block",
                    "src": "814:25:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1446,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1301,
                            "src": "824:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "824:8:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1448,
                        "nodeType": "ExpressionStatement",
                        "src": "824:8:12"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 1450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1443,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1401,
                          "src": "801:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1444,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1442,
                        "name": "onlyRole",
                        "nameLocations": [
                          "792:8:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "792:8:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "792:21:12"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "777:5:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1441,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "782:2:12"
                  },
                  "returnParameters": {
                    "id": 1445,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "814:0:12"
                  },
                  "scope": 1498,
                  "src": "768:71:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1459,
                    "nodeType": "Block",
                    "src": "893:27:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1456,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1317,
                            "src": "903:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "903:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1458,
                        "nodeType": "ExpressionStatement",
                        "src": "903:10:12"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 1460,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1453,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1401,
                          "src": "880:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1454,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1452,
                        "name": "onlyRole",
                        "nameLocations": [
                          "871:8:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "871:8:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "871:21:12"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "854:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1451,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "861:2:12"
                  },
                  "returnParameters": {
                    "id": 1455,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "893:0:12"
                  },
                  "scope": 1498,
                  "src": "845:75:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1475,
                    "nodeType": "Block",
                    "src": "997:34:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1471,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1462,
                              "src": "1013:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1472,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1464,
                              "src": "1017:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1470,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "1007:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1007:17:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1474,
                        "nodeType": "ExpressionStatement",
                        "src": "1007:17:12"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 1476,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1467,
                          "name": "MINTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1406,
                          "src": "984:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1468,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1466,
                        "name": "onlyRole",
                        "nameLocations": [
                          "975:8:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "975:8:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "975:21:12"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "935:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1465,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1462,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "948:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1476,
                        "src": "940:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1461,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1464,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "960:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1476,
                        "src": "952:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1463,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "952:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "939:28:12"
                  },
                  "returnParameters": {
                    "id": 1469,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "997:0:12"
                  },
                  "scope": 1498,
                  "src": "926:105:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    837
                  ],
                  "body": {
                    "id": 1496,
                    "nodeType": "Block",
                    "src": "1156:48:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1491,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1478,
                              "src": "1180:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1492,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1480,
                              "src": "1186:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1493,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1482,
                              "src": "1190:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1488,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1166:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_MyToken_$1498_$",
                                "typeString": "type(contract super MyToken)"
                              }
                            },
                            "id": 1490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1172:7:12",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 837,
                            "src": "1166:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1166:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1495,
                        "nodeType": "ExpressionStatement",
                        "src": "1166:31:12"
                      }
                    ]
                  },
                  "id": 1497,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1486,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1485,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1138:13:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1243,
                        "src": "1138:13:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1138:13:12"
                    }
                  ],
                  "name": "_update",
                  "nameLocation": "1046:7:12",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1484,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1121:8:12"
                  },
                  "parameters": {
                    "id": 1483,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1478,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1062:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "1054:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1477,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1054:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1480,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1076:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "1068:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1479,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1068:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1482,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1088:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "1080:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1481,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1080:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1053:42:12"
                  },
                  "returnParameters": {
                    "id": 1487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1156:0:12"
                  },
                  "scope": 1498,
                  "src": "1037:167:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1499,
              "src": "302:904:12",
              "usedErrors": [
                305,
                308,
                390,
                395,
                400,
                409,
                414,
                419,
                1232,
                1235
              ],
              "usedEvents": [
                317,
                326,
                335,
                1042,
                1051,
                1224,
                1229
              ]
            }
          ],
          "src": "32:1175:12"
        }
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "AccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "IAccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "contracts/MintableERC20.sol": {
        "MintableERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_symbol",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mintToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MintableERC20.sol\":\"MintableERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MintableERC20.sol\":{\"keccak256\":\"0x80865d5965789501358870f74bc5a860be4f36a1009a60a67df41329c67aaa07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc0c3fc5f0ac8585dc206191651250837f8e04e583b5a2197cc2b87b687bdd8\",\"dweb:/ipfs/QmPaDvwMTe5c4rME1gttDPacebY6jkHwsw99PaVueW37UK\"]}},\"version\":1}",
            "solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 168/65760 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 5997\n// Code size = 20710 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x200b0]\n   117: jump @200 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x300e0\n   126: i32 a0 = a0 + 0\n   128: ecalli 8 // 'set_immutable_data'\n   130: jump @200\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @26\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @26\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 48)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 5 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: sp = s0 + 0xffffffffffffffa0\n   804: ra = u64 [sp + 0x58]\n   807: s0 = u64 [sp + 0x50]\n   810: s1 = u64 [sp + 0x48]\n   813: sp = sp + 0x60\n   816: ret\n      : @22 (gas: 40)\n   818: sp = sp + 0xffffffffffffffa0\n   821: u64 [sp + 0x58] = ra\n   824: u64 [sp + 0x50] = s0\n   827: s0 = sp + 0x60\n   830: sp = sp & 0xffffffffffffffe0\n   833: t0 = u64 [a0]\n   835: a3 = u64 [a0 + 0x8]\n   838: a4 = u64 [a0 + 0x10]\n   841: a0 = u64 [a0 + 0x18]\n   844: t1 = u64 [a1]\n   846: a2 = u64 [a1 + 0x8]\n   849: a5 = u64 [a1 + 0x10]\n   852: a1 = u64 [a1 + 0x18]\n   855: t2 = reverse a0\n   857: a4 = reverse a4\n   859: a3 = reverse a3\n   861: a0 = reverse t0\n   863: t0 = reverse a1\n   865: a5 = reverse a5\n   867: a2 = reverse a2\n   869: a1 = reverse t1\n   871: u64 [sp + 0x18] = a0\n   874: u64 [sp + 0x10] = a3\n   877: u64 [sp + 0x8] = a4\n   880: u64 [sp] = t2\n   882: u64 [sp + 0x38] = a1\n   885: u64 [sp + 0x30] = a2\n   888: u64 [sp + 0x28] = a5\n   891: u64 [sp + 0x20] = t0\n   894: i32 a1 = sp + 0\n   896: i32 a3 = sp + 0x20\n   899: a2 = 0xffffffffffffffff\n   902: a4 = 0x20\n   905: a0 = 0\n   907: ecalli 9 // 'set_storage'\n   909: sp = s0 + 0xffffffffffffffa0\n   912: ra = u64 [sp + 0x58]\n   915: s0 = u64 [sp + 0x50]\n   918: sp = sp + 0x60\n   921: ret\n      : @23 (gas: 33)\n   923: sp = sp + 0xffffffffffffff20\n   927: u64 [sp + 0xd8] = ra\n   931: u64 [sp + 0xd0] = s0\n   935: u64 [sp + 0xc8] = s1\n   939: s0 = sp + 0xe0\n   943: sp = sp & 0xffffffffffffffe0\n   946: a5 = u64 [a4]\n   948: u64 [sp + 0x40] = a5\n   951: a5 = u64 [a4 + 0x8]\n   954: u64 [sp + 0x48] = a5\n   957: a5 = u64 [a4 + 0x10]\n   960: u64 [sp + 0x50] = a5\n   963: a4 = u64 [a4 + 0x18]\n   966: u64 [sp + 0x58] = a4\n   969: t0 = 0x6\n   972: a4 = u64 [a3]\n   974: u64 [sp + 0x18] = a4\n   977: a4 = u64 [a3 + 0x8]\n   980: u64 [sp + 0x20] = a4\n   983: a4 = u64 [a3 + 0x10]\n   986: u64 [sp + 0x28] = a4\n   989: a3 = u64 [a3 + 0x18]\n   992: u64 [sp + 0x30] = a3\n   995: s1 = u64 [a2]\n   997: a3 = u64 [a2 + 0x8]\n  1000: u64 [sp] = a3\n  1002: a3 = u64 [a2 + 0x10]\n  1005: u64 [sp + 0x8] = a3\n  1008: a2 = u64 [a2 + 0x18]\n  1011: u64 [sp + 0x10] = a2\n  1014: u64 [sp + 56] = 0x20\n  1018: ra = 0x8\n  1021: jump @26\n      : @24 [@dyn 3] (gas: 2)\n  1024: u64 [sp + 0x38] = a1\n  1027: ra = 8, jump @26\n      : @25 [@dyn 4] (gas: 46)\n  1032: a1 = reverse s1\n  1034: u64 [sp + 0x78] = a1\n  1037: a1 = u64 [sp]\n  1039: a1 = reverse a1\n  1041: u64 [sp + 0x70] = a1\n  1044: a1 = u64 [sp + 0x8]\n  1047: a1 = reverse a1\n  1049: u64 [sp + 0x68] = a1\n  1052: a1 = u64 [sp + 0x10]\n  1055: a1 = reverse a1\n  1057: u64 [sp + 0x60] = a1\n  1060: a1 = u64 [sp + 0x18]\n  1063: a1 = reverse a1\n  1065: u64 [sp + 0x98] = a1\n  1069: a1 = u64 [sp + 0x20]\n  1072: a1 = reverse a1\n  1074: u64 [sp + 0x90] = a1\n  1078: a1 = u64 [sp + 0x28]\n  1081: a1 = reverse a1\n  1083: u64 [sp + 0x88] = a1\n  1087: a1 = u64 [sp + 0x30]\n  1090: a1 = reverse a1\n  1092: u64 [sp + 0x80] = a1\n  1096: a1 = u64 [sp + 0x40]\n  1099: a1 = reverse a1\n  1101: u64 [sp + 0xb8] = a1\n  1105: a1 = u64 [sp + 0x48]\n  1108: a1 = reverse a1\n  1110: u64 [sp + 0xb0] = a1\n  1114: a1 = u64 [sp + 0x50]\n  1117: a1 = reverse a1\n  1119: u64 [sp + 0xa8] = a1\n  1123: a1 = u64 [sp + 0x58]\n  1126: a1 = reverse a1\n  1128: u64 [sp + 0xa0] = a1\n  1132: i32 a2 = a0 + 0\n  1134: a3 = i32 [sp + 0x38]\n  1137: i32 a0 = sp + 0x60\n  1140: a1 = 0x3\n  1143: ecalli 4 // 'deposit_event'\n  1145: sp = s0 + 0xffffffffffffff20\n  1149: ra = u64 [sp + 0xd8]\n  1153: s0 = u64 [sp + 0xd0]\n  1157: s1 = u64 [sp + 0xc8]\n  1161: sp = sp + 0xe0\n  1165: ret\n      : @26 (gas: 2)\n  1167: i32 a2 = a0 >> 0x10\n  1170: jump @31 if a2 != 0\n      : @27 (gas: 4)\n  1173: a1 = a1 + a0\n  1176: i32 a1 = a1 + 0x1f\n  1179: a1 = a1 & 0xffffffffffffffe0\n  1182: jump @31 if a1 >u 65536\n      : @28 (gas: 3)\n  1188: a2 = 0x200ac\n  1193: a3 = i32 [0x200ac]\n  1198: jump @30 if a3 >=u a1\n      : @29 (gas: 2)\n  1201: u32 [0x200ac] = a1\n  1206: fallthrough\n      : @30 (gas: 4)\n  1207: a1 = 0x200c0\n  1212: i32 a0 = a0 + 0\n  1214: a0 = a0 + a1\n  1217: ret\n      : @31 (gas: 1)\n  1219: trap\n      : @32 (gas: 6)\n  1220: sp = sp + 0xfffffffffffffff0\n  1223: u64 [sp + 0x8] = ra\n  1226: u64 [sp] = s0\n  1228: s0 = a0 & 0x1\n  1231: ecalli 2 // 'call_data_size'\n  1233: fallthrough\n      : @33 (gas: 2)\n  1234: u32 [0x200a8] = a0\n  1239: jump @35 if s0 == 0\n      : @34 (gas: 1)\n  1242: ra = 10, jump @36\n      : @35 [@dyn 5] (gas: 21)\n  1246: ra = 0xc\n  1249: sp = sp + 0xfffffffffffffe10\n  1253: u64 [sp + 0x1e8] = ra\n  1257: u64 [sp + 0x1e0] = s0\n  1261: u64 [sp + 0x1d8] = s1\n  1265: s0 = sp + 0x1f0\n  1269: sp = sp + 0xfffffffffffff800\n  1273: sp = sp + 0xfffffffffffff8b0\n  1277: sp = sp & 0xffffffffffffffe0\n  1280: s1 = sp\n  1282: a2 = s1 + 0x7ff\n  1286: a2 = a2 + 0x79\n  1289: u64 [a2 + 1504] = 0\n  1293: u64 [a2 + 1496] = 0\n  1297: u64 [a2 + 1480] = 0x80\n  1303: a0 = 0x40\n  1306: a1 = s1 + 0x7ff\n  1310: a1 = a1 + 0x641\n  1314: u64 [a2 + 1488] = 0\n  1318: ra = 0xb6\n  1322: jump @19\n      : @36 [@dyn 6] (gas: 15)\n  1325: sp = sp + 0xfffffffffffff860\n  1329: a0 = sp + 0x700\n  1333: u64 [a0 + 0x98] = ra\n  1337: u64 [a0 + 0x90] = s0\n  1341: u64 [a0 + 0x88] = s1\n  1345: s0 = sp + 0x7a0\n  1349: sp = sp & 0xffffffffffffffe0\n  1352: s1 = sp\n  1354: u64 [s1 + 1368] = 0\n  1358: u64 [s1 + 1360] = 0\n  1362: u64 [s1 + 1344] = 0x80\n  1368: a0 = 0x40\n  1371: a1 = s1 + 0x540\n  1375: u64 [s1 + 1352] = 0\n  1379: ra = 14, jump @19\n      : @37 [@dyn 7] (gas: 7)\n  1384: u64 [s1 + 1400] = 0\n  1388: u64 [s1 + 1392] = 0\n  1392: u64 [s1 + 1384] = 0\n  1396: u64 [s1 + 1376] = 0\n  1400: i32 a0 = s1 + 0x560\n  1404: ecalli 10 // 'value_transferred'\n  1406: fallthrough\n      : @38 (gas: 9)\n  1407: a4 = s1 + 0x500\n  1411: a0 = u64 [a4 + 0x70]\n  1414: a1 = u64 [a4 + 0x78]\n  1417: a2 = u64 [a4 + 0x68]\n  1420: a3 = u64 [a4 + 0x60]\n  1423: a1 = a1 | a2\n  1426: a0 = a0 | a3\n  1429: a0 = a0 | a1\n  1432: jump @40 if a0 == 0\n      : @39 (gas: 1)\n  1435: jump @169\n      : @40 (gas: 9)\n  1438: a2 = u32 [0x200a8]\n  1443: u64 [s1 + 1304] = 0\n  1447: u64 [s1 + 1296] = 0\n  1451: u64 [s1 + 1288] = 0\n  1455: a0 = s1 + 0x520\n  1459: a1 = s1 + 0x500\n  1463: u64 [s1 + 0x118] = a2\n  1467: u64 [s1 + 0x500] = a2\n  1471: ra = 16, jump @534\n      : @41 [@dyn 8] (gas: 17)\n  1476: a4 = s1 + 0x500\n  1480: a3 = u64 [a4 + 0x38]\n  1483: a2 = u64 [a4 + 0x30]\n  1486: a1 = u64 [a4 + 0x28]\n  1489: a0 = u64 [a4 + 0x20]\n  1492: a4 = s1 + 0x100\n  1496: u64 [a4 + 0x10] = a3\n  1499: u64 [a4] = a1\n  1501: a3 = a3 | a1\n  1504: a1 = a0 | a2\n  1507: a1 = a1 | a3\n  1510: a1 = a1 >> 0x20\n  1513: u64 [a4 + 0x8] = a2\n  1516: a2 = a2 | a3\n  1519: a2 = a2 << 0x20\n  1522: a1 = a1 | a2\n  1525: jump @43 if a1 == 0\n      : @42 (gas: 1)\n  1528: jump @168\n      : @43 (gas: 3)\n  1531: u64 [s1 + 0xf8] = a0\n  1535: a1 = u64 [s1 + 0x118]\n  1539: ra = 18, jump @26\n      : @44 [@dyn 9] (gas: 5)\n  1544: i32 a0 = a0 + 0\n  1546: a1 = i32 [s1 + 0x118]\n  1550: a2 = 0\n  1552: ecalli 0 // 'call_data_copy'\n  1553: fallthrough\n      : @45 (gas: 2)\n  1554: a1 = u64 [s1 + 0x118]\n  1558: jump @47 if a1 >u 63\n      : @46 (gas: 1)\n  1562: jump @170\n      : @47 (gas: 3)\n  1565: a0 = s1 + 0x4e0\n  1569: a1 = u64 [s1 + 0xf8]\n  1573: ra = 20, jump @17\n      : @48 [@dyn 10] (gas: 8)\n  1578: a0 = u64 [s1 + 0x4f8]\n  1582: t0 = u64 [s1 + 0x4f0]\n  1586: a4 = u64 [s1 + 0x4e8]\n  1590: u64 [s1 + 0xf0] = a0\n  1594: a2 = t0 | a0\n  1597: a3 = a4 <u 0x1\n  1600: a3 = 0 if a2 != 0\n  1602: jump @50 if a3 != 0\n      : @49 (gas: 1)\n  1605: jump @171\n      : @50 (gas: 50)\n  1608: a3 = u64 [s1 + 0x4e0]\n  1612: t1 = u64 [s1 + 0xf8]\n  1616: t2 = u64 [s1 + 0x118]\n  1620: t2 = t2 + t1\n  1623: a1 = t2 <u t1\n  1626: t1 = t1 + a3\n  1629: u64 [s1 + 0x118] = t1\n  1633: a3 = t1 <u a3\n  1636: a2 = u64 [s1 + 0x100]\n  1640: a0 = a4 + a2\n  1643: a5 = a2\n  1645: t1 = a0 + a3\n  1648: a2 = t1 ^ a4\n  1651: a4 = t1 <u a4\n  1654: a4 = a3 if a2 == 0\n  1657: a2 = a5\n  1659: a5 = a5 + a1\n  1662: a2 = a5 <u a2\n  1665: a2 = a1 if a1 == 0\n  1668: a1 = u64 [s1 + 0x108]\n  1672: a3 = t0 + a1\n  1675: ra = a3 <u t0\n  1678: a0 = u64 [s1 + 0x110]\n  1682: t0 = u64 [s1 + 0xf0]\n  1686: t0 = t0 + a0\n  1689: ra = ra + t0\n  1692: t0 = a1 + a2\n  1695: a4 = a4 + a3\n  1698: a2 = a4 <u a3\n  1701: a3 = ra + a2\n  1704: a1 = t0 <u a1\n  1707: a1 = a1 + a0\n  1710: u64 [s1 + 0xf0] = t2\n  1714: u64 [s1 + 0x480] = t2\n  1718: u64 [s1 + 0xe8] = a5\n  1722: u64 [s1 + 0x488] = a5\n  1726: a0 = u64 [s1 + 0x118]\n  1730: a5 = s1 + 0x400\n  1734: u64 [a5 + 0xa0] = a0\n  1738: u64 [s1 + 0x118] = t0\n  1742: u64 [s1 + 0x490] = t0\n  1746: u64 [s1 + 0xe0] = a1\n  1750: u64 [a5 + 0x98] = a1\n  1754: u64 [s1 + 0x4a8] = t1\n  1758: u64 [a5 + 0xb0] = a4\n  1762: a0 = s1 + 0x4c0\n  1766: a1 = s1 + 0x4a0\n  1770: a2 = s1 + 0x480\n  1774: u64 [a5 + 0xb8] = a3\n  1778: ra = 22, jump @545\n      : @51 [@dyn 11] (gas: 11)\n  1783: a2 = u64 [s1 + 0xf8]\n  1787: a4 = s1 + 0x100\n  1791: a0 = u64 [a4 + 0x8]\n  1794: a1 = u64 [a4 + 0x10]\n  1797: a0 = a0 | a1\n  1800: a1 = 0xffffffe0\n  1810: a1 = a2 <u a1\n  1813: a3 = u64 [a4]\n  1815: a1 = 0 if a3 != 0\n  1817: a1 = 0 if a0 != 0\n  1819: jump @53 if a1 != 0\n      : @52 (gas: 1)\n  1822: jump @168\n      : @53 (gas: 11)\n  1825: a0 = u64 [s1 + 0x4d8]\n  1829: u64 [s1 + 0xa0] = a0\n  1833: a0 = u64 [s1 + 0x4d0]\n  1837: u64 [s1 + 0x98] = a0\n  1841: a0 = u64 [s1 + 0x4c8]\n  1845: u64 [s1 + 0xa8] = a0\n  1849: a0 = u64 [s1 + 0x4c0]\n  1853: u64 [s1 + 0xb0] = a0\n  1857: i32 a1 = a2 + 0x20\n  1860: a0 = s1 + 0x460\n  1864: ra = 24, jump @17\n      : @54 [@dyn 12] (gas: 7)\n  1869: t0 = u64 [s1 + 0x478]\n  1873: a1 = u64 [s1 + 0x470]\n  1877: a2 = u64 [s1 + 0x468]\n  1881: a3 = a1 | t0\n  1884: a4 = a2 <u 0x1\n  1887: a4 = 0 if a3 != 0\n  1889: jump @56 if a4 != 0\n      : @55 (gas: 1)\n  1892: jump @172\n      : @56 (gas: 36)\n  1895: a3 = u64 [s1 + 0x460]\n  1899: a4 = u64 [s1 + 0xf8]\n  1903: a4 = a4 + a3\n  1906: a3 = a4 <u a3\n  1909: a5 = u64 [s1 + 0x100]\n  1913: a5 = a5 + a2\n  1916: a5 = a5 + a3\n  1919: a0 = a5 ^ a2\n  1922: a2 = a5 <u a2\n  1925: a2 = a3 if a0 == 0\n  1928: a0 = u64 [s1 + 0x108]\n  1932: a0 = a0 + a1\n  1935: a2 = a2 + a0\n  1938: a3 = a2 <u a0\n  1941: a0 = a0 <u a1\n  1944: a1 = u64 [s1 + 0x110]\n  1948: t0 = t0 + a1\n  1951: a0 = a0 + t0\n  1954: a3 = a3 + a0\n  1957: a0 = u64 [s1 + 0xf0]\n  1961: u64 [s1 + 0x400] = a0\n  1965: a0 = u64 [s1 + 0xe8]\n  1969: u64 [s1 + 0x408] = a0\n  1973: u64 [s1 + 0x420] = a4\n  1977: a0 = u64 [s1 + 0x118]\n  1981: a4 = s1 + 0x400\n  1985: u64 [a4 + 0x10] = a0\n  1988: a0 = u64 [s1 + 0xe0]\n  1992: u64 [a4 + 0x18] = a0\n  1995: u64 [a4 + 0x28] = a5\n  1998: u64 [a4 + 0x30] = a2\n  2001: a0 = s1 + 0x440\n  2005: a1 = s1 + 0x420\n  2009: a2 = s1 + 0x400\n  2013: u64 [a4 + 0x38] = a3\n  2016: ra = 26, jump @545\n      : @57 [@dyn 13] (gas: 12)\n  2021: a2 = u64 [s1 + 0x98]\n  2025: a4 = u64 [s1 + 0xb0]\n  2029: a0 = a4 | a2\n  2032: a1 = u64 [s1 + 0xa0]\n  2036: a3 = u64 [s1 + 0xa8]\n  2040: a1 = a1 | a3\n  2043: a0 = a0 | a1\n  2046: a0 = a0 >> 0x20\n  2049: a1 = a1 | a2\n  2052: a1 = a1 << 0x20\n  2055: a0 = a0 | a1\n  2058: jump @59 if a0 == 0\n      : @58 (gas: 1)\n  2061: jump @168\n      : @59 (gas: 12)\n  2064: a1 = a4\n  2066: a2 = s1 + 0x400\n  2070: a0 = u64 [a2 + 0x58]\n  2073: u64 [s1 + 0x78] = a0\n  2076: a0 = u64 [a2 + 0x50]\n  2079: u64 [s1 + 0x70] = a0\n  2082: a0 = u64 [a2 + 0x48]\n  2085: u64 [s1 + 0x80] = a0\n  2089: a0 = u64 [a2 + 0x40]\n  2092: u64 [s1 + 0x88] = a0\n  2096: a0 = s1 + 0x3e0\n  2100: ra = 28, jump @17\n      : @60 [@dyn 14] (gas: 17)\n  2105: a0 = s1 + 0x300\n  2109: a3 = u64 [a0 + 0xf8]\n  2113: a1 = u64 [a0 + 0xf0]\n  2117: a2 = u64 [a0 + 0xe8]\n  2121: a0 = a3 >u 0\n  2123: a4 = a1 >u 0\n  2125: a4 = a0 if a3 != 0\n  2128: u64 [s1 + 0xd0] = a2\n  2132: a0 = a2 >u 0\n  2134: u64 [s1 + 0x60] = a1\n  2137: u64 [s1 + 0xc8] = a3\n  2141: a1 = a1 | a3\n  2144: u64 [s1 + 0x58] = a0\n  2147: u64 [s1 + 0x90] = a4\n  2151: u64 [s1 + 0xc0] = a1\n  2155: a0 = a4 if a1 != 0\n  2158: jump @62 if a0 == 0\n      : @61 (gas: 1)\n  2161: jump @173\n      : @62 (gas: 9)\n  2164: a0 = u64 [s1 + 0x3e0]\n  2168: u64 [s1 + 0x68] = a0\n  2171: u64 [s1 + 1432] = 0\n  2175: u64 [s1 + 1424] = 0\n  2179: u64 [s1 + 1416] = 0\n  2183: u64 [s1 + 1408] = 0x3\n  2188: a0 = s1 + 0x3c0\n  2192: a1 = s1 + 0x580\n  2196: ra = 30, jump @21\n      : @63 [@dyn 15] (gas: 6)\n  2201: a4 = s1 + 0x300\n  2205: a0 = u64 [a4 + 0xd0]\n  2209: a1 = u64 [a4 + 0xc8]\n  2213: a2 = u64 [a4 + 0xc0]\n  2217: a3 = u64 [a4 + 0xd8]\n  2221: t0 = 32, jump @656\n      : @64 [@dyn 16] (gas: 12)\n  2226: t0 = a2 <u 0x1\n  2229: ra = a1 & 0x7f\n  2232: t2 = a5 & a0\n  2235: a4 = a5 & t1\n  2238: ra = a1 if a2 != 0\n  2241: a1 = ra <u 0x20\n  2244: a5 = a5 & a3\n  2247: a2 = a1\n  2249: a2 = 0 if a4 != 0\n  2251: a0 = t2 | a5\n  2254: a2 = 0 if a0 != 0\n  2256: jump @66 if t0 == a2\n      : @65 (gas: 1)\n  2259: jump @179\n      : @66 (gas: 1)\n  2262: t0 = 34, jump @660\n      : @67 [@dyn 17] (gas: 4)\n  2267: a0 = u64 [s1 + 0x68]\n  2270: a0 = a0 <u 0x20\n  2273: u64 [s1 + 0xb8] = a0\n  2277: jump @76 if a3 == 0\n      : @68 (gas: 11)\n  2281: u64 [s1 + 0xf0] = a4\n  2285: u64 [s1 + 0xf8] = ra\n  2289: u64 [s1 + 0x100] = a5\n  2293: u64 [s1 + 0x110] = t2\n  2297: u64 [s1 + 952] = 0\n  2301: u64 [s1 + 944] = 0\n  2305: u64 [s1 + 936] = 0\n  2309: a1 = s1 + 0x3a0\n  2313: u64 [s1 + 928] = 0x3\n  2318: a0 = 0\n  2320: ra = 36, jump @19\n      : @69 [@dyn 18] (gas: 2)\n  2325: a1 = i32 [0x200ac]\n  2330: jump @71 if a1 >u 31\n      : @70 (gas: 2)\n  2334: u32 [0x200ac] = 0x20\n  2340: fallthrough\n      : @71 (gas: 87)\n  2341: a0 = sp + 0xffffffffffffffe0\n  2344: a2 = a0 & 0xffffffffffffffe0\n  2347: u64 [s1 + 0x108] = a2\n  2351: sp = a2\n  2353: a0 = 0x200c0\n  2358: i32 a0 = a0 + 0\n  2360: i32 a2 = a2 + 0\n  2362: a1 = 0x20\n  2365: ecalli 6 // 'hash_keccak_256'\n  2367: a0 = u64 [s1 + 0x68]\n  2370: a1 = a0 + 0x1f\n  2373: a0 = a1 <u a0\n  2376: a5 = u64 [s1 + 0xd0]\n  2380: a2 = a5 + a0\n  2383: a3 = a2 <u a5\n  2386: a3 = a0 if a0 == 0\n  2389: a4 = u64 [s1 + 0x60]\n  2392: a3 = a3 + a4\n  2395: u64 [s1 + 0xe8] = a3\n  2399: a3 = a3 << 0x3b\n  2402: a4 = a2 >> 0x5\n  2405: a4 = a4 | a3\n  2408: a0 = u64 [s1 + 0x108]\n  2412: t1 = u64 [a0 + 0x18]\n  2415: a2 = a2 << 0x3b\n  2418: a3 = u64 [a0 + 0x10]\n  2421: a1 = a1 >> 0x5\n  2424: a0 = a1 | a2\n  2427: t2 = reverse t1\n  2429: a2 = reverse a3\n  2431: a1 = u64 [s1 + 0xb8]\n  2435: a1 = 0 if a5 != 0\n  2437: a3 = u64 [s1 + 0xc0]\n  2441: a1 = 0 if a3 != 0\n  2443: a4 = 0 if a1 != 0\n  2445: a0 = 0 if a1 != 0\n  2447: t0 = t2 + a0\n  2450: a0 = t0 <u t2\n  2453: a5 = a2 + a0\n  2456: a4 = a4 + a5\n  2459: u64 [s1 + 0x118] = a4\n  2463: a5 = a4 ^ a2\n  2466: a3 = a4 <u a2\n  2469: a3 = a0 if a5 == 0\n  2472: u64 [s1 + 0xe0] = a3\n  2476: a0 = u64 [s1 + 0xf8]\n  2480: ra = a0 + 0x1f\n  2483: a4 = ra <u a0\n  2486: a3 = u64 [s1 + 0xf0]\n  2490: a0 = a3 + a4\n  2493: a5 = a0 <u a3\n  2496: a5 = a4 if a4 == 0\n  2499: t1 = u64 [s1 + 0x110]\n  2503: t1 = t1 + a5\n  2506: a4 = t1 << 0x3b\n  2509: a3 = a0 >> 0x5\n  2512: a3 = a3 | a4\n  2515: a0 = a0 << 0x3b\n  2518: a4 = ra >> 0x5\n  2521: a0 = a0 | a4\n  2524: a0 = a0 + t2\n  2527: u64 [s1 + 0xf8] = a0\n  2531: a0 = a0 <u t2\n  2534: t2 = t0\n  2536: a4 = a2 + a0\n  2539: a4 = a4 + a3\n  2542: a3 = a4 ^ a2\n  2545: u64 [s1 + 0xf0] = a4\n  2549: a2 = a4 <u a2\n  2552: a2 = a0 if a3 == 0\n  2555: a4 = u64 [s1 + 0xe8]\n  2559: a0 = u64 [s1 + 0x60]\n  2562: a0 = a4 <u a0\n  2565: a3 = u64 [s1 + 0xc8]\n  2569: a0 = a0 + a3\n  2572: a3 = a4 >> 0x5\n  2575: a4 = a0 << 0x3b\n  2578: a3 = a3 | a4\n  2581: a4 = u64 [s1 + 0x108]\n  2585: t0 = u64 [a4]\n  2587: a4 = u64 [a4 + 0x8]\n  2590: a0 = a0 >> 0x5\n  2593: a3 = 0 if a1 != 0\n  2595: a0 = 0 if a1 != 0\n  2597: a1 = reverse a4\n  2599: a4 = reverse t0\n  2601: t0 = 38, jump @673\n      : @72 [@dyn 19] (gas: 24)\n  2606: t0 = a0 + a3\n  2609: a0 = u64 [s1 + 0x110]\n  2613: a0 = t1 <u a0\n  2616: a3 = u64 [s1 + 0x100]\n  2620: a0 = a0 + a3\n  2623: a3 = t1 >> 0x5\n  2626: a5 = a0 << 0x3b\n  2629: a3 = a3 | a5\n  2632: a0 = a0 >> 0x5\n  2635: a0 = a0 + a4\n  2638: a4 = u64 [s1 + 0x118]\n  2642: a3 = a3 + a1\n  2645: a1 = a3 <u a1\n  2648: a0 = a0 + a1\n  2651: a2 = a2 + a3\n  2654: u64 [s1 + 0xe8] = a2\n  2658: a1 = a2 <u a3\n  2661: a0 = a0 + a1\n  2664: u64 [s1 + 0xe0] = a0\n  2668: a0 = sp + 0xffffffffffffffe0\n  2671: t1 = a0 & 0xffffffffffffffe0\n  2674: sp = t1\n  2676: u64 [s1 + 0xd8] = t1\n  2680: fallthrough\n      : @73 (gas: 20)\n  2681: a0 = u64 [s1 + 0xf8]\n  2685: a0 = t2 <u a0\n  2688: a2 = u64 [s1 + 0xf0]\n  2692: a1 = a4 ^ a2\n  2695: a2 = a4 <u a2\n  2698: a2 = a0 if a1 == 0\n  2701: a5 = u64 [s1 + 0xe8]\n  2705: a0 = ra <u a5\n  2708: a3 = u64 [s1 + 0xe0]\n  2712: a1 = t0 ^ a3\n  2715: a3 = t0 <u a3\n  2718: a3 = a0 if a1 == 0\n  2721: a0 = ra ^ a5\n  2724: a0 = a0 | a1\n  2727: a3 = a2 if a0 == 0\n  2730: u64 [t1] = t2\n  2732: u64 [t1 + 0x8] = a4\n  2735: u64 [t1 + 0x10] = ra\n  2738: u64 [t1 + 0x18] = t0\n  2741: jump @76 if a3 == 0\n      : @74 (gas: 11)\n  2744: u64 [s1 + 1464] = 0\n  2748: u64 [s1 + 1456] = 0\n  2752: u64 [s1 + 1448] = 0\n  2756: u64 [s1 + 1440] = 0\n  2760: a1 = s1 + 0x5a0\n  2764: a0 = t1\n  2766: u64 [s1 + 0x110] = t2\n  2770: u64 [s1 + 0x118] = a4\n  2774: u64 [s1 + 0x108] = t0\n  2778: u64 [s1 + 0x100] = ra\n  2782: ra = 40, jump @22\n      : @75 [@dyn 20] (gas: 15)\n  2787: t1 = u64 [s1 + 0xd8]\n  2791: t0 = u64 [s1 + 0x108]\n  2795: a4 = u64 [s1 + 0x118]\n  2799: t2 = u64 [s1 + 0x110]\n  2803: t2 = t2 + 0x1\n  2806: a0 = t2 <u 0x1\n  2809: a4 = a4 + a0\n  2812: a0 = t2 | a4\n  2815: a0 = a0 <u 0x1\n  2818: a1 = u64 [s1 + 0x100]\n  2822: a0 = a0 + a1\n  2825: a1 = a0 <u a1\n  2828: t0 = t0 + a1\n  2831: ra = a0\n  2833: jump @73\n      : @76 (gas: 23)\n  2836: a0 = u64 [s1 + 0xb8]\n  2840: a0 = a0 ^ 0x1\n  2843: a5 = u64 [s1 + 0xd0]\n  2847: a1 = u64 [s1 + 0x58]\n  2850: a0 = a1 if a5 != 0\n  2853: a1 = u64 [s1 + 0x90]\n  2857: a2 = u64 [s1 + 0xc0]\n  2861: a0 = a1 if a2 != 0\n  2864: ra = u64 [s1 + 0xc8]\n  2868: a4 = a5 | ra\n  2871: a1 = u64 [s1 + 0x60]\n  2874: t2 = a1 >> 0x3f\n  2877: ra = ra << 0x1\n  2880: a2 = a5 >> 0x3f\n  2883: u64 [s1 + 0x58] = a2\n  2886: a2 = a1 << 0x1\n  2889: u64 [s1 + 0x48] = a2\n  2892: a3 = u64 [s1 + 0x68]\n  2895: t0 = a3 >> 0x3f\n  2898: a2 = a5 << 0x1\n  2901: u64 [s1 + 0x50] = a2\n  2904: a2 = a3 << 0x1\n  2907: jump @87 if a0 == 0\n      : @77 (gas: 14)\n  2911: u64 [s1 + 0x20] = a4\n  2914: u64 [s1 + 0x30] = t0\n  2917: u64 [s1 + 0x38] = ra\n  2920: u64 [s1 + 0x28] = t2\n  2923: u64 [s1 + 0x40] = a2\n  2926: a3 = a3 & 0xffffffffffffffe0\n  2929: u64 [s1 + 0x90] = a3\n  2933: u64 [s1 + 888] = 0\n  2937: u64 [s1 + 880] = 0\n  2941: u64 [s1 + 872] = 0\n  2945: a1 = s1 + 0x360\n  2949: u64 [s1 + 864] = 0x3\n  2954: a0 = 0\n  2956: ra = 42, jump @19\n      : @78 [@dyn 21] (gas: 7)\n  2961: a0 = sp + 0xffffffffffffffe0\n  2964: a0 = a0 & 0xffffffffffffffe0\n  2967: u64 [s1 + 0xf0] = a0\n  2971: sp = a0\n  2973: a1 = 0x20\n  2976: a0 = 0\n  2978: ra = 44, jump @26\n      : @79 [@dyn 22] (gas: 1)\n  2983: t0 = 46, jump @672\n      : @80 [@dyn 23] (gas: 5)\n  2988: ecalli 6 // 'hash_keccak_256'\n  2990: u64 [s1 + 280] = 0x20\n  2995: a5 = 0\n  2997: u64 [s1 + 272] = 0\n  3001: t0 = 48, jump @663\n      : @81 [@dyn 24] (gas: 15)\n  3006: t0 = u64 [a3]\n  3008: t1 = reverse a0\n  3010: a1 = reverse a1\n  3012: a3 = reverse a2\n  3014: a2 = reverse t0\n  3016: t0 = a2\n  3018: a0 = u64 [s1 + 0xf0]\n  3022: u64 [a0 + 0x18] = a2\n  3025: u64 [s1 + 0xd0] = a3\n  3029: u64 [a0 + 0x10] = a3\n  3032: u64 [s1 + 0xe8] = a1\n  3036: u64 [a0 + 0x8] = a1\n  3039: a3 = t1\n  3041: u64 [a0] = t1\n  3043: fallthrough\n      : @82 (gas: 25)\n  3044: t2 = t0\n  3046: t1 = a3\n  3048: a0 = u64 [s1 + 0x90]\n  3052: u64 [s1 + 0xe0] = a4\n  3056: a0 = a4 <u a0\n  3059: a4 = a0 ^ 0x1\n  3062: u64 [s1 + 0xd8] = ra\n  3066: a4 = 0x1 if ra != 0\n  3069: a0 = u64 [s1 + 0x100]\n  3073: a2 = u64 [s1 + 0xf8]\n  3077: a0 = a0 | a2\n  3080: a4 = 0x1 if a0 != 0\n  3083: a1 = u64 [s1 + 0xb0]\n  3087: a0 = u64 [s1 + 0x118]\n  3091: a1 = a1 + a0\n  3094: a3 = u64 [s1 + 0xa8]\n  3098: t0 = a5\n  3100: a3 = a3 + a5\n  3103: a2 = u64 [s1 + 0x98]\n  3107: a0 = u64 [s1 + 0x110]\n  3111: a2 = a2 + a0\n  3114: a0 = u64 [s1 + 0xa0]\n  3118: a5 = u64 [s1 + 0x108]\n  3122: a0 = a0 + a5\n  3125: jump @89 if a4 != 0\n      : @83 (gas: 23)\n  3129: a4 = u64 [s1 + 0x118]\n  3133: a4 = a1 <u a4\n  3136: ra = a3 + a4\n  3139: a3 = t0\n  3141: t0 = ra ^ t0\n  3144: a5 = ra <u a3\n  3147: a5 = a4 if t0 == 0\n  3150: a5 = a5 + a2\n  3153: t0 = a5 <u a2\n  3156: a4 = u64 [s1 + 0x110]\n  3160: a2 = a2 <u a4\n  3163: a0 = a0 + a2\n  3166: a0 = a0 + t0\n  3169: a2 = a1 | a5\n  3172: a0 = ra | a0\n  3175: a2 = a2 | a0\n  3178: a2 = a2 >> 0x20\n  3181: a0 = a0 | a5\n  3184: a0 = a0 << 0x20\n  3187: a0 = a0 | a2\n  3190: u64 [s1 + 0xc8] = t1\n  3194: u64 [s1 + 0xc0] = t2\n  3198: jump @168 if a0 != 0\n      : @84 (gas: 3)\n  3202: a0 = s1 + 0x1a0\n  3206: u64 [s1 + 0xb8] = a3\n  3210: ra = 50, jump @17\n      : @85 [@dyn 25] (gas: 12)\n  3215: a0 = u64 [s1 + 0x1b8]\n  3219: a1 = u64 [s1 + 0x1b0]\n  3223: a2 = u64 [s1 + 0x1a8]\n  3227: a3 = u64 [s1 + 0x1a0]\n  3231: a4 = s1 + 0x500\n  3235: u64 [a4 + 0xd8] = a0\n  3239: u64 [a4 + 0xd0] = a1\n  3243: u64 [a4 + 0xc8] = a2\n  3247: u64 [a4 + 0xc0] = a3\n  3251: a1 = s1 + 0x5c0\n  3255: a0 = u64 [s1 + 0xf0]\n  3259: ra = 52, jump @22\n      : @86 [@dyn 26] (gas: 57)\n  3264: ra = u64 [s1 + 0xc8]\n  3268: ra = ra + 0x1\n  3271: a0 = ra <u 0x1\n  3274: t0 = u64 [s1 + 0xe8]\n  3278: t0 = t0 + a0\n  3281: a0 = ra | t0\n  3284: a0 = a0 <u 0x1\n  3287: a1 = u64 [s1 + 0xd0]\n  3291: t1 = a1 + a0\n  3294: a1 = t1 <u a1\n  3297: a0 = u64 [s1 + 0xc0]\n  3301: a0 = a0 + a1\n  3304: a1 = u64 [s1 + 0x118]\n  3308: a2 = a1 + 0x20\n  3311: u64 [s1 + 0xc8] = a2\n  3315: a3 = a2 <u a1\n  3318: a1 = u64 [s1 + 0xb8]\n  3322: a2 = a1 + a3\n  3325: u64 [s1 + 0xc0] = a2\n  3329: a4 = a2 <u a1\n  3332: a4 = a3 if a3 == 0\n  3335: a1 = u64 [s1 + 0x110]\n  3339: t2 = a1 + a4\n  3342: a4 = t2 <u a1\n  3345: a1 = u64 [s1 + 0x108]\n  3349: a1 = a1 + a4\n  3352: u64 [s1 + 0x108] = a1\n  3356: a1 = u64 [s1 + 0xe0]\n  3360: a4 = a1 + 0x20\n  3363: a5 = a4 <u a1\n  3366: a2 = u64 [s1 + 0xd8]\n  3370: a1 = a2 + a5\n  3373: a2 = a1 <u a2\n  3376: a2 = a5 if a5 == 0\n  3379: a3 = u64 [s1 + 0xf8]\n  3383: a2 = a2 + a3\n  3386: a5 = a2 <u a3\n  3389: a3 = u64 [s1 + 0x100]\n  3393: a3 = a3 + a5\n  3396: u64 [s1 + 0x100] = a3\n  3400: a3 = t0\n  3402: u64 [s1 + 0xe8] = a3\n  3406: a5 = u64 [s1 + 0xf0]\n  3410: u64 [a5 + 0x8] = a3\n  3413: a3 = ra\n  3415: u64 [a5] = ra\n  3417: u64 [a5 + 0x10] = t1\n  3420: t0 = a0\n  3422: u64 [a5 + 0x18] = a0\n  3425: u64 [s1 + 0xd0] = t1\n  3429: a0 = u64 [s1 + 0xc8]\n  3433: u64 [s1 + 0x118] = a0\n  3437: a5 = u64 [s1 + 0xc0]\n  3441: u64 [s1 + 0x110] = t2\n  3445: ra = a1\n  3447: u64 [s1 + 0xf8] = a2\n  3451: jump @82\n      : @87 (gas: 7)\n  3454: a0 = a3 | a1\n  3457: a0 = a0 | a4\n  3460: a4 = u64 [s1 + 0xb0]\n  3464: t1 = u64 [s1 + 0xa8]\n  3468: a1 = u64 [s1 + 0xa0]\n  3472: a5 = u64 [s1 + 0x98]\n  3476: jump @102 if a0 != 0\n      : @88 (gas: 6)\n  3480: u64 [s1 + 0x40] = a2\n  3483: u64 [s1 + 256] = 0\n  3487: u64 [s1 + 248] = 0\n  3491: u64 [s1 + 264] = 0\n  3495: u64 [s1 + 272] = 0\n  3499: jump @105\n      : @89 (gas: 11)\n  3502: ra = t0\n  3504: t1 = u64 [s1 + 0x68]\n  3507: a4 = u64 [s1 + 0x90]\n  3511: a4 = a4 ^ t1\n  3514: a5 = u64 [s1 + 0x60]\n  3517: a4 = a4 | a5\n  3520: a5 = u64 [s1 + 0x20]\n  3523: a4 = a4 | a5\n  3526: a5 = u64 [s1 + 0x38]\n  3529: t0 = u64 [s1 + 0x30]\n  3532: jump @101 if a4 == 0\n      : @90 (gas: 13)\n  3536: a4 = u64 [s1 + 0x118]\n  3540: a4 = a1 <u a4\n  3543: a3 = a3 + a4\n  3546: t0 = a3 ^ ra\n  3549: a5 = a3 <u ra\n  3552: a5 = a4 if t0 == 0\n  3555: a5 = a5 + a2\n  3558: t0 = a5 <u a2\n  3561: a4 = u64 [s1 + 0x110]\n  3565: a2 = a2 <u a4\n  3568: a0 = a0 + a2\n  3571: a0 = a0 + t0\n  3574: t0 = 54, jump @662\n      : @91 [@dyn 27] (gas: 1)\n  3579: jump @168 if a0 != 0\n      : @92 (gas: 2)\n  3583: a0 = s1 + 0x340\n  3587: ra = 56, jump @17\n      : @93 [@dyn 28] (gas: 11)\n  3592: a1 = s1 + 0x300\n  3596: a0 = u64 [a1 + 0x58]\n  3599: u64 [s1 + 0x110] = a0\n  3603: a0 = u64 [a1 + 0x50]\n  3606: u64 [s1 + 0x108] = a0\n  3610: a0 = u64 [a1 + 0x48]\n  3613: u64 [s1 + 0x100] = a0\n  3617: a0 = u64 [a1 + 0x40]\n  3620: u64 [s1 + 0xf8] = a0\n  3624: a0 = u64 [s1 + 0x68]\n  3627: t0 = 58, jump @666\n      : @94 [@dyn 29] (gas: 1)\n  3632: ra = 60, jump @680\n      : @95 [@dyn 30] (gas: 6)\n  3637: u64 [s1 + 0xe8] = a0\n  3641: u64 [s1 + 0xd0] = a1\n  3645: a0 = 0xffffffffffffffff\n  3648: a1 = 0xffffffffffffffff\n  3651: a2 = u64 [s1 + 0x118]\n  3655: ra = 62, jump @675\n      : @96 [@dyn 31] (gas: 1)\n  3660: t0 = 64, jump @667\n      : @97 [@dyn 32] (gas: 1)\n  3665: ra = 66, jump @675\n      : @98 [@dyn 33] (gas: 1)\n  3670: t0 = 68, jump @654\n      : @99 [@dyn 34] (gas: 8)\n  3675: a4 = s1 + 0x500\n  3679: u64 [a4 + 0xf8] = a3\n  3683: u64 [a4 + 0xf0] = a2\n  3687: u64 [a4 + 0xe8] = a1\n  3691: u64 [a4 + 0xe0] = a0\n  3695: a1 = s1 + 0x5e0\n  3699: a0 = u64 [s1 + 0xf0]\n  3703: ra = 70, jump @22\n      : @100 [@dyn 35] (gas: 3)\n  3708: t0 = u64 [s1 + 0x30]\n  3711: a5 = u64 [s1 + 0x38]\n  3714: fallthrough\n      : @101 (gas: 22)\n  3715: a0 = u64 [s1 + 0x28]\n  3718: a0 = a0 | a5\n  3721: a1 = u64 [s1 + 0x58]\n  3724: a2 = u64 [s1 + 0x48]\n  3727: a1 = a1 | a2\n  3730: a2 = u64 [s1 + 0x50]\n  3733: a2 = a2 | t0\n  3736: a3 = u64 [s1 + 0x40]\n  3739: a3 = a3 + 0x1\n  3742: u64 [s1 + 1560] = 0\n  3746: u64 [s1 + 1552] = 0\n  3750: u64 [s1 + 1544] = 0\n  3754: a5 = s1 + 0x600\n  3758: u64 [a5 + 0] = 0x3\n  3761: u64 [a5 + 0x20] = a3\n  3764: u64 [a5 + 0x28] = a2\n  3767: u64 [a5 + 0x30] = a1\n  3770: u64 [a5 + 0x38] = a0\n  3773: a0 = s1 + 0x600\n  3777: a1 = s1 + 0x620\n  3781: ra = 0x56\n  3784: jump @22\n      : @102 (gas: 6)\n  3787: a0 = a5 | a1\n  3790: a1 = 0xffffffe0\n  3800: a1 = a4 <u a1\n  3803: a1 = 0 if t1 != 0\n  3805: a1 = 0 if a0 != 0\n  3807: jump @168 if a1 == 0\n      : @103 (gas: 7)\n  3811: u64 [s1 + 0x40] = a2\n  3814: i32 a1 = a4 + 0x20\n  3817: a0 = s1 + 0x380\n  3821: u64 [s1 + 0x28] = t2\n  3824: u64 [s1 + 0x38] = ra\n  3827: u64 [s1 + 0x30] = t0\n  3830: ra = 72, jump @17\n      : @104 [@dyn 36] (gas: 15)\n  3835: t0 = u64 [s1 + 0x30]\n  3838: ra = u64 [s1 + 0x38]\n  3841: t2 = u64 [s1 + 0x28]\n  3844: a3 = u64 [s1 + 0x68]\n  3847: a1 = s1 + 0x300\n  3851: a0 = u64 [a1 + 0x98]\n  3855: a2 = s1 + 0x100\n  3859: u64 [a2 + 0x10] = a0\n  3862: a0 = u64 [a1 + 0x90]\n  3866: u64 [a2 + 0x8] = a0\n  3869: a0 = u64 [a1 + 0x88]\n  3873: u64 [s1 + 0xf8] = a0\n  3877: a0 = u64 [a1 + 0x80]\n  3881: u64 [a2] = a0\n  3883: fallthrough\n      : @105 (gas: 10)\n  3884: a0 = u64 [s1 + 0x58]\n  3887: a1 = u64 [s1 + 0x48]\n  3890: a0 = a0 | a1\n  3893: u64 [s1 + 0xf0] = a0\n  3897: a0 = ra | t2\n  3900: u64 [s1 + 0xe8] = a0\n  3904: a0 = u64 [s1 + 0x50]\n  3907: a0 = a0 | t0\n  3910: u64 [s1 + 0xe0] = a0\n  3914: t0 = 74, jump @674\n      : @106 [@dyn 37] (gas: 1)\n  3919: ra = 76, jump @680\n      : @107 [@dyn 38] (gas: 7)\n  3924: u64 [s1 + 0xc0] = a0\n  3928: u64 [s1 + 0xd8] = a1\n  3932: a0 = u64 [s1 + 0x68]\n  3935: i32 a2 = a0 << 0x3\n  3938: a0 = 0xffffffffffffffff\n  3941: a1 = 0xffffffffffffffff\n  3944: ra = 78, jump @675\n      : @108 [@dyn 39] (gas: 10)\n  3949: u64 [s1 + 0xd0] = a0\n  3953: u64 [s1 + 0xc8] = a1\n  3957: a1 = u64 [s1 + 0xc0]\n  3961: a0 = a0 | a1\n  3964: u64 [s1 + 0xc0] = a0\n  3968: a0 = u64 [s1 + 0x118]\n  3972: i32 a2 = a0 + 0xffffffffffffff80\n  3975: a0 = 0xffffffffffffffff\n  3978: a1 = 0xffffffffffffffff\n  3981: ra = 80, jump @675\n      : @109 [@dyn 40] (gas: 7)\n  3986: a4 = u64 [s1 + 0x118]\n  3990: a2 = a4 <u 0x80\n  3994: a3 = u64 [s1 + 0xc0]\n  3998: a0 = a3 if a2 != 0\n  4001: a5 = u64 [s1 + 0xc8]\n  4005: a3 = u64 [s1 + 0xd8]\n  4009: t0 = 82, jump @669\n      : @110 [@dyn 41] (gas: 2)\n  4014: a4 = u64 [s1 + 0xd0]\n  4018: t0 = 84, jump @657\n      : @111 [@dyn 42] (gas: 20)\n  4023: a4 = u64 [s1 + 0x40]\n  4026: a0 = a0 | a4\n  4029: a4 = u64 [s1 + 0xe0]\n  4033: a1 = a1 | a4\n  4036: a4 = u64 [s1 + 0xe8]\n  4040: a3 = a3 | a4\n  4043: a4 = u64 [s1 + 0xf0]\n  4047: a2 = a2 | a4\n  4050: a5 = s1 + 0x600\n  4054: u64 [a5 + 64] = 0x3\n  4058: u64 [a5 + 0x70] = a2\n  4061: u64 [a5 + 0x78] = a3\n  4064: u64 [a5 + 0x68] = a1\n  4067: u64 [a5 + 0x60] = a0\n  4070: u64 [s1 + 1624] = 0\n  4074: u64 [s1 + 1616] = 0\n  4078: u64 [s1 + 1608] = 0\n  4082: a0 = s1 + 0x640\n  4086: a1 = s1 + 0x660\n  4090: ra = 86, jump @22\n      : @112 [@dyn 43] (gas: 12)\n  4095: a1 = u64 [s1 + 0x88]\n  4099: a4 = u64 [s1 + 0x70]\n  4102: a0 = a1 | a4\n  4105: a2 = u64 [s1 + 0x80]\n  4109: a3 = u64 [s1 + 0x78]\n  4112: a2 = a2 | a3\n  4115: a0 = a0 | a2\n  4118: a0 = a0 >> 0x20\n  4121: a2 = a2 | a4\n  4124: a2 = a2 << 0x20\n  4127: a0 = a0 | a2\n  4130: jump @168 if a0 != 0\n      : @113 (gas: 2)\n  4134: a0 = s1 + 0x320\n  4138: ra = 88, jump @17\n      : @114 [@dyn 44] (gas: 17)\n  4143: a0 = s1 + 0x300\n  4147: a3 = u64 [a0 + 0x38]\n  4150: a2 = u64 [a0 + 0x30]\n  4153: a1 = u64 [a0 + 0x28]\n  4156: a0 = a3 >u 0\n  4158: a4 = a2 >u 0\n  4160: a4 = a0 if a3 != 0\n  4163: u64 [s1 + 0xa0] = a1\n  4167: a0 = a1 >u 0\n  4169: u64 [s1 + 0x98] = a2\n  4173: u64 [s1 + 0x90] = a3\n  4177: a2 = a2 | a3\n  4180: u64 [s1 + 0xb8] = a0\n  4184: u64 [s1 + 0xc0] = a4\n  4188: u64 [s1 + 0xd0] = a2\n  4192: a0 = a4 if a2 != 0\n  4195: jump @185 if a0 != 0\n      : @115 (gas: 9)\n  4199: a0 = u64 [s1 + 0x320]\n  4203: u64 [s1 + 0xa8] = a0\n  4207: u64 [s1 + 1688] = 0\n  4211: u64 [s1 + 1680] = 0\n  4215: u64 [s1 + 1672] = 0\n  4219: u64 [s1 + 1664] = 0x4\n  4224: a0 = s1 + 0x300\n  4228: a1 = s1 + 0x680\n  4232: ra = 90, jump @21\n      : @116 [@dyn 45] (gas: 6)\n  4237: a4 = s1 + 0x300\n  4241: a0 = u64 [a4 + 0x10]\n  4244: a1 = u64 [a4 + 0x8]\n  4247: a2 = u64 [a4]\n  4249: a3 = u64 [a4 + 0x18]\n  4252: t0 = 92, jump @656\n      : @117 [@dyn 46] (gas: 12)\n  4257: t0 = a2 <u 0x1\n  4260: ra = a1 & 0x7f\n  4263: t2 = a5 & a0\n  4266: a4 = a5 & t1\n  4269: ra = a1 if a2 != 0\n  4272: a1 = ra <u 0x20\n  4275: a5 = a5 & a3\n  4278: a2 = a1\n  4280: a2 = 0 if a4 != 0\n  4282: a0 = t2 | a5\n  4285: a2 = 0 if a0 != 0\n  4287: jump @191 if t0 != a2\n      : @118 (gas: 1)\n  4291: t0 = 94, jump @660\n      : @119 [@dyn 47] (gas: 4)\n  4296: a0 = u64 [s1 + 0xa8]\n  4300: a0 = a0 <u 0x20\n  4303: u64 [s1 + 0xc8] = a0\n  4307: jump @128 if a3 == 0\n      : @120 (gas: 11)\n  4311: u64 [s1 + 0xf0] = a4\n  4315: u64 [s1 + 0xf8] = ra\n  4319: u64 [s1 + 0x100] = a5\n  4323: u64 [s1 + 0x110] = t2\n  4327: u64 [s1 + 760] = 0\n  4331: u64 [s1 + 752] = 0\n  4335: u64 [s1 + 744] = 0\n  4339: a1 = s1 + 0x2e0\n  4343: u64 [s1 + 736] = 0x4\n  4348: a0 = 0\n  4350: ra = 96, jump @19\n      : @121 [@dyn 48] (gas: 2)\n  4355: a1 = i32 [0x200ac]\n  4360: jump @123 if a1 >u 31\n      : @122 (gas: 2)\n  4364: u32 [0x200ac] = 0x20\n  4370: fallthrough\n      : @123 (gas: 87)\n  4371: a0 = sp + 0xffffffffffffffe0\n  4374: a2 = a0 & 0xffffffffffffffe0\n  4377: u64 [s1 + 0x108] = a2\n  4381: sp = a2\n  4383: a0 = 0x200c0\n  4388: i32 a0 = a0 + 0\n  4390: i32 a2 = a2 + 0\n  4392: a1 = 0x20\n  4395: ecalli 6 // 'hash_keccak_256'\n  4397: a0 = u64 [s1 + 0xa8]\n  4401: a1 = a0 + 0x1f\n  4404: a0 = a1 <u a0\n  4407: a5 = u64 [s1 + 0xa0]\n  4411: a2 = a5 + a0\n  4414: a3 = a2 <u a5\n  4417: a3 = a0 if a0 == 0\n  4420: a4 = u64 [s1 + 0x98]\n  4424: a3 = a3 + a4\n  4427: u64 [s1 + 0xe8] = a3\n  4431: a3 = a3 << 0x3b\n  4434: a4 = a2 >> 0x5\n  4437: a4 = a4 | a3\n  4440: a0 = u64 [s1 + 0x108]\n  4444: t0 = u64 [a0 + 0x18]\n  4447: a2 = a2 << 0x3b\n  4450: a0 = u64 [a0 + 0x10]\n  4453: a1 = a1 >> 0x5\n  4456: a2 = a2 | a1\n  4459: t2 = reverse t0\n  4461: a0 = reverse a0\n  4463: a1 = u64 [s1 + 0xc8]\n  4467: a1 = 0 if a5 != 0\n  4469: a3 = u64 [s1 + 0xd0]\n  4473: a1 = 0 if a3 != 0\n  4475: a4 = 0 if a1 != 0\n  4477: a2 = 0 if a1 != 0\n  4479: t0 = t2 + a2\n  4482: a2 = t0 <u t2\n  4485: a5 = a0 + a2\n  4488: a4 = a4 + a5\n  4491: u64 [s1 + 0x118] = a4\n  4495: a5 = a4 ^ a0\n  4498: a3 = a4 <u a0\n  4501: a3 = a2 if a5 == 0\n  4504: u64 [s1 + 0xe0] = a3\n  4508: a2 = u64 [s1 + 0xf8]\n  4512: ra = a2 + 0x1f\n  4515: a4 = ra <u a2\n  4518: a3 = u64 [s1 + 0xf0]\n  4522: a2 = a3 + a4\n  4525: a5 = a2 <u a3\n  4528: a5 = a4 if a4 == 0\n  4531: t1 = u64 [s1 + 0x110]\n  4535: t1 = t1 + a5\n  4538: a4 = t1 << 0x3b\n  4541: a3 = a2 >> 0x5\n  4544: a3 = a3 | a4\n  4547: a2 = a2 << 0x3b\n  4550: a4 = ra >> 0x5\n  4553: a2 = a2 | a4\n  4556: a2 = a2 + t2\n  4559: u64 [s1 + 0xf8] = a2\n  4563: a4 = a2 <u t2\n  4566: t2 = t0\n  4568: a2 = a0 + a4\n  4571: a2 = a2 + a3\n  4574: a3 = a2 ^ a0\n  4577: u64 [s1 + 0xf0] = a2\n  4581: a2 = a2 <u a0\n  4584: a2 = a4 if a3 == 0\n  4587: a4 = u64 [s1 + 0xe8]\n  4591: a0 = u64 [s1 + 0x98]\n  4595: a0 = a4 <u a0\n  4598: a3 = u64 [s1 + 0x90]\n  4602: a0 = a0 + a3\n  4605: a3 = a4 >> 0x5\n  4608: a4 = a0 << 0x3b\n  4611: a3 = a3 | a4\n  4614: a4 = u64 [s1 + 0x108]\n  4618: t0 = u64 [a4]\n  4620: a4 = u64 [a4 + 0x8]\n  4623: a0 = a0 >> 0x5\n  4626: a3 = 0 if a1 != 0\n  4628: a0 = 0 if a1 != 0\n  4630: a1 = reverse a4\n  4632: a4 = reverse t0\n  4634: t0 = 98, jump @673\n      : @124 [@dyn 49] (gas: 24)\n  4639: t0 = a0 + a3\n  4642: a0 = u64 [s1 + 0x110]\n  4646: a0 = t1 <u a0\n  4649: a3 = u64 [s1 + 0x100]\n  4653: a0 = a0 + a3\n  4656: a3 = t1 >> 0x5\n  4659: a5 = a0 << 0x3b\n  4662: a3 = a3 | a5\n  4665: a0 = a0 >> 0x5\n  4668: a0 = a0 + a4\n  4671: a4 = u64 [s1 + 0x118]\n  4675: a3 = a3 + a1\n  4678: a1 = a3 <u a1\n  4681: a0 = a0 + a1\n  4684: a2 = a2 + a3\n  4687: u64 [s1 + 0xe8] = a2\n  4691: a1 = a2 <u a3\n  4694: a0 = a0 + a1\n  4697: u64 [s1 + 0xe0] = a0\n  4701: a0 = sp + 0xffffffffffffffe0\n  4704: t1 = a0 & 0xffffffffffffffe0\n  4707: sp = t1\n  4709: u64 [s1 + 0xd8] = t1\n  4713: fallthrough\n      : @125 (gas: 20)\n  4714: a0 = u64 [s1 + 0xf8]\n  4718: a0 = t2 <u a0\n  4721: a2 = u64 [s1 + 0xf0]\n  4725: a1 = a4 ^ a2\n  4728: a2 = a4 <u a2\n  4731: a2 = a0 if a1 == 0\n  4734: a5 = u64 [s1 + 0xe8]\n  4738: a0 = ra <u a5\n  4741: a3 = u64 [s1 + 0xe0]\n  4745: a1 = t0 ^ a3\n  4748: a3 = t0 <u a3\n  4751: a3 = a0 if a1 == 0\n  4754: a0 = ra ^ a5\n  4757: a0 = a0 | a1\n  4760: a3 = a2 if a0 == 0\n  4763: u64 [t1] = t2\n  4765: u64 [t1 + 0x8] = a4\n  4768: u64 [t1 + 0x10] = ra\n  4771: u64 [t1 + 0x18] = t0\n  4774: jump @128 if a3 == 0\n      : @126 (gas: 11)\n  4777: u64 [s1 + 1720] = 0\n  4781: u64 [s1 + 1712] = 0\n  4785: u64 [s1 + 1704] = 0\n  4789: u64 [s1 + 1696] = 0\n  4793: a1 = s1 + 0x6a0\n  4797: a0 = t1\n  4799: u64 [s1 + 0x110] = t2\n  4803: u64 [s1 + 0x118] = a4\n  4807: u64 [s1 + 0x108] = t0\n  4811: u64 [s1 + 0x100] = ra\n  4815: ra = 100, jump @22\n      : @127 [@dyn 50] (gas: 15)\n  4820: t1 = u64 [s1 + 0xd8]\n  4824: t0 = u64 [s1 + 0x108]\n  4828: a4 = u64 [s1 + 0x118]\n  4832: t2 = u64 [s1 + 0x110]\n  4836: t2 = t2 + 0x1\n  4839: a0 = t2 <u 0x1\n  4842: a4 = a4 + a0\n  4845: a0 = t2 | a4\n  4848: a0 = a0 <u 0x1\n  4851: a1 = u64 [s1 + 0x100]\n  4855: a0 = a0 + a1\n  4858: a1 = a0 <u a1\n  4861: t0 = t0 + a1\n  4864: ra = a0\n  4866: jump @125\n      : @128 (gas: 9)\n  4869: a0 = u64 [s1 + 0xc8]\n  4873: a0 = a0 ^ 0x1\n  4876: a4 = u64 [s1 + 0xa0]\n  4880: a1 = u64 [s1 + 0xb8]\n  4884: a0 = a1 if a4 != 0\n  4887: a1 = u64 [s1 + 0xc0]\n  4891: a2 = u64 [s1 + 0xd0]\n  4895: a0 = a1 if a2 != 0\n  4898: jump @140 if a0 == 0\n      : @129 (gas: 10)\n  4902: a0 = u64 [s1 + 0xa8]\n  4906: a0 = a0 & 0xffffffffffffffe0\n  4909: u64 [s1 + 0xb0] = a0\n  4913: u64 [s1 + 696] = 0\n  4917: u64 [s1 + 688] = 0\n  4921: u64 [s1 + 680] = 0\n  4925: a1 = s1 + 0x2a0\n  4929: u64 [s1 + 672] = 0x4\n  4934: a0 = 0\n  4936: ra = 102, jump @19\n      : @130 [@dyn 51] (gas: 7)\n  4941: a0 = sp + 0xffffffffffffffe0\n  4944: a0 = a0 & 0xffffffffffffffe0\n  4947: u64 [s1 + 0xf0] = a0\n  4951: sp = a0\n  4953: a1 = 0x20\n  4956: a0 = 0\n  4958: ra = 104, jump @26\n      : @131 [@dyn 52] (gas: 1)\n  4963: t0 = 106, jump @672\n      : @132 [@dyn 53] (gas: 5)\n  4968: ecalli 6 // 'hash_keccak_256'\n  4970: u64 [s1 + 272] = 0x20\n  4975: a5 = 0\n  4977: u64 [s1 + 280] = 0\n  4981: t0 = 108, jump @663\n      : @133 [@dyn 54] (gas: 15)\n  4986: t0 = u64 [a3]\n  4988: t1 = reverse a0\n  4990: a1 = reverse a1\n  4992: a3 = reverse a2\n  4994: a2 = reverse t0\n  4996: t0 = a2\n  4998: a0 = u64 [s1 + 0xf0]\n  5002: u64 [a0 + 0x18] = a2\n  5005: u64 [s1 + 0xc8] = a3\n  5009: u64 [a0 + 0x10] = a3\n  5012: u64 [s1 + 0xe0] = a1\n  5016: u64 [a0 + 0x8] = a1\n  5019: a3 = t1\n  5021: u64 [a0] = t1\n  5023: fallthrough\n      : @134 (gas: 26)\n  5024: t1 = t0\n  5026: t2 = a3\n  5028: a0 = u64 [s1 + 0xb0]\n  5032: u64 [s1 + 0xd8] = a4\n  5036: a0 = a4 <u a0\n  5039: a4 = a0 ^ 0x1\n  5042: u64 [s1 + 0xd0] = ra\n  5046: a4 = 0x1 if ra != 0\n  5049: a0 = u64 [s1 + 0x100]\n  5053: a2 = u64 [s1 + 0xf8]\n  5057: a0 = a0 | a2\n  5060: a4 = 0x1 if a0 != 0\n  5063: a1 = u64 [s1 + 0x88]\n  5067: ra = u64 [s1 + 0x110]\n  5071: a1 = a1 + ra\n  5074: a3 = u64 [s1 + 0x80]\n  5078: t0 = a5\n  5080: a3 = a3 + a5\n  5083: a2 = u64 [s1 + 0x70]\n  5086: a0 = u64 [s1 + 0x118]\n  5090: a2 = a2 + a0\n  5093: a0 = u64 [s1 + 0x78]\n  5096: a5 = u64 [s1 + 0x108]\n  5100: a0 = a0 + a5\n  5103: u64 [s1 + 0xe8] = t0\n  5107: jump @142 if a4 != 0\n      : @135 (gas: 13)\n  5111: a4 = a1 <u ra\n  5114: a3 = a3 + a4\n  5117: a5 = t0\n  5119: t0 = a3 ^ t0\n  5122: a5 = a3 <u a5\n  5125: a5 = a4 if t0 == 0\n  5128: a5 = a5 + a2\n  5131: t0 = a5 <u a2\n  5134: a4 = u64 [s1 + 0x118]\n  5138: a2 = a2 <u a4\n  5141: a0 = a0 + a2\n  5144: a0 = a0 + t0\n  5147: t0 = 110, jump @662\n      : @136 [@dyn 55] (gas: 3)\n  5152: u64 [s1 + 0xc0] = t2\n  5156: u64 [s1 + 0xb8] = t1\n  5160: jump @168 if a0 != 0\n      : @137 (gas: 3)\n  5164: a0 = s1 + 0x240\n  5168: u64 [s1 + 0x110] = ra\n  5172: ra = 112, jump @17\n      : @138 [@dyn 56] (gas: 13)\n  5177: a4 = s1 + 0x200\n  5181: a0 = u64 [a4 + 0x58]\n  5184: a1 = u64 [a4 + 0x50]\n  5187: a2 = u64 [a4 + 0x48]\n  5190: a3 = u64 [a4 + 0x40]\n  5193: a4 = s1 + 0x600\n  5197: u64 [a4 + 0xd8] = a0\n  5201: u64 [a4 + 0xd0] = a1\n  5205: u64 [a4 + 0xc8] = a2\n  5209: u64 [a4 + 0xc0] = a3\n  5213: a1 = s1 + 0x6c0\n  5217: a0 = u64 [s1 + 0xf0]\n  5221: ra = 114, jump @22\n      : @139 [@dyn 57] (gas: 57)\n  5226: ra = u64 [s1 + 0xc0]\n  5230: ra = ra + 0x1\n  5233: a0 = ra <u 0x1\n  5236: t0 = u64 [s1 + 0xe0]\n  5240: t0 = t0 + a0\n  5243: a0 = ra | t0\n  5246: a0 = a0 <u 0x1\n  5249: a1 = u64 [s1 + 0xc8]\n  5253: t1 = a1 + a0\n  5256: a1 = t1 <u a1\n  5259: a0 = u64 [s1 + 0xb8]\n  5263: a0 = a0 + a1\n  5266: a1 = u64 [s1 + 0x110]\n  5270: a2 = a1 + 0x20\n  5273: u64 [s1 + 0xc0] = a2\n  5277: a3 = a2 <u a1\n  5280: a1 = u64 [s1 + 0xe8]\n  5284: a2 = a1 + a3\n  5287: u64 [s1 + 0xb8] = a2\n  5291: a4 = a2 <u a1\n  5294: a4 = a3 if a3 == 0\n  5297: a1 = u64 [s1 + 0x118]\n  5301: t2 = a1 + a4\n  5304: a4 = t2 <u a1\n  5307: a1 = u64 [s1 + 0x108]\n  5311: a1 = a1 + a4\n  5314: u64 [s1 + 0x108] = a1\n  5318: a1 = u64 [s1 + 0xd8]\n  5322: a4 = a1 + 0x20\n  5325: a5 = a4 <u a1\n  5328: a2 = u64 [s1 + 0xd0]\n  5332: a1 = a2 + a5\n  5335: a2 = a1 <u a2\n  5338: a2 = a5 if a5 == 0\n  5341: a3 = u64 [s1 + 0xf8]\n  5345: a2 = a2 + a3\n  5348: a5 = a2 <u a3\n  5351: a3 = u64 [s1 + 0x100]\n  5355: a3 = a3 + a5\n  5358: u64 [s1 + 0x100] = a3\n  5362: a3 = t0\n  5364: u64 [s1 + 0xe0] = a3\n  5368: a5 = u64 [s1 + 0xf0]\n  5372: u64 [a5 + 0x8] = a3\n  5375: a3 = ra\n  5377: u64 [a5] = ra\n  5379: u64 [a5 + 0x10] = t1\n  5382: t0 = a0\n  5384: u64 [a5 + 0x18] = a0\n  5387: u64 [s1 + 0xc8] = t1\n  5391: a0 = u64 [s1 + 0xc0]\n  5395: u64 [s1 + 0x110] = a0\n  5399: a5 = u64 [s1 + 0xb8]\n  5403: u64 [s1 + 0x118] = t2\n  5407: ra = a1\n  5409: u64 [s1 + 0xf8] = a2\n  5413: jump @134\n      : @140 (gas: 8)\n  5416: a3 = u64 [s1 + 0xa8]\n  5420: a5 = u64 [s1 + 0x98]\n  5424: a0 = a3 | a5\n  5427: a2 = u64 [s1 + 0x90]\n  5431: a1 = a4 | a2\n  5434: a0 = a0 | a1\n  5437: t0 = u64 [s1 + 0x88]\n  5441: jump @155 if a0 != 0\n      : @141 (gas: 5)\n  5445: u64 [s1 + 256] = 0\n  5449: u64 [s1 + 248] = 0\n  5453: u64 [s1 + 264] = 0\n  5457: u64 [s1 + 272] = 0\n  5461: jump @158\n      : @142 (gas: 10)\n  5464: t0 = u64 [s1 + 0xa8]\n  5468: a4 = u64 [s1 + 0xb0]\n  5472: a4 = a4 ^ t0\n  5475: t2 = u64 [s1 + 0x98]\n  5479: a4 = a4 | t2\n  5482: t1 = u64 [s1 + 0xa0]\n  5486: ra = u64 [s1 + 0x90]\n  5490: a5 = t1 | ra\n  5493: a4 = a4 | a5\n  5496: jump @154 if a4 == 0\n      : @143 (gas: 14)\n  5500: a4 = u64 [s1 + 0x110]\n  5504: a4 = a1 <u a4\n  5507: a3 = a3 + a4\n  5510: a5 = u64 [s1 + 0xe8]\n  5514: t0 = a3 ^ a5\n  5517: a5 = a3 <u a5\n  5520: a5 = a4 if t0 == 0\n  5523: a5 = a5 + a2\n  5526: t0 = a5 <u a2\n  5529: a4 = u64 [s1 + 0x118]\n  5533: a2 = a2 <u a4\n  5536: a0 = a0 + a2\n  5539: a0 = a0 + t0\n  5542: t0 = 116, jump @662\n      : @144 [@dyn 58] (gas: 1)\n  5547: jump @168 if a0 != 0\n      : @145 (gas: 2)\n  5551: a0 = s1 + 0x280\n  5555: ra = 118, jump @17\n      : @146 [@dyn 59] (gas: 11)\n  5560: a1 = s1 + 0x200\n  5564: a0 = u64 [a1 + 0x98]\n  5568: u64 [s1 + 0x110] = a0\n  5572: a0 = u64 [a1 + 0x90]\n  5576: u64 [s1 + 0x108] = a0\n  5580: a0 = u64 [a1 + 0x88]\n  5584: u64 [s1 + 0x100] = a0\n  5588: a0 = u64 [a1 + 0x80]\n  5592: u64 [s1 + 0xf8] = a0\n  5596: a0 = u64 [s1 + 0xa8]\n  5600: t0 = 120, jump @666\n      : @147 [@dyn 60] (gas: 1)\n  5605: ra = 122, jump @680\n      : @148 [@dyn 61] (gas: 6)\n  5610: u64 [s1 + 0xe8] = a0\n  5614: u64 [s1 + 0xd0] = a1\n  5618: a0 = 0xffffffffffffffff\n  5621: a1 = 0xffffffffffffffff\n  5624: a2 = u64 [s1 + 0x118]\n  5628: ra = 124, jump @675\n      : @149 [@dyn 62] (gas: 1)\n  5633: t0 = 126, jump @667\n      : @150 [@dyn 63] (gas: 1)\n  5638: ra = 128, jump @675\n      : @151 [@dyn 64] (gas: 1)\n  5644: t0 = 130, jump @654\n      : @152 [@dyn 65] (gas: 8)\n  5650: a4 = s1 + 0x600\n  5654: u64 [a4 + 0xf8] = a3\n  5658: u64 [a4 + 0xf0] = a2\n  5662: u64 [a4 + 0xe8] = a1\n  5666: u64 [a4 + 0xe0] = a0\n  5670: a1 = s1 + 0x6e0\n  5674: a0 = u64 [s1 + 0xf0]\n  5678: ra = 132, jump @22\n      : @153 [@dyn 66] (gas: 5)\n  5684: t0 = u64 [s1 + 0xa8]\n  5688: t1 = u64 [s1 + 0xa0]\n  5692: t2 = u64 [s1 + 0x98]\n  5696: ra = u64 [s1 + 0x90]\n  5700: fallthrough\n      : @154 (gas: 24)\n  5701: a0 = t2 >> 0x3f\n  5704: a1 = ra << 0x1\n  5707: a0 = a0 | a1\n  5710: a1 = t1 >> 0x3f\n  5713: a2 = t2 << 0x1\n  5716: a1 = a1 | a2\n  5719: a2 = t0 >> 0x3f\n  5722: a3 = t1 << 0x1\n  5725: a2 = a2 | a3\n  5728: a3 = t0 << 0x1\n  5731: a3 = a3 + 0x1\n  5734: u64 [s1 + 1816] = 0\n  5738: u64 [s1 + 1808] = 0\n  5742: u64 [s1 + 1800] = 0\n  5746: a5 = s1 + 0x700\n  5750: u64 [a5 + 0] = 0x4\n  5753: u64 [a5 + 0x20] = a3\n  5756: u64 [a5 + 0x28] = a2\n  5759: u64 [a5 + 0x30] = a1\n  5762: u64 [a5 + 0x38] = a0\n  5765: a0 = s1 + 0x700\n  5769: a1 = s1 + 0x720\n  5773: ra = 0x94\n  5777: jump @22\n      : @155 (gas: 9)\n  5780: a0 = u64 [s1 + 0x78]\n  5783: a1 = u64 [s1 + 0x70]\n  5786: a0 = a0 | a1\n  5789: a1 = 0xffffffe0\n  5799: a1 = t0 <u a1\n  5802: a3 = u64 [s1 + 0x80]\n  5806: a1 = 0 if a3 != 0\n  5808: a1 = 0 if a0 != 0\n  5810: jump @168 if a1 == 0\n      : @156 (gas: 3)\n  5814: i32 a1 = t0 + 0x20\n  5817: a0 = s1 + 0x2c0\n  5821: ra = 134, jump @17\n      : @157 [@dyn 67] (gas: 14)\n  5827: a2 = u64 [s1 + 0x90]\n  5831: a5 = u64 [s1 + 0x98]\n  5835: a4 = u64 [s1 + 0xa0]\n  5839: a3 = u64 [s1 + 0xa8]\n  5843: a1 = s1 + 0x200\n  5847: a0 = u64 [a1 + 0xd8]\n  5851: u64 [s1 + 0x110] = a0\n  5855: a0 = u64 [a1 + 0xd0]\n  5859: u64 [s1 + 0x108] = a0\n  5863: a0 = u64 [a1 + 0xc8]\n  5867: u64 [s1 + 0xf8] = a0\n  5871: a0 = u64 [a1 + 0xc0]\n  5875: u64 [s1 + 0x100] = a0\n  5879: fallthrough\n      : @158 (gas: 15)\n  5880: a0 = a4 >> 0x3f\n  5883: a1 = a5 << 0x1\n  5886: a0 = a0 | a1\n  5889: u64 [s1 + 0xf0] = a0\n  5893: a0 = a5 >> 0x3f\n  5896: a1 = a2 << 0x1\n  5899: a0 = a0 | a1\n  5902: u64 [s1 + 0xe8] = a0\n  5906: a0 = a3 >> 0x3f\n  5909: a1 = a4 << 0x1\n  5912: a0 = a0 | a1\n  5915: u64 [s1 + 0xe0] = a0\n  5919: a0 = a3 << 0x1\n  5922: u64 [s1 + 0xd8] = a0\n  5926: t0 = 136, jump @674\n      : @159 [@dyn 68] (gas: 1)\n  5932: ra = 138, jump @680\n      : @160 [@dyn 69] (gas: 7)\n  5938: u64 [s1 + 0xb8] = a0\n  5942: u64 [s1 + 0xd0] = a1\n  5946: a0 = u64 [s1 + 0xa8]\n  5950: i32 a2 = a0 << 0x3\n  5953: a0 = 0xffffffffffffffff\n  5956: a1 = 0xffffffffffffffff\n  5959: ra = 140, jump @675\n      : @161 [@dyn 70] (gas: 10)\n  5965: u64 [s1 + 0xc8] = a0\n  5969: u64 [s1 + 0xc0] = a1\n  5973: a1 = u64 [s1 + 0xb8]\n  5977: a0 = a0 | a1\n  5980: u64 [s1 + 0xb8] = a0\n  5984: a0 = u64 [s1 + 0x118]\n  5988: i32 a2 = a0 + 0xffffffffffffff80\n  5991: a0 = 0xffffffffffffffff\n  5994: a1 = 0xffffffffffffffff\n  5997: ra = 142, jump @675\n      : @162 [@dyn 71] (gas: 7)\n  6003: a4 = u64 [s1 + 0x118]\n  6007: a2 = a4 <u 0x80\n  6011: a3 = u64 [s1 + 0xb8]\n  6015: a0 = a3 if a2 != 0\n  6018: a5 = u64 [s1 + 0xc0]\n  6022: a3 = u64 [s1 + 0xd0]\n  6026: t0 = 144, jump @669\n      : @163 [@dyn 72] (gas: 2)\n  6032: a4 = u64 [s1 + 0xc8]\n  6036: t0 = 146, jump @657\n      : @164 [@dyn 73] (gas: 20)\n  6042: a4 = u64 [s1 + 0xd8]\n  6046: a0 = a0 | a4\n  6049: a4 = u64 [s1 + 0xe0]\n  6053: a1 = a1 | a4\n  6056: a4 = u64 [s1 + 0xe8]\n  6060: a3 = a3 | a4\n  6063: a4 = u64 [s1 + 0xf0]\n  6067: a2 = a2 | a4\n  6070: a5 = s1 + 0x700\n  6074: u64 [a5 + 64] = 0x4\n  6078: u64 [a5 + 0x70] = a2\n  6081: u64 [a5 + 0x78] = a3\n  6084: u64 [a5 + 0x68] = a1\n  6087: u64 [a5 + 0x60] = a0\n  6090: u64 [s1 + 1880] = 0\n  6094: u64 [s1 + 1872] = 0\n  6098: u64 [s1 + 1864] = 0\n  6102: a0 = s1 + 0x740\n  6106: a1 = s1 + 0x760\n  6110: ra = 148, jump @22\n      : @165 [@dyn 74] (gas: 3)\n  6116: a0 = s1 + 0x260\n  6120: a1 = 0x40\n  6123: ra = 150, jump @17\n      : @166 [@dyn 75] (gas: 6)\n  6129: a4 = s1 + 0x200\n  6133: a3 = u64 [a4 + 0x78]\n  6136: a1 = u64 [a4 + 0x70]\n  6139: a2 = u64 [a4 + 0x68]\n  6142: a0 = u64 [a4 + 0x60]\n  6145: t0 = 152, jump @658\n      : @167 [@dyn 76] (gas: 1)\n  6151: jump @198 if a1 == 0\n      : @168 (gas: 1)\n  6155: trap\n      : @169 (gas: 6)\n  6156: a1 = 0x200c0\n  6161: i32 a1 = a1 + 0\n  6163: a0 = 0x1\n  6166: a2 = 0\n  6168: ecalli 7 // 'seal_return'\n  6170: jump @173\n      : @170 (gas: 6)\n  6172: a1 = 0x200c0\n  6177: i32 a1 = a1 + 0\n  6179: a0 = 0x1\n  6182: a2 = 0\n  6184: ecalli 7 // 'seal_return'\n  6186: jump @173\n      : @171 (gas: 6)\n  6188: a1 = 0x200c0\n  6193: i32 a1 = a1 + 0\n  6195: a0 = 0x1\n  6198: a2 = 0\n  6200: ecalli 7 // 'seal_return'\n  6202: jump @173\n      : @172 (gas: 6)\n  6204: a1 = 0x200c0\n  6209: i32 a1 = a1 + 0\n  6211: a0 = 0x1\n  6214: a2 = 0\n  6216: ecalli 7 // 'seal_return'\n  6218: fallthrough\n      : @173 (gas: 6)\n  6219: u64 [s1 + 336] = 0\n  6223: u64 [s1 + 328] = 0\n  6227: u64 [s1 + 320] = 0\n  6231: t0 = 0x9a\n  6235: a0 = 0x4e487b7100000000\n  6245: fallthrough\n      : @174 [@dyn 77] (gas: 4)\n  6246: a1 = s1 + 0x140\n  6250: u64 [s1 + 0x158] = a0\n  6254: a0 = 0\n  6256: ra = 156, jump @19\n      : @175 [@dyn 78] (gas: 7)\n  6262: u64 [s1 + 312] = 0\n  6266: u64 [s1 + 304] = 0\n  6270: u64 [s1 + 288] = 0x41\n  6275: a0 = 0x4\n  6278: a1 = s1 + 0x120\n  6282: u64 [s1 + 296] = 0\n  6286: ra = 158, jump @19\n      : @176 [@dyn 79] (gas: 2)\n  6292: a1 = i32 [0x200ac]\n  6297: jump @178 if a1 >u 63\n      : @177 (gas: 3)\n  6301: u32 [0x200ac] = 0x40\n  6307: a1 = 0x200c0\n  6312: jump @197\n      : @178 (gas: 2)\n  6315: a1 = 0x200c0\n  6320: jump @197\n      : @179 (gas: 6)\n  6323: u64 [s1 + 400] = 0\n  6327: u64 [s1 + 392] = 0\n  6331: u64 [s1 + 384] = 0\n  6335: t0 = 0xa0\n  6339: a0 = 0x4e487b7100000000\n  6349: fallthrough\n      : @180 [@dyn 80] (gas: 4)\n  6350: a1 = s1 + 0x180\n  6354: u64 [s1 + 0x198] = a0\n  6358: a0 = 0\n  6360: ra = 162, jump @19\n      : @181 [@dyn 81] (gas: 7)\n  6366: u64 [s1 + 376] = 0\n  6370: u64 [s1 + 368] = 0\n  6374: u64 [s1 + 352] = 0x22\n  6379: a0 = 0x4\n  6382: a1 = s1 + 0x160\n  6386: u64 [s1 + 360] = 0\n  6390: ra = 164, jump @19\n      : @182 [@dyn 82] (gas: 2)\n  6396: a1 = i32 [0x200ac]\n  6401: jump @184 if a1 >u 63\n      : @183 (gas: 3)\n  6405: u32 [0x200ac] = 0x40\n  6411: a1 = 0x200c0\n  6416: jump @197\n      : @184 (gas: 2)\n  6419: a1 = 0x200c0\n  6424: jump @197\n      : @185 (gas: 6)\n  6427: u64 [s1 + 496] = 0\n  6431: u64 [s1 + 488] = 0\n  6435: u64 [s1 + 480] = 0\n  6439: t0 = 0xa6\n  6443: a0 = 0x4e487b7100000000\n  6453: fallthrough\n      : @186 [@dyn 83] (gas: 4)\n  6454: a1 = s1 + 0x1e0\n  6458: u64 [s1 + 0x1f8] = a0\n  6462: a0 = 0\n  6464: ra = 168, jump @19\n      : @187 [@dyn 84] (gas: 7)\n  6470: u64 [s1 + 472] = 0\n  6474: u64 [s1 + 464] = 0\n  6478: u64 [s1 + 448] = 0x41\n  6483: a0 = 0x4\n  6486: a1 = s1 + 0x1c0\n  6490: u64 [s1 + 456] = 0\n  6494: ra = 170, jump @19\n      : @188 [@dyn 85] (gas: 2)\n  6500: a1 = i32 [0x200ac]\n  6505: jump @190 if a1 >u 63\n      : @189 (gas: 3)\n  6509: u32 [0x200ac] = 0x40\n  6515: a1 = 0x200c0\n  6520: jump @197\n      : @190 (gas: 2)\n  6522: a1 = 0x200c0\n  6527: jump @197\n      : @191 (gas: 6)\n  6529: u64 [s1 + 560] = 0\n  6533: u64 [s1 + 552] = 0\n  6537: u64 [s1 + 544] = 0\n  6541: t0 = 0xac\n  6545: a0 = 0x4e487b7100000000\n  6555: fallthrough\n      : @192 [@dyn 86] (gas: 4)\n  6556: a1 = s1 + 0x220\n  6560: u64 [s1 + 0x238] = a0\n  6564: a0 = 0\n  6566: ra = 174, jump @19\n      : @193 [@dyn 87] (gas: 7)\n  6572: u64 [s1 + 536] = 0\n  6576: u64 [s1 + 528] = 0\n  6580: u64 [s1 + 512] = 0x22\n  6585: a0 = 0x4\n  6588: a1 = s1 + 0x200\n  6592: u64 [s1 + 520] = 0\n  6596: ra = 176, jump @19\n      : @194 [@dyn 88] (gas: 2)\n  6602: a1 = i32 [0x200ac]\n  6607: jump @196 if a1 >u 63\n      : @195 (gas: 3)\n  6611: u32 [0x200ac] = 0x40\n  6617: a1 = 0x200c0\n  6622: jump @197\n      : @196 (gas: 2)\n  6624: a1 = 0x200c0\n  6629: fallthrough\n      : @197 (gas: 7)\n  6630: i32 a1 = a1 + 0\n  6632: a0 = 0x1\n  6635: a2 = 0x24\n  6638: ecalli 7 // 'seal_return'\n  6640: u64 [s1 + 0x118] = a0\n  6644: ra = 0xb2\n  6648: jump @26\n      : @198 (gas: 2)\n  6651: u64 [s1 + 0x118] = a0\n  6655: ra = 178, jump @26\n      : @199 [@dyn 89] (gas: 5)\n  6661: i32 a0 = a0 + 0\n  6663: a1 = 0\n  6665: a2 = 0\n  6667: ecalli 0 // 'call_data_copy'\n  6668: jump @15\n      : @200 (gas: 3)\n  6671: a0 = u64 [s1 + 0x118]\n  6675: a1 = 0\n  6677: ra = 180, jump @26\n      : @201 [@dyn 90] (gas: 5)\n  6683: i32 a1 = a0 + 0\n  6685: a0 = 0\n  6687: a2 = 0\n  6689: ecalli 7 // 'seal_return'\n  6691: jump @173\n      : @202 [@dyn 91] (gas: 4)\n  6694: a0 = 0x200a8\n  6699: u64 [s1 + 0xf8] = a0\n  6703: a0 = i32 [0x200a8]\n  6708: jump @204 if a0 >=u 4\n      : @203 (gas: 1)\n  6712: jump @456\n      : @204 (gas: 6)\n  6715: a0 = s1 + 0x1000\n  6719: i32 a0 = a0 + 0xfffffffffffffe60\n  6723: a1 = 0\n  6725: ra = 0xb8\n  6729: ecalli 1 // 'call_data_load'\n  6731: fallthrough\n      : @205 [@dyn 92] (gas: 4)\n  6732: a2 = s1 + 0x7ff\n  6736: a2 = a2 + 0x79\n  6739: a0 = i32 [a2 + 0x604]\n  6743: jump @326 if a0 == 2514000705\n      : @206 (gas: 1)\n  6751: jump @208 if a0 != 2835717307\n      : @207 (gas: 1)\n  6758: jump @412\n      : @208 (gas: 1)\n  6761: jump @210 if a0 != 3714247998\n      : @209 (gas: 1)\n  6768: jump @391\n      : @210 (gas: 1)\n  6771: jump @227 if a0 == 117300739\n      : @211 (gas: 1)\n  6779: jump @289 if a0 == 157198259\n      : @212 (gas: 1)\n  6787: jump @214 if a0 != 404098525\n      : @213 (gas: 1)\n  6794: jump @383\n      : @214 (gas: 1)\n  6797: jump @353 if a0 == 537198553\n      : @215 (gas: 1)\n  6805: jump @240 if a0 == 599290589\n      : @216 (gas: 1)\n  6813: jump @218 if a0 == 826074471\n      : @217 (gas: 1)\n  6820: jump @420\n      : @218 (gas: 8)\n  6823: u64 [a2 + 1984] = 0\n  6827: u64 [a2 + 1976] = 0\n  6831: u64 [a2 + 1968] = 0\n  6835: u64 [a2 + 1960] = 0\n  6839: a0 = s1 + 0x1000\n  6843: i32 a0 = a0 + 0x20\n  6846: ecalli 10 // 'value_transferred'\n  6848: fallthrough\n      : @219 (gas: 11)\n  6849: a3 = s1 + 0x7ff\n  6853: a3 = a3 + 0x79\n  6856: a4 = a3 + 0x700\n  6860: a0 = u64 [a4 + 0xb8]\n  6864: a1 = u64 [a4 + 0xc0]\n  6868: a2 = u64 [a4 + 0xb0]\n  6872: a3 = u64 [a4 + 0xa8]\n  6876: a1 = a1 | a2\n  6879: a0 = a0 | a3\n  6882: a0 = a0 | a1\n  6885: jump @221 if a0 == 0\n      : @220 (gas: 1)\n  6888: jump @458\n      : @221 (gas: 3)\n  6891: a0 = u64 [s1 + 0xf8]\n  6895: a0 = i32 [a0]\n  6897: jump @223 if a0 >u 3\n      : @222 (gas: 1)\n  6901: jump @459\n      : @223 (gas: 4)\n  6904: a0 = s1 + 0x7ff\n  6908: a0 = a0 + 0x1a1\n  6912: a1 = 0x40\n  6915: ra = 186, jump @17\n      : @224 [@dyn 93] (gas: 15)\n  6921: a3 = s1 + 0x7ff\n  6925: a3 = a3 + 0x79\n  6928: a5 = a3 + 0x100\n  6932: a4 = u64 [a5 + 0x40]\n  6935: a1 = u64 [a5 + 0x38]\n  6938: a2 = u64 [a5 + 0x30]\n  6941: a0 = u64 [a5 + 0x28]\n  6944: a4 = a4 | a2\n  6947: a2 = a0 | a1\n  6950: a2 = a2 | a4\n  6953: a2 = a2 >> 0x20\n  6956: a1 = a1 | a4\n  6959: a1 = a1 << 0x20\n  6962: a1 = a1 | a2\n  6965: jump @226 if a1 == 0\n      : @225 (gas: 1)\n  6968: jump @447\n      : @226 (gas: 9)\n  6971: u64 [a3 + 288] = 0\n  6975: u64 [a3 + 280] = 0\n  6979: u64 [a3 + 264] = 0x12\n  6984: a1 = s1 + 0x7ff\n  6988: a1 = a1 + 0x181\n  6992: u64 [a3 + 272] = 0\n  6996: u64 [s1 + 0xf8] = a0\n  7000: ra = 0x172\n  7004: jump @19\n      : @227 (gas: 8)\n  7007: u64 [a2 + 1568] = 0\n  7011: u64 [a2 + 1560] = 0\n  7015: u64 [a2 + 1552] = 0\n  7019: u64 [a2 + 1544] = 0\n  7023: a0 = s1 + 0x1000\n  7027: i32 a0 = a0 + 0xfffffffffffffe80\n  7031: ecalli 10 // 'value_transferred'\n  7033: fallthrough\n      : @228 (gas: 11)\n  7034: a4 = s1 + 0x7ff\n  7038: a4 = a4 + 0x79\n  7041: a5 = a4 + 0x600\n  7045: a0 = u64 [a5 + 0x18]\n  7048: a1 = u64 [a5 + 0x20]\n  7051: a2 = u64 [a5 + 0x10]\n  7054: a3 = u64 [a5 + 0x8]\n  7057: a1 = a1 | a2\n  7060: a0 = a0 | a3\n  7063: a0 = a0 | a1\n  7066: jump @230 if a0 == 0\n      : @229 (gas: 1)\n  7069: jump @460\n      : @230 (gas: 3)\n  7072: a0 = u64 [s1 + 0xf8]\n  7076: a1 = i32 [a0]\n  7078: jump @232 if a1 >u 3\n      : @231 (gas: 1)\n  7082: jump @461\n      : @232 (gas: 8)\n  7085: u64 [a4 + 1600] = 0\n  7089: u64 [a4 + 1592] = 0\n  7093: u64 [a4 + 1584] = 0\n  7097: u64 [a4 + 1576] = 0x3\n  7102: a0 = s1 + 0x260\n  7106: a1 = s1 + 0x7ff\n  7110: a1 = a1 + 0x6a1\n  7114: ra = 188, jump @21\n      : @233 [@dyn 94] (gas: 34)\n  7120: a1 = s1 + 0x200\n  7124: a2 = u64 [a1 + 0x70]\n  7127: a3 = u64 [a1 + 0x68]\n  7130: a5 = u64 [a1 + 0x78]\n  7133: a0 = u64 [a1 + 0x60]\n  7136: a4 = a2 << 0x3f\n  7139: a1 = a3 >> 0x1\n  7142: t0 = a1 | a4\n  7145: a1 = a5 << 0x3f\n  7148: u64 [s1 + 0xf0] = a2\n  7152: a2 = a2 >> 0x1\n  7155: a1 = a1 | a2\n  7158: u64 [s1 + 0xe0] = a3\n  7162: a2 = a3 << 0x3f\n  7165: a3 = a0 >> 0x1\n  7168: a4 = a3 | a2\n  7171: u64 [s1 + 0xe8] = a5\n  7175: t1 = a5 >> 0x1\n  7178: u64 [s1 + 0xd0] = a0\n  7182: a5 = a0 & 0x1\n  7185: a3 = -a5\n  7187: t2 = a3 & a1\n  7190: a2 = a3 & t0\n  7193: a3 = a3 & t1\n  7196: a0 = a4 & 0x7f\n  7199: u64 [s1 + 0xd8] = a0\n  7203: a4 = a0 if a5 == 0\n  7206: a0 = a4 <u 0x20\n  7209: a0 = 0 if a2 != 0\n  7211: a1 = t2 | a3\n  7214: a0 = 0 if a1 != 0\n  7216: u64 [s1 + 0xf8] = a5\n  7220: a1 = a5 <u 0x1\n  7223: jump @235 if a1 == a0\n      : @234 (gas: 1)\n  7226: jump @462\n      : @235 (gas: 12)\n  7229: u64 [s1 + 0xb8] = a4\n  7233: a5 = s1 + 0x200\n  7237: u64 [a5 + 0x40] = a4\n  7240: u64 [s1 + 0xa8] = a2\n  7244: u64 [a5 + 0x48] = a2\n  7247: u64 [s1 + 0xb0] = t2\n  7251: u64 [s1 + 0x250] = t2\n  7255: a0 = 0x80\n  7259: a1 = s1 + 0x240\n  7263: u64 [s1 + 0xa0] = a3\n  7267: u64 [a5 + 0x58] = a3\n  7270: ra = 190, jump @19\n      : @236 [@dyn 95] (gas: 2)\n  7276: a0 = u64 [s1 + 0xf8]\n  7280: jump @238 if a0 == 0\n      : @237 (gas: 1)\n  7283: jump @435\n      : @238 (gas: 13)\n  7286: a0 = u64 [s1 + 0xd0]\n  7290: a0 = a0 & 0xffffffffffffff00\n  7294: a1 = u64 [s1 + 0xe0]\n  7298: a2 = s1 + 0x100\n  7302: u64 [a2 + 0xc8] = a1\n  7306: u64 [a2 + 0xc0] = a0\n  7310: a0 = u64 [s1 + 0xf0]\n  7314: u64 [a2 + 0xd0] = a0\n  7318: a0 = u64 [s1 + 0xe8]\n  7322: u64 [a2 + 0xd8] = a0\n  7326: a0 = 0xa0\n  7330: a1 = s1 + 0x1c0\n  7334: ra = 192, jump @19\n      : @239 [@dyn 96] (gas: 7)\n  7340: a1 = 0\n  7342: a0 = 0\n  7344: t0 = 0\n  7346: a3 = 0xc0\n  7350: a2 = u64 [s1 + 0xd8]\n  7354: a3 = 0xa0 if a2 == 0\n  7358: jump @443\n      : @240 (gas: 8)\n  7361: u64 [a2 + 1888] = 0\n  7365: u64 [a2 + 1880] = 0\n  7369: u64 [a2 + 1872] = 0\n  7373: u64 [a2 + 1864] = 0\n  7377: a0 = s1 + 0x1000\n  7381: i32 a0 = a0 + 0xffffffffffffffc0\n  7384: ecalli 10 // 'value_transferred'\n  7386: fallthrough\n      : @241 (gas: 11)\n  7387: a3 = s1 + 0x7ff\n  7391: a3 = a3 + 0x79\n  7394: a4 = a3 + 0x700\n  7398: a0 = u64 [a4 + 0x58]\n  7401: a1 = u64 [a4 + 0x60]\n  7404: a2 = u64 [a4 + 0x50]\n  7407: a3 = u64 [a4 + 0x48]\n  7410: a1 = a1 | a2\n  7413: a0 = a0 | a3\n  7416: a0 = a0 | a1\n  7419: jump @243 if a0 == 0\n      : @242 (gas: 1)\n  7422: jump @468\n      : @243 (gas: 4)\n  7425: a0 = u64 [s1 + 0xf8]\n  7429: a0 = i32 [a0]\n  7431: a1 = 0x63\n  7434: jump @245 if a1 <u a0\n      : @244 (gas: 1)\n  7437: jump @469\n      : @245 (gas: 5)\n  7440: a0 = s1 + 0x7ff\n  7444: a0 = a0 + 0x161\n  7448: ra = 0xc2\n  7452: t0 = 0x1ea\n  7456: jump @670\n      : @246 [@dyn 97] (gas: 15)\n  7459: a1 = s1 + 0x7ff\n  7463: a1 = a1 + 0x79\n  7466: a0 = u64 [a1 + 0x100]\n  7470: u64 [s1 + 0xa8] = a0\n  7474: a0 = u64 [a1 + 0xf8]\n  7478: u64 [s1 + 0xb8] = a0\n  7482: a0 = u64 [a1 + 0xf0]\n  7486: u64 [s1 + 0xf8] = a0\n  7490: a0 = u64 [a1 + 0xe8]\n  7494: u64 [s1 + 0xf0] = a0\n  7498: a0 = s1 + 0x7ff\n  7502: a0 = a0 + 0x141\n  7506: ra = 0xc4\n  7510: t0 = 0x1f4\n  7514: jump @670\n      : @247 [@dyn 98] (gas: 40)\n  7517: a1 = s1 + 0x7ff\n  7521: a1 = a1 + 0x79\n  7524: a0 = u64 [a1 + 0xe0]\n  7528: u64 [s1 + 0xa0] = a0\n  7532: a0 = u64 [a1 + 0xd8]\n  7536: u64 [s1 + 0x98] = a0\n  7540: a0 = u64 [a1 + 0xd0]\n  7544: u64 [s1 + 0x90] = a0\n  7548: a0 = u64 [a1 + 0xc8]\n  7552: u64 [s1 + 0x88] = a0\n  7556: a0 = s1 + 0x1000\n  7560: i32 a0 = a0 + 0xffffffffffffffe0\n  7563: a1 = 0x44\n  7566: ecalli 1 // 'call_data_load'\n  7568: a1 = s1 + 0x7ff\n  7572: a1 = a1 + 0x79\n  7575: a2 = a1 + 0x700\n  7579: a0 = u64 [a2 + 0x80]\n  7583: u64 [s1 + 0xe8] = a0\n  7587: a0 = u64 [a2 + 0x78]\n  7590: u64 [s1 + 0xd8] = a0\n  7594: a0 = u64 [a2 + 0x70]\n  7597: u64 [s1 + 0xc8] = a0\n  7601: a0 = u64 [a2 + 0x68]\n  7604: u64 [s1 + 0xd0] = a0\n  7608: a0 = u64 [s1 + 0xb8]\n  7612: a0 = a0 << 0x20\n  7615: a0 = a0 >> 0x20\n  7618: u64 [a1 + 192] = 0\n  7622: u64 [s1 + 0x78] = a0\n  7625: u64 [a1 + 0xb8] = a0\n  7629: a0 = u64 [s1 + 0xf8]\n  7633: u64 [a1 + 0xb0] = a0\n  7637: a2 = a1\n  7639: a1 = s1 + 0x7ff\n  7643: a1 = a1 + 0x121\n  7647: a0 = u64 [s1 + 0xf0]\n  7651: u64 [a2 + 0xa8] = a0\n  7655: a0 = 0\n  7657: ra = 198, jump @19\n      : @248 [@dyn 99] (gas: 11)\n  7663: a1 = s1 + 0x7ff\n  7667: a1 = a1 + 0x79\n  7670: u64 [a1 + 160] = 0\n  7674: u64 [a1 + 152] = 0\n  7678: u64 [a1 + 136] = 0x1\n  7683: a2 = a1\n  7685: a0 = 0x20\n  7688: a1 = s1 + 0x7ff\n  7692: a1 = a1 + 0x101\n  7696: u64 [a2 + 144] = 0\n  7700: ra = 200, jump @19\n      : @249 [@dyn 100] (gas: 3)\n  7706: a1 = 0x200ac\n  7711: a0 = i32 [0x200ac]\n  7716: jump @251 if a0 >u 63\n      : @250 (gas: 2)\n  7720: u32 [0x200ac] = 0x40\n  7726: fallthrough\n      : @251 (gas: 15)\n  7727: a0 = sp + 0xffffffffffffffe0\n  7730: a2 = a0 & 0xffffffffffffffe0\n  7733: u64 [s1 + 0xb0] = a2\n  7737: sp = a2\n  7739: a0 = 0x200c0\n  7744: i32 a0 = a0 + 0\n  7746: i32 a2 = a2 + 0\n  7748: u64 [s1 + 0xc0] = a1\n  7752: a1 = 0x40\n  7755: u64 [s1 + 0xe0] = a0\n  7759: ra = 0xca\n  7763: ecalli 6 // 'hash_keccak_256'\n  7765: a3 = u64 [s1 + 0xb0]\n  7769: t0 = 0xcc\n  7773: jump @671\n      : @252 [@dyn 101] (gas: 2)\n  7776: a3 = u64 [s1 + 0xb0]\n  7780: t0 = 204, jump @671\n      : @253 [@dyn 102] (gas: 20)\n  7786: u64 [s1 + 0x68] = a0\n  7789: a0 = reverse a1\n  7791: u64 [s1 + 0x60] = a0\n  7794: a0 = reverse a2\n  7796: u64 [s1 + 0x58] = a0\n  7799: a0 = reverse a3\n  7801: u64 [s1 + 0x50] = a0\n  7804: a0 = sp + 0xffffffffffffffe0\n  7807: a0 = a0 & 0xffffffffffffffe0\n  7810: u64 [s1 + 0x70] = a0\n  7813: sp = a0\n  7815: a0 = 0x300c0\n  7820: u64 [s1 + 0xb0] = a0\n  7824: i32 a0 = a0 + 0\n  7826: u64 [s1 + 0x80] = a0\n  7830: ra = 0xce\n  7834: ecalli 3 // 'caller'\n  7836: a2 = u64 [s1 + 0xb0]\n  7840: t0 = 0xd0\n  7844: jump @653\n      : @254 [@dyn 103] (gas: 2)\n  7847: a2 = u64 [s1 + 0xb0]\n  7851: t0 = 208, jump @653\n      : @255 [@dyn 104] (gas: 10)\n  7857: a2 = s1 + 0x7ff\n  7861: a2 = a2 + 0x79\n  7864: u64 [a2 + 128] = 0\n  7868: u64 [a2 + 0x78] = a1\n  7871: u64 [a2 + 0x70] = a0\n  7874: a1 = s1 + 0x7ff\n  7878: a1 = a1 + 0xe1\n  7882: u64 [a2 + 0x68] = a3\n  7885: a0 = 0\n  7887: ra = 210, jump @19\n      : @256 [@dyn 105] (gas: 15)\n  7893: a0 = u64 [s1 + 0x50]\n  7896: a1 = s1 + 0x7ff\n  7900: a1 = a1 + 0x79\n  7903: u64 [a1 + 0x60] = a0\n  7906: a0 = u64 [s1 + 0x58]\n  7909: u64 [a1 + 0x58] = a0\n  7912: a0 = u64 [s1 + 0x60]\n  7915: u64 [a1 + 0x50] = a0\n  7918: a3 = a1\n  7920: a0 = 0x20\n  7923: a1 = s1 + 0x7ff\n  7927: a1 = a1 + 0xc1\n  7931: a2 = u64 [s1 + 0x68]\n  7934: u64 [a3 + 0x48] = a2\n  7937: ra = 212, jump @19\n      : @257 [@dyn 106] (gas: 3)\n  7943: a1 = u64 [s1 + 0xc0]\n  7947: a0 = i32 [a1]\n  7949: jump @259 if a0 >u 63\n      : @258 (gas: 2)\n  7953: u32 [a1 + 0] = 0x40\n  7956: fallthrough\n      : @259 (gas: 12)\n  7957: a0 = sp + 0xffffffffffffffe0\n  7960: a0 = a0 & 0xffffffffffffffe0\n  7963: u64 [s1 + 0x68] = a0\n  7966: sp = a0\n  7968: i32 a2 = a0 + 0\n  7970: a1 = 0x40\n  7973: a0 = u64 [s1 + 0xe0]\n  7977: ra = 0xd6\n  7981: ecalli 6 // 'hash_keccak_256'\n  7983: a3 = u64 [s1 + 0x68]\n  7986: t0 = 0xd8\n  7990: jump @655\n      : @260 [@dyn 107] (gas: 2)\n  7993: a3 = u64 [s1 + 0x68]\n  7996: t0 = 216, jump @655\n      : @261 [@dyn 108] (gas: 8)\n  8002: a1 = u64 [s1 + 0x70]\n  8005: u64 [a1 + 0x18] = a3\n  8008: u64 [a1 + 0x10] = a2\n  8011: u64 [a1 + 0x8] = a4\n  8014: u64 [a1] = a0\n  8016: a0 = s1 + 0x7ff\n  8020: a0 = a0 + 0xa1\n  8024: ra = 218, jump @21\n      : @262 [@dyn 109] (gas: 10)\n  8030: a0 = s1 + 0x7ff\n  8034: a0 = a0 + 0x79\n  8037: t2 = u64 [a0 + 0x40]\n  8040: a3 = u64 [a0 + 0x38]\n  8043: a4 = u64 [a0 + 0x30]\n  8046: t0 = u64 [a0 + 0x28]\n  8049: a0 = a4 & t2\n  8052: a1 = t0 & a3\n  8055: a0 = a0 & a1\n  8058: jump @283 if a0 == 4294967295\n      : @263 (gas: 20)\n  8063: a0 = u64 [s1 + 0xd0]\n  8067: t1 = t0 <u a0\n  8070: a1 = u64 [s1 + 0xc8]\n  8074: a0 = a4 ^ a1\n  8077: a5 = a4 <u a1\n  8080: a5 = t1 if a0 == 0\n  8083: a2 = u64 [s1 + 0xd8]\n  8087: ra = a3 <u a2\n  8090: a1 = u64 [s1 + 0xe8]\n  8094: a0 = t2 ^ a1\n  8097: a1 = t2 <u a1\n  8100: a1 = ra if a0 == 0\n  8103: a2 = a2 ^ a3\n  8106: a0 = a0 | a2\n  8109: a1 = a5 if a0 == 0\n  8112: u64 [s1 + 0x70] = t0\n  8115: u64 [s1 + 0x68] = a4\n  8118: u64 [s1 + 0x60] = t2\n  8121: u64 [s1 + 0x58] = a3\n  8124: jump @265 if a1 == 0\n      : @264 (gas: 1)\n  8127: jump @510\n      : @265 (gas: 9)\n  8130: u64 [s1 + 0x40] = ra\n  8133: u64 [s1 + 0x48] = a5\n  8136: u64 [s1 + 0x50] = t1\n  8139: a0 = u64 [s1 + 0xf0]\n  8143: a1 = u64 [s1 + 0x78]\n  8146: a0 = a0 | a1\n  8149: a1 = u64 [s1 + 0xf8]\n  8153: a0 = a0 | a1\n  8156: jump @267 if a0 != 0\n      : @266 (gas: 1)\n  8159: jump @519\n      : @267 (gas: 3)\n  8162: a0 = u64 [s1 + 0x80]\n  8166: ecalli 3 // 'caller'\n  8168: fallthrough\n      : @268 (gas: 7)\n  8169: a2 = u64 [s1 + 0xb0]\n  8173: a0 = u32 [a2 + 0x10]\n  8176: a1 = u64 [a2]\n  8178: a2 = u64 [a2 + 0x8]\n  8181: a0 = a0 | a1\n  8184: a0 = a0 | a2\n  8187: jump @270 if a0 != 0\n      : @269 (gas: 1)\n  8190: jump @521\n      : @270 (gas: 13)\n  8193: a2 = s1 + 0x7ff\n  8197: a2 = a2 + 0x79\n  8200: u64 [a2 + 32] = 0\n  8203: a0 = u64 [s1 + 0xf0]\n  8207: u64 [a2 + 0x8] = a0\n  8210: a0 = u64 [s1 + 0xf8]\n  8214: u64 [a2 + 0x10] = a0\n  8217: a1 = s1 + 0x7ff\n  8221: a1 = a1 + 0x81\n  8225: a0 = u64 [s1 + 0x78]\n  8228: u64 [a2 + 0x18] = a0\n  8231: a0 = 0\n  8233: ra = 220, jump @19\n      : @271 [@dyn 110] (gas: 12)\n  8239: a0 = s1 + 0x7ff\n  8243: a0 = a0 + 0x79\n  8246: u64 [a0 + 0] = 0\n  8248: u64 [a0 + 4294967288] = 0\n  8251: a1 = s1 + 0x1000\n  8255: u64 [a1 + 4294965344] = 0x1\n  8260: a0 = 0x20\n  8263: a1 = s1 + 0x7ff\n  8267: a1 = a1 + 0x61\n  8270: a2 = s1 + 0x1000\n  8274: u64 [a2 + 4294965352] = 0\n  8278: ra = 222, jump @19\n      : @272 [@dyn 111] (gas: 3)\n  8284: a1 = u64 [s1 + 0xc0]\n  8288: a0 = i32 [a1]\n  8290: jump @274 if a0 >u 63\n      : @273 (gas: 2)\n  8294: u32 [a1 + 0] = 0x40\n  8297: fallthrough\n      : @274 (gas: 12)\n  8298: a0 = sp + 0xffffffffffffffe0\n  8301: a0 = a0 & 0xffffffffffffffe0\n  8304: u64 [s1 + 0x78] = a0\n  8307: sp = a0\n  8309: i32 a2 = a0 + 0\n  8311: a1 = 0x40\n  8314: a0 = u64 [s1 + 0xe0]\n  8318: ra = 0xe0\n  8322: ecalli 6 // 'hash_keccak_256'\n  8324: a3 = u64 [s1 + 0x78]\n  8327: t0 = 0xe2\n  8331: jump @671\n      : @275 [@dyn 112] (gas: 2)\n  8334: a3 = u64 [s1 + 0x78]\n  8337: t0 = 226, jump @671\n      : @276 [@dyn 113] (gas: 17)\n  8343: u64 [s1 + 0x38] = a0\n  8346: a0 = reverse a1\n  8348: u64 [s1 + 0x30] = a0\n  8351: a0 = reverse a2\n  8353: u64 [s1 + 0x28] = a0\n  8356: a0 = reverse a3\n  8358: u64 [s1 + 0x20] = a0\n  8361: a0 = sp + 0xffffffffffffffe0\n  8364: a0 = a0 & 0xffffffffffffffe0\n  8367: u64 [s1 + 0x78] = a0\n  8370: sp = a0\n  8372: a0 = u64 [s1 + 0x80]\n  8376: ra = 0xe4\n  8380: ecalli 3 // 'caller'\n  8382: a2 = u64 [s1 + 0xb0]\n  8386: t0 = 0xe6\n  8390: jump @653\n      : @277 [@dyn 114] (gas: 2)\n  8393: a2 = u64 [s1 + 0xb0]\n  8397: t0 = 230, jump @653\n      : @278 [@dyn 115] (gas: 12)\n  8403: a2 = s1 + 0x1000\n  8407: u64 [a2 + 4294965336] = 0\n  8411: a2 = s1 + 0x1000\n  8415: u64 [a2 + 0xfffffffffffff850] = a1\n  8419: a1 = s1 + 0x1000\n  8423: u64 [a1 + 0xfffffffffffff848] = a0\n  8427: a1 = s1 + 0x7ff\n  8431: a1 = a1 + 0x41\n  8434: a0 = s1 + 0x1000\n  8438: u64 [a0 + 0xfffffffffffff840] = a3\n  8442: a0 = 0\n  8444: ra = 232, jump @19\n      : @279 [@dyn 116] (gas: 16)\n  8450: a0 = u64 [s1 + 0x20]\n  8453: a1 = s1 + 0x1000\n  8457: u64 [a1 + 0xfffffffffffff838] = a0\n  8461: a0 = u64 [s1 + 0x28]\n  8464: a1 = s1 + 0x1000\n  8468: u64 [a1 + 0xfffffffffffff830] = a0\n  8472: a0 = u64 [s1 + 0x30]\n  8475: a1 = s1 + 0x1000\n  8479: u64 [a1 + 0xfffffffffffff828] = a0\n  8483: a0 = 0x20\n  8486: a1 = s1 + 0x7ff\n  8490: a1 = a1 + 0x21\n  8493: a2 = u64 [s1 + 0x38]\n  8496: a3 = s1 + 0x1000\n  8500: u64 [a3 + 0xfffffffffffff820] = a2\n  8504: ra = 234, jump @19\n      : @280 [@dyn 117] (gas: 3)\n  8510: a1 = u64 [s1 + 0xc0]\n  8514: a0 = i32 [a1]\n  8516: jump @282 if a0 >u 63\n      : @281 (gas: 2)\n  8520: u32 [a1 + 0] = 0x40\n  8523: fallthrough\n      : @282 (gas: 51)\n  8524: a0 = sp + 0xffffffffffffffe0\n  8527: a0 = a0 & 0xffffffffffffffe0\n  8530: u64 [s1 + 0xc0] = a0\n  8534: sp = a0\n  8536: i32 a2 = a0 + 0\n  8538: a1 = 0x40\n  8541: a0 = u64 [s1 + 0xe0]\n  8545: ecalli 6 // 'hash_keccak_256'\n  8547: a0 = u64 [s1 + 0xd8]\n  8551: a1 = u64 [s1 + 0x58]\n  8554: a0 = a1 - a0\n  8557: a2 = u64 [s1 + 0x48]\n  8560: a1 = a0 - a2\n  8563: a0 = a0 <u a2\n  8566: a2 = u64 [s1 + 0xe8]\n  8570: a3 = u64 [s1 + 0x60]\n  8573: a2 = a3 - a2\n  8576: a3 = u64 [s1 + 0x40]\n  8579: a2 = a2 - a3\n  8582: a2 = a2 - a0\n  8585: a0 = u64 [s1 + 0xc8]\n  8589: a3 = u64 [s1 + 0x68]\n  8592: a0 = a3 - a0\n  8595: a3 = u64 [s1 + 0x50]\n  8598: a0 = a0 - a3\n  8601: a3 = s1 + 0x7ff\n  8605: a3 = a3 + 0x79\n  8608: a5 = a3 + 0x700\n  8612: u64 [a5 + 0xa0] = a2\n  8616: u64 [a5 + 0x98] = a1\n  8620: u64 [a5 + 0x90] = a0\n  8624: a4 = u64 [s1 + 0xc0]\n  8628: a0 = u64 [a4]\n  8630: a1 = u64 [s1 + 0xd0]\n  8634: a2 = u64 [s1 + 0x70]\n  8637: a1 = a2 - a1\n  8640: u64 [a5 + 0x88] = a1\n  8644: a1 = u64 [a4 + 0x8]\n  8647: a2 = reverse a0\n  8649: a0 = u64 [s1 + 0x78]\n  8652: u64 [a0 + 0x18] = a2\n  8655: a3 = u64 [a4 + 0x10]\n  8658: a2 = u64 [a4 + 0x18]\n  8661: a1 = reverse a1\n  8663: u64 [a0 + 0x10] = a1\n  8666: a1 = reverse a3\n  8668: u64 [a0 + 0x8] = a1\n  8671: a1 = reverse a2\n  8673: u64 [a0] = a1\n  8675: a1 = s1 + 0x1000\n  8679: ra = 236, jump @22\n      : @283 [@dyn 118] (gas: 29)\n  8685: a0 = u64 [s1 + 0xd0]\n  8689: u64 [s1 + 0x6c0] = a0\n  8693: a0 = u64 [s1 + 0x88]\n  8697: u64 [s1 + 0x6e0] = a0\n  8701: a0 = u64 [s1 + 0xf0]\n  8705: a4 = s1 + 0x700\n  8709: u64 [a4] = a0\n  8711: a0 = u64 [s1 + 0xc8]\n  8715: u64 [s1 + 0x6c8] = a0\n  8719: a0 = u64 [s1 + 0x90]\n  8723: u64 [s1 + 0x6e8] = a0\n  8727: a0 = u64 [s1 + 0xf8]\n  8731: u64 [a4 + 0x8] = a0\n  8734: a0 = u64 [s1 + 0xd8]\n  8738: u64 [s1 + 0x6d0] = a0\n  8742: a0 = u64 [s1 + 0x98]\n  8746: u64 [s1 + 0x6f0] = a0\n  8750: a0 = u64 [s1 + 0xb8]\n  8754: u64 [a4 + 0x10] = a0\n  8757: a0 = u64 [s1 + 0xe8]\n  8761: u64 [s1 + 0x6d8] = a0\n  8765: a0 = u64 [s1 + 0xa0]\n  8769: u64 [s1 + 0x6f8] = a0\n  8773: a0 = s1 + 0x700\n  8777: a1 = s1 + 0x6e0\n  8781: a2 = s1 + 0x6c0\n  8785: a3 = u64 [s1 + 0xa8]\n  8789: u64 [a4 + 0x18] = a3\n  8792: ra = 238, jump @601\n      : @284 [@dyn 119] (gas: 3)\n  8798: a0 = s1 + 0x6a0\n  8802: a1 = 0x40\n  8805: ra = 240, jump @17\n      : @285 [@dyn 120] (gas: 6)\n  8811: a4 = s1 + 0x600\n  8815: a3 = u64 [a4 + 0xb8]\n  8819: a1 = u64 [a4 + 0xb0]\n  8823: a2 = u64 [a4 + 0xa8]\n  8827: a0 = u64 [a4 + 0xa0]\n  8831: t0 = 242, jump @658\n      : @286 [@dyn 121] (gas: 1)\n  8837: jump @288 if a1 == 0\n      : @287 (gas: 1)\n  8840: jump @447\n      : @288 (gas: 8)\n  8843: u64 [s1 + 1688] = 0\n  8847: u64 [s1 + 1680] = 0\n  8851: u64 [s1 + 1672] = 0\n  8855: a1 = s1 + 0x680\n  8859: u64 [s1 + 1664] = 0x1\n  8864: u64 [s1 + 0xf8] = a0\n  8868: ra = 0x172\n  8872: jump @19\n      : @289 (gas: 8)\n  8875: u64 [a2 + 1632] = 0\n  8879: u64 [a2 + 1624] = 0\n  8883: u64 [a2 + 1616] = 0\n  8887: u64 [a2 + 1608] = 0\n  8891: a0 = s1 + 0x1000\n  8895: i32 a0 = a0 + 0xfffffffffffffec0\n  8899: ecalli 10 // 'value_transferred'\n  8901: fallthrough\n      : @290 (gas: 11)\n  8902: a3 = s1 + 0x7ff\n  8906: a3 = a3 + 0x79\n  8909: a4 = a3 + 0x600\n  8913: a0 = u64 [a4 + 0x58]\n  8916: a1 = u64 [a4 + 0x60]\n  8919: a2 = u64 [a4 + 0x50]\n  8922: a3 = u64 [a4 + 0x48]\n  8925: a1 = a1 | a2\n  8928: a0 = a0 | a3\n  8931: a0 = a0 | a1\n  8934: jump @292 if a0 == 0\n      : @291 (gas: 1)\n  8937: jump @470\n      : @292 (gas: 4)\n  8940: a0 = u64 [s1 + 0xf8]\n  8944: a0 = i32 [a0]\n  8946: a1 = 0x43\n  8949: jump @294 if a1 <u a0\n      : @293 (gas: 1)\n  8952: jump @471\n      : @294 (gas: 4)\n  8955: a0 = s1 + 0x460\n  8959: ra = 0xf4\n  8963: t0 = 0x1ea\n  8967: jump @670\n      : @295 [@dyn 122] (gas: 37)\n  8970: a1 = s1 + 0x400\n  8974: a0 = u64 [a1 + 0x70]\n  8977: u64 [s1 + 0xd8] = a0\n  8981: a0 = u64 [a1 + 0x68]\n  8984: u64 [s1 + 0xf0] = a0\n  8988: a0 = u64 [a1 + 0x60]\n  8991: u64 [s1 + 0xf8] = a0\n  8995: a0 = sp + 0xffffffffffffffe0\n  8998: a0 = a0 & 0xffffffffffffffe0\n  9001: u64 [s1 + 0xe0] = a0\n  9005: sp = a0\n  9007: a0 = s1 + 0x1000\n  9011: i32 a0 = a0 + 0xfffffffffffffee0\n  9015: a1 = 0x24\n  9018: ecalli 1 // 'call_data_load'\n  9020: a0 = s1 + 0x7ff\n  9024: a0 = a0 + 0x79\n  9027: a4 = a0 + 0x600\n  9031: a1 = u64 [a4 + 0x80]\n  9035: a2 = u64 [a4 + 0x78]\n  9038: a3 = u64 [a4 + 0x70]\n  9041: a0 = u64 [a4 + 0x68]\n  9044: u64 [s1 + 0x90] = a1\n  9048: a4 = u64 [s1 + 0xe0]\n  9052: u64 [a4 + 0x18] = a1\n  9055: u64 [s1 + 0x88] = a2\n  9059: u64 [a4 + 0x10] = a2\n  9062: u64 [s1 + 0x80] = a3\n  9066: u64 [a4 + 0x8] = a3\n  9069: u64 [s1 + 0x78] = a0\n  9072: u64 [a4] = a0\n  9074: a0 = 0x300c0\n  9079: u64 [s1 + 0xe8] = a0\n  9083: i32 a0 = a0 + 0\n  9085: u64 [s1 + 0xd0] = a0\n  9089: ecalli 3 // 'caller'\n  9091: fallthrough\n      : @296 (gas: 7)\n  9092: a2 = u64 [s1 + 0xe8]\n  9096: a0 = u32 [a2 + 0x10]\n  9099: a1 = u64 [a2]\n  9101: a2 = u64 [a2 + 0x8]\n  9104: a0 = a0 | a1\n  9107: a0 = a0 | a2\n  9110: jump @298 if a0 != 0\n      : @297 (gas: 1)\n  9113: jump @472\n      : @298 (gas: 9)\n  9116: a0 = u64 [s1 + 0xd8]\n  9120: a0 = a0 << 0x20\n  9123: a1 = a0 >> 0x20\n  9126: a0 = u64 [s1 + 0xf0]\n  9130: a2 = u64 [s1 + 0xf8]\n  9134: a0 = a0 | a2\n  9137: u64 [s1 + 0xd8] = a1\n  9141: a0 = a0 | a1\n  9144: jump @300 if a0 != 0\n      : @299 (gas: 1)\n  9147: jump @477\n      : @300 (gas: 6)\n  9150: a0 = u64 [s1 + 0xd0]\n  9154: ra = 0xf6\n  9158: ecalli 3 // 'caller'\n  9160: a2 = u64 [s1 + 0xe8]\n  9164: t0 = 0xf8\n  9168: jump @653\n      : @301 [@dyn 123] (gas: 2)\n  9171: a2 = u64 [s1 + 0xe8]\n  9175: t0 = 248, jump @653\n      : @302 [@dyn 124] (gas: 7)\n  9181: u64 [s1 + 1112] = 0\n  9185: u64 [s1 + 0x450] = a1\n  9189: u64 [s1 + 0x448] = a0\n  9193: a1 = s1 + 0x440\n  9197: u64 [s1 + 0x440] = a3\n  9201: a0 = 0\n  9203: ra = 250, jump @19\n      : @303 [@dyn 125] (gas: 7)\n  9209: u64 [s1 + 1080] = 0\n  9213: u64 [s1 + 1072] = 0\n  9217: u64 [s1 + 1056] = 0x1\n  9222: a0 = 0x20\n  9225: a1 = s1 + 0x420\n  9229: u64 [s1 + 1064] = 0\n  9233: ra = 252, jump @19\n      : @304 [@dyn 126] (gas: 3)\n  9239: a1 = 0x200ac\n  9244: a0 = i32 [0x200ac]\n  9249: jump @306 if a0 >u 63\n      : @305 (gas: 2)\n  9253: u32 [0x200ac] = 0x40\n  9259: fallthrough\n      : @306 (gas: 15)\n  9260: a0 = sp + 0xffffffffffffffe0\n  9263: a2 = a0 & 0xffffffffffffffe0\n  9266: u64 [s1 + 0xb8] = a2\n  9270: sp = a2\n  9272: a0 = 0x200c0\n  9277: i32 a0 = a0 + 0\n  9279: i32 a2 = a2 + 0\n  9281: u64 [s1 + 0xc8] = a1\n  9285: a1 = 0x40\n  9288: u64 [s1 + 0xc0] = a0\n  9292: ra = 0xfe\n  9296: ecalli 6 // 'hash_keccak_256'\n  9298: a3 = u64 [s1 + 0xb8]\n  9302: t0 = 0x100\n  9306: jump @671\n      : @307 [@dyn 127] (gas: 2)\n  9309: a3 = u64 [s1 + 0xb8]\n  9313: t0 = 256, jump @671\n      : @308 [@dyn 128] (gas: 22)\n  9319: u64 [s1 + 0xb0] = a0\n  9323: a0 = reverse a1\n  9325: u64 [s1 + 0xa8] = a0\n  9329: a0 = reverse a2\n  9331: u64 [s1 + 0xa0] = a0\n  9335: a0 = reverse a3\n  9337: u64 [s1 + 0x98] = a0\n  9341: a0 = sp + 0xffffffffffffffe0\n  9344: a0 = a0 & 0xffffffffffffffe0\n  9347: u64 [s1 + 0xb8] = a0\n  9351: sp = a0\n  9353: u64 [s1 + 1048] = 0\n  9357: a0 = u64 [s1 + 0xd8]\n  9361: a2 = s1 + 0x400\n  9365: u64 [a2 + 0x10] = a0\n  9368: a0 = u64 [s1 + 0xf0]\n  9372: u64 [a2 + 0x8] = a0\n  9375: a1 = s1 + 0x400\n  9379: a0 = u64 [s1 + 0xf8]\n  9383: u64 [a2] = a0\n  9385: a0 = 0\n  9387: ra = 258, jump @19\n      : @309 [@dyn 129] (gas: 12)\n  9393: a0 = u64 [s1 + 0x98]\n  9397: a3 = s1 + 0x300\n  9401: u64 [a3 + 0xf8] = a0\n  9405: a0 = u64 [s1 + 0xa0]\n  9409: u64 [a3 + 0xf0] = a0\n  9413: a0 = u64 [s1 + 0xa8]\n  9417: u64 [a3 + 0xe8] = a0\n  9421: a0 = 0x20\n  9424: a1 = s1 + 0x3e0\n  9428: a2 = u64 [s1 + 0xb0]\n  9432: u64 [a3 + 0xe0] = a2\n  9436: ra = 260, jump @19\n      : @310 [@dyn 130] (gas: 3)\n  9442: a1 = u64 [s1 + 0xc8]\n  9446: a0 = i32 [a1]\n  9448: jump @312 if a0 >u 63\n      : @311 (gas: 2)\n  9452: u32 [a1 + 0] = 0x40\n  9455: fallthrough\n      : @312 (gas: 24)\n  9456: a0 = sp + 0xffffffffffffffe0\n  9459: a0 = a0 & 0xffffffffffffffe0\n  9462: u64 [s1 + 0xc8] = a0\n  9466: sp = a0\n  9468: i32 a2 = a0 + 0\n  9470: a1 = 0x40\n  9473: a0 = u64 [s1 + 0xc0]\n  9477: ecalli 6 // 'hash_keccak_256'\n  9479: a3 = u64 [s1 + 0xc8]\n  9483: a0 = u64 [a3 + 0x18]\n  9486: a1 = u64 [a3 + 0x10]\n  9489: a2 = u64 [a3 + 0x8]\n  9492: a3 = u64 [a3]\n  9494: a4 = reverse a0\n  9496: a1 = reverse a1\n  9498: a2 = reverse a2\n  9500: a3 = reverse a3\n  9502: a0 = u64 [s1 + 0xb8]\n  9506: u64 [a0 + 0x18] = a3\n  9509: u64 [a0 + 0x10] = a2\n  9512: u64 [a0 + 0x8] = a1\n  9515: u64 [a0] = a4\n  9517: a1 = u64 [s1 + 0xe0]\n  9521: ra = 262, jump @22\n      : @313 [@dyn 131] (gas: 3)\n  9527: a0 = s1 + 0x3c0\n  9531: a1 = 0x40\n  9534: ra = 264, jump @17\n      : @314 [@dyn 132] (gas: 6)\n  9540: a4 = s1 + 0x300\n  9544: a0 = u64 [a4 + 0xd8]\n  9548: a1 = u64 [a4 + 0xd0]\n  9552: a2 = u64 [a4 + 0xc8]\n  9556: a3 = u64 [a4 + 0xc0]\n  9560: t0 = 266, jump @665\n      : @315 [@dyn 133] (gas: 1)\n  9566: jump @317 if a0 == 0\n      : @316 (gas: 1)\n  9569: jump @447\n      : @317 (gas: 12)\n  9572: a0 = u64 [s1 + 0x78]\n  9575: u64 [s1 + 0x3a0] = a0\n  9579: a0 = u64 [s1 + 0x80]\n  9583: u64 [s1 + 0x3a8] = a0\n  9587: a0 = u64 [s1 + 0x88]\n  9591: u64 [s1 + 0x3b0] = a0\n  9595: a1 = s1 + 0x3a0\n  9599: a0 = u64 [s1 + 0x90]\n  9603: u64 [s1 + 0x3b8] = a0\n  9607: a0 = a3\n  9609: u64 [s1 + 0xe0] = a3\n  9613: ra = 268, jump @19\n      : @318 [@dyn 134] (gas: 6)\n  9619: a0 = u64 [s1 + 0xd0]\n  9623: ra = 0x10e\n  9627: ecalli 3 // 'caller'\n  9629: a2 = u64 [s1 + 0xe8]\n  9633: t0 = 0x110\n  9637: jump @668\n      : @319 [@dyn 135] (gas: 2)\n  9640: a2 = u64 [s1 + 0xe8]\n  9644: t0 = 272, jump @668\n      : @320 [@dyn 136] (gas: 31)\n  9650: t0 = a1 | a0\n  9653: a3 = a3 >> 0x20\n  9656: a2 = reverse a2\n  9658: a1 = a2 << 0x20\n  9661: a1 = a1 | a3\n  9664: a2 = a2 >> 0x20\n  9667: u64 [s1 + 856] = 0\n  9671: a0 = u64 [s1 + 0xd8]\n  9675: u64 [s1 + 0x350] = a0\n  9679: a0 = u64 [s1 + 0xf0]\n  9683: u64 [s1 + 0x348] = a0\n  9687: a0 = u64 [s1 + 0xf8]\n  9691: u64 [s1 + 0x340] = a0\n  9695: u64 [s1 + 888] = 0\n  9699: a3 = u64 [0x20048]\n  9704: a4 = u64 [0x20050]\n  9709: a5 = u64 [0x20058]\n  9714: a0 = u64 [0x20060]\n  9719: u64 [s1 + 0x398] = a3\n  9723: u64 [s1 + 0x390] = a4\n  9727: u64 [s1 + 0x388] = a5\n  9731: u64 [s1 + 0x380] = a0\n  9735: u64 [s1 + 0x370] = a2\n  9739: u64 [s1 + 0x368] = a1\n  9743: a1 = 0x20\n  9746: a2 = s1 + 0x380\n  9750: a3 = s1 + 0x360\n  9754: a4 = s1 + 0x340\n  9758: u64 [s1 + 0x360] = t0\n  9762: a0 = u64 [s1 + 0xe0]\n  9766: ra = 274, jump @23\n      : @321 [@dyn 137] (gas: 3)\n  9772: a0 = s1 + 0x320\n  9776: a1 = 0x40\n  9779: ra = 276, jump @17\n      : @322 [@dyn 138] (gas: 6)\n  9785: a4 = s1 + 0x300\n  9789: a3 = u64 [a4 + 0x38]\n  9792: a1 = u64 [a4 + 0x30]\n  9795: a2 = u64 [a4 + 0x28]\n  9798: a0 = u64 [a4 + 0x20]\n  9801: t0 = 278, jump @658\n      : @323 [@dyn 139] (gas: 1)\n  9807: jump @325 if a1 == 0\n      : @324 (gas: 1)\n  9810: jump @447\n      : @325 (gas: 8)\n  9813: u64 [s1 + 792] = 0\n  9817: u64 [s1 + 784] = 0\n  9821: u64 [s1 + 776] = 0\n  9825: a1 = s1 + 0x300\n  9829: u64 [s1 + 768] = 0x1\n  9834: u64 [s1 + 0xf8] = a0\n  9838: ra = 0x172\n  9842: jump @19\n      : @326 (gas: 9)\n  9845: a0 = s1 + 0x1078\n  9849: u64 [a0 + 32] = 0\n  9852: u64 [a0 + 24] = 0\n  9855: u64 [a0 + 16] = 0\n  9858: u64 [a0 + 8] = 0\n  9861: a0 = s1 + 0x1000\n  9865: i32 a0 = a0 + 0x80\n  9869: ecalli 10 // 'value_transferred'\n  9871: fallthrough\n      : @327 (gas: 9)\n  9872: a3 = s1 + 0x1078\n  9876: a0 = u64 [a3 + 0x18]\n  9879: a1 = u64 [a3 + 0x20]\n  9882: a2 = u64 [a3 + 0x10]\n  9885: a3 = u64 [a3 + 0x8]\n  9888: a1 = a1 | a2\n  9891: a0 = a0 | a3\n  9894: a0 = a0 | a1\n  9897: jump @329 if a0 == 0\n      : @328 (gas: 1)\n  9900: jump @482\n      : @329 (gas: 3)\n  9903: a0 = u64 [s1 + 0xf8]\n  9907: a0 = i32 [a0]\n  9909: jump @331 if a0 >u 3\n      : @330 (gas: 1)\n  9913: jump @483\n      : @331 (gas: 4)\n  9916: a0 = s1 + 0x7ff\n  9920: a0 = a0 + 0x441\n  9924: a1 = 0x40\n  9927: ra = 280, jump @17\n      : @332 [@dyn 140] (gas: 20)\n  9933: a1 = s1 + 0x7ff\n  9937: a1 = a1 + 0x79\n  9940: a2 = a1 + 0x300\n  9944: a0 = u64 [a2 + 0xe0]\n  9948: u64 [s1 + 0x58] = a0\n  9951: a0 = u64 [a2 + 0xd8]\n  9955: u64 [s1 + 0x68] = a0\n  9958: a0 = u64 [a2 + 0xd0]\n  9962: u64 [s1 + 0x60] = a0\n  9965: a0 = u64 [a2 + 0xc8]\n  9969: u64 [s1 + 0x70] = a0\n  9972: a1 = s1 + 0x1078\n  9976: u64 [a1 + 64] = 0\n  9979: u64 [a1 + 56] = 0\n  9982: u64 [a1 + 48] = 0\n  9985: u64 [a1 + 40] = 0x4\n  9989: a0 = s1 + 0x7ff\n  9993: a0 = a0 + 0x421\n  9997: a1 = s1 + 0x10a0\n 10001: ra = 282, jump @21\n      : @333 [@dyn 141] (gas: 36)\n 10007: a0 = s1 + 0x7ff\n 10011: a0 = a0 + 0x79\n 10014: t2 = u64 [a0 + 0x3b8]\n 10018: ra = u64 [a0 + 0x3b0]\n 10022: t1 = u64 [a0 + 0x3c0]\n 10026: a4 = u64 [a0 + 0x3a8]\n 10030: a0 = t2 << 0x3f\n 10033: a1 = ra >> 0x1\n 10036: a0 = a0 | a1\n 10039: a1 = t1 << 0x3f\n 10042: a2 = t2 >> 0x1\n 10045: a1 = a1 | a2\n 10048: a2 = ra << 0x3f\n 10051: a3 = a4 >> 0x1\n 10054: a5 = a3 | a2\n 10057: a2 = t1 >> 0x1\n 10060: u64 [s1 + 0xf0] = a4\n 10064: a4 = a4 & 0x1\n 10067: a3 = -a4\n 10069: a1 = a1 & a3\n 10072: t0 = a3 & a0\n 10075: a2 = a2 & a3\n 10078: a0 = a5 & 0x7f\n 10081: u64 [s1 + 0xe8] = a0\n 10085: a5 = a0 if a4 == 0\n 10088: u64 [s1 + 0xb0] = a5\n 10092: a0 = a5 <u 0x20\n 10095: u64 [s1 + 0xa0] = t0\n 10099: a0 = 0 if t0 != 0\n 10101: u64 [s1 + 0xa8] = a1\n 10105: u64 [s1 + 0x98] = a2\n 10109: a1 = a1 | a2\n 10112: a0 = 0 if a1 != 0\n 10114: u64 [s1 + 0xf8] = a4\n 10118: a1 = a4 <u 0x1\n 10121: jump @335 if a1 == a0\n      : @334 (gas: 1)\n 10124: jump @484\n      : @335 (gas: 12)\n 10127: a2 = u64 [s1 + 0x68]\n 10130: a3 = u64 [s1 + 0x70]\n 10133: a0 = a3 | a2\n 10136: a1 = u64 [s1 + 0x60]\n 10139: a4 = u64 [s1 + 0x58]\n 10142: a1 = a1 | a4\n 10145: a0 = a0 | a1\n 10148: a0 = a0 >> 0x20\n 10151: a1 = a1 | a2\n 10154: a1 = a1 << 0x20\n 10157: a1 = a1 | a0\n 10160: jump @337 if a1 == 0\n      : @336 (gas: 1)\n 10163: jump @447\n      : @337 (gas: 18)\n 10166: a0 = a3\n 10168: u64 [s1 + 0xd0] = ra\n 10172: u64 [s1 + 0xd8] = t2\n 10176: u64 [s1 + 0xe0] = t1\n 10180: a1 = u64 [s1 + 0xb0]\n 10184: a3 = s1 + 0x7ff\n 10188: a3 = a3 + 0x79\n 10191: a4 = a3 + 0x300\n 10195: u64 [a4 + 0x88] = a1\n 10199: a1 = u64 [s1 + 0xa0]\n 10203: u64 [a4 + 0x90] = a1\n 10207: a1 = u64 [s1 + 0xa8]\n 10211: u64 [a4 + 0x98] = a1\n 10215: a1 = s1 + 0x7ff\n 10219: a1 = a1 + 0x401\n 10223: a2 = u64 [s1 + 0x98]\n 10227: u64 [a4 + 0xa0] = a2\n 10231: ra = 284, jump @19\n      : @338 [@dyn 142] (gas: 2)\n 10237: a0 = u64 [s1 + 0xf8]\n 10241: jump @340 if a0 == 0\n      : @339 (gas: 1)\n 10244: jump @448\n      : @340 (gas: 10)\n 10247: a0 = u64 [s1 + 0x68]\n 10250: a1 = u64 [s1 + 0x58]\n 10253: a0 = a0 | a1\n 10256: a1 = 0xffffffe0\n 10266: a3 = u64 [s1 + 0x70]\n 10269: a1 = a3 <u a1\n 10272: a2 = u64 [s1 + 0x60]\n 10275: a1 = 0 if a2 != 0\n 10277: a1 = 0 if a0 != 0\n 10279: jump @342 if a1 != 0\n      : @341 (gas: 1)\n 10282: jump @447\n      : @342 (gas: 16)\n 10285: a1 = u64 [s1 + 0xf0]\n 10289: a1 = a1 & 0xffffffffffffff00\n 10293: i32 a0 = a3 + 0x20\n 10296: a2 = s1 + 0x7ff\n 10300: a2 = a2 + 0x79\n 10303: a3 = u64 [s1 + 0xd0]\n 10307: a4 = a2 + 0x300\n 10311: u64 [a4 + 0x10] = a3\n 10314: u64 [a4 + 0x8] = a1\n 10317: a1 = u64 [s1 + 0xd8]\n 10321: u64 [a4 + 0x18] = a1\n 10324: a1 = s1 + 0x7ff\n 10328: a1 = a1 + 0x381\n 10332: a3 = u64 [s1 + 0xe0]\n 10336: u64 [a4 + 0x20] = a3\n 10339: ra = 286, jump @19\n      : @343 [@dyn 143] (gas: 8)\n 10345: t2 = 0\n 10347: t1 = 0\n 10349: u64 [s1 + 240] = 0\n 10353: a0 = u64 [s1 + 0xe8]\n 10357: a0 = a0 >u 0\n 10359: a0 = a0 << 0x5\n 10362: u64 [s1 + 0xf8] = a0\n 10366: fallthrough\n      : @344 (gas: 37)\n 10367: a1 = u64 [s1 + 0xf8]\n 10371: a0 = a1 + 0x3f\n 10374: a1 = a0 <u a1\n 10377: a2 = t2 + a1\n 10380: a0 = a0 & 0xffffffffffffffe0\n 10383: ra = u64 [s1 + 0x70]\n 10386: ra = ra + a0\n 10389: u64 [s1 + 0xf8] = ra\n 10393: a0 = ra <u a0\n 10396: t0 = u64 [s1 + 0x60]\n 10399: a3 = a2 + t0\n 10402: ra = a3 + a0\n 10405: a3 = ra ^ a2\n 10408: a4 = ra <u a2\n 10411: a4 = a0 if a3 == 0\n 10414: a0 = a2 <u t2\n 10417: a0 = a1 if a1 == 0\n 10420: a0 = a0 + t1\n 10423: a1 = a0 <u t1\n 10426: a2 = u64 [s1 + 0x68]\n 10429: a2 = a2 + a0\n 10432: a4 = a4 + a2\n 10435: a0 = a2 <u a0\n 10438: a2 = a4 <u a2\n 10441: t1 = u64 [s1 + 0x58]\n 10444: a3 = u64 [s1 + 0xf0]\n 10448: a3 = a3 + t1\n 10451: a1 = a1 + a3\n 10454: a0 = a0 + a1\n 10457: a5 = a0 + a2\n 10460: a0 = a5 >u 0\n 10462: a1 = a4 >u 0\n 10464: a1 = a0 if a5 != 0\n 10467: a0 = a4 | a5\n 10470: a2 = ra >u 0\n 10472: a2 = a1 if a0 != 0\n 10475: jump @346 if a2 == 0\n      : @345 (gas: 1)\n 10478: jump @526\n      : @346 (gas: 15)\n 10481: a0 = u64 [s1 + 0x70]\n 10484: a1 = u64 [s1 + 0xf8]\n 10488: a0 = a1 <u a0\n 10491: a1 = ra ^ t0\n 10494: a2 = ra <u t0\n 10497: a2 = a0 if a1 == 0\n 10500: a0 = u64 [s1 + 0x68]\n 10503: t2 = a4 <u a0\n 10506: a1 = a5 ^ t1\n 10509: a3 = a5 <u t1\n 10512: a3 = t2 if a1 == 0\n 10515: a0 = a0 ^ a4\n 10518: a0 = a0 | a1\n 10521: a3 = a2 if a0 == 0\n 10524: jump @348 if a3 == 0\n      : @347 (gas: 1)\n 10527: jump @526\n      : @348 (gas: 14)\n 10530: a2 = s1 + 0x7ff\n 10534: a2 = a2 + 0x79\n 10537: a0 = u64 [s1 + 0xf8]\n 10541: u64 [a2 + 0x2e8] = a0\n 10545: u64 [a2 + 0x2f0] = ra\n 10549: u64 [a2 + 0x2f8] = a4\n 10553: a0 = 0x40\n 10556: a1 = s1 + 0x7ff\n 10560: a1 = a1 + 0x361\n 10564: u64 [a2 + 0x300] = a5\n 10568: u64 [s1 + 0xe8] = ra\n 10572: u64 [s1 + 0xe0] = a4\n 10576: u64 [s1 + 0xf0] = a5\n 10580: ra = 288, jump @19\n      : @349 [@dyn 144] (gas: 27)\n 10586: a1 = s1 + 0x7ff\n 10590: a1 = a1 + 0x79\n 10593: a0 = u64 [s1 + 0x58]\n 10596: a2 = a1 + 0x200\n 10600: u64 [a2 + 0xa0] = a0\n 10604: a0 = u64 [s1 + 0x68]\n 10607: u64 [a2 + 0x98] = a0\n 10611: a0 = u64 [s1 + 0x60]\n 10614: u64 [a2 + 0x90] = a0\n 10618: a0 = u64 [s1 + 0x70]\n 10621: u64 [a2 + 0x88] = a0\n 10625: a0 = u64 [s1 + 0xf0]\n 10629: u64 [a2 + 0xc0] = a0\n 10633: a0 = u64 [s1 + 0xe0]\n 10637: u64 [a2 + 0xb8] = a0\n 10641: a0 = u64 [s1 + 0xe8]\n 10645: u64 [a2 + 0xb0] = a0\n 10649: a4 = a1\n 10651: a0 = s1 + 0x7ff\n 10655: a0 = a0 + 0x341\n 10659: a1 = s1 + 0x7ff\n 10663: a1 = a1 + 0x321\n 10667: a2 = s1 + 0x7ff\n 10671: a2 = a2 + 0x301\n 10675: a3 = u64 [s1 + 0xf8]\n 10679: u64 [a4 + 0x2a8] = a3\n 10683: ra = 290, jump @572\n      : @350 [@dyn 145] (gas: 12)\n 10689: a3 = u64 [s1 + 0xe0]\n 10693: a4 = u64 [s1 + 0xe8]\n 10697: t0 = u64 [s1 + 0xf8]\n 10701: a0 = t0 | a3\n 10704: a1 = u64 [s1 + 0xf0]\n 10708: a1 = a1 | a4\n 10711: a0 = a0 | a1\n 10714: a0 = a0 >> 0x20\n 10717: a1 = a1 | a3\n 10720: a1 = a1 << 0x20\n 10723: a0 = a0 | a1\n 10726: jump @447 if a0 != 0\n      : @351 (gas: 33)\n 10730: a1 = s1 + 0x7ff\n 10734: a1 = a1 + 0x79\n 10737: a5 = a1 + 0x200\n 10741: a0 = u64 [a5 + 0xd0]\n 10745: a2 = u64 [a5 + 0xe0]\n 10749: u64 [s1 + 0xd8] = a2\n 10753: a2 = a3\n 10755: t1 = u64 [a1 + 0x2c8]\n 10759: a3 = u64 [a5 + 0xd8]\n 10763: t2 = a0 ^ a4\n 10766: a5 = a0 <u a4\n 10769: ra = t1 <u t0\n 10772: a5 = ra if t2 == 0\n 10775: a1 = a3 - a2\n 10778: t2 = a1 - a5\n 10781: a1 = a1 <u a5\n 10784: a3 = a3 <u a2\n 10787: a2 = u64 [s1 + 0xd8]\n 10791: a3 = a2 - a3\n 10794: a2 = u64 [s1 + 0xf0]\n 10798: a3 = a3 - a2\n 10801: a3 = a3 - a1\n 10804: a0 = a0 - a4\n 10807: a0 = a0 - ra\n 10810: a1 = t1 - t0\n 10813: a0 = a0 | a3\n 10816: a2 = a1 | t2\n 10819: a2 = a2 | a0\n 10822: a0 = a0 | t2\n 10825: a2 = a2 >> 0x20\n 10828: a0 = a0 << 0x20\n 10831: a0 = a0 | a2\n 10834: jump @447 if a0 != 0\n      : @352 (gas: 4)\n 10838: a0 = t0\n 10840: u64 [s1 + 0xf8] = a1\n 10844: ra = 0x1b8\n 10848: jump @26\n      : @353 (gas: 8)\n 10851: u64 [a2 + 1760] = 0\n 10855: u64 [a2 + 1752] = 0\n 10859: u64 [a2 + 1744] = 0\n 10863: u64 [a2 + 1736] = 0\n 10867: a0 = s1 + 0x1000\n 10871: i32 a0 = a0 + 0xffffffffffffff40\n 10875: ecalli 10 // 'value_transferred'\n 10877: fallthrough\n      : @354 (gas: 11)\n 10878: a3 = s1 + 0x7ff\n 10882: a3 = a3 + 0x79\n 10885: a4 = a3 + 0x600\n 10889: a0 = u64 [a4 + 0xd8]\n 10893: a1 = u64 [a4 + 0xe0]\n 10897: a2 = u64 [a4 + 0xd0]\n 10901: a3 = u64 [a4 + 0xc8]\n 10905: a1 = a1 | a2\n 10908: a0 = a0 | a3\n 10911: a0 = a0 | a1\n 10914: jump @356 if a0 == 0\n      : @355 (gas: 1)\n 10917: jump @489\n      : @356 (gas: 3)\n 10920: a0 = u64 [s1 + 0xf8]\n 10924: a0 = i32 [a0]\n 10926: jump @358 if a0 >u 3\n      : @357 (gas: 1)\n 10930: jump @490\n      : @358 (gas: 6)\n 10933: a0 = 0x300c0\n 10938: u64 [s1 + 0xf8] = a0\n 10942: i32 a0 = a0 + 0\n 10944: u64 [s1 + 0xe0] = a0\n 10948: ecalli 3 // 'caller'\n 10950: fallthrough\n      : @359 (gas: 7)\n 10951: a2 = u64 [s1 + 0xf8]\n 10955: a0 = u32 [a2 + 0x10]\n 10958: a1 = u64 [a2]\n 10960: a2 = u64 [a2 + 0x8]\n 10963: a0 = a0 | a1\n 10966: a0 = a0 | a2\n 10969: jump @361 if a0 != 0\n      : @360 (gas: 1)\n 10972: jump @491\n      : @361 (gas: 12)\n 10975: a0 = 0x6bc75e2d63100000\n 10985: u64 [s1 + 0xf0] = a0\n 10989: a0 = s1 + 0x7ff\n 10993: a0 = a0 + 0x79\n 10996: u64 [a0 + 1792] = 0\n 11000: u64 [a0 + 1784] = 0\n 11004: u64 [a0 + 1776] = 0\n 11008: u64 [a0 + 1768] = 0x2\n 11013: a0 = s1 + 0x660\n 11017: a1 = s1 + 0x7ff\n 11021: a1 = a1 + 0x761\n 11025: ra = 292, jump @21\n      : @362 [@dyn 146] (gas: 34)\n 11031: a0 = u64 [s1 + 0x678]\n 11035: u64 [s1 + 0xe8] = a0\n 11039: t2 = u64 [s1 + 0x670]\n 11043: a3 = u64 [s1 + 0x668]\n 11047: t1 = u64 [s1 + 0x660]\n 11051: a1 = sp + 0xffffffffffffffe0\n 11054: a1 = a1 & 0xffffffffffffffe0\n 11057: sp = a1\n 11059: t0 = u64 [s1 + 0xf0]\n 11063: t0 = t0 + t1\n 11066: a5 = t0 <u t1\n 11069: a0 = a3 + a5\n 11072: a4 = a0 + 0x5\n 11075: ra = u64 [0x20020]\n 11080: a2 = a4 ^ a3\n 11083: a0 = a4 <u a3\n 11086: a0 = a5 if a2 == 0\n 11089: a2 = ra <u t1\n 11092: a5 = a3 + 0x6\n 11095: a3 = a3 <u 0xfffffffffffffffb\n 11098: a3 = a3 ^ 0x1\n 11101: a3 = a2 if a5 == 0\n 11104: u64 [a1 + 0x8] = a4\n 11107: u64 [a1] = t0\n 11109: a0 = a0 + t2\n 11112: u64 [a1 + 0x10] = a0\n 11115: a0 = a0 <u t2\n 11118: a2 = u64 [s1 + 0xe8]\n 11122: a0 = a0 + a2\n 11125: a2 = t2 & a2\n 11128: a2 = a2 + 0x1\n 11131: a3 = 0 if a2 != 0\n 11133: u64 [a1 + 0x18] = a0\n 11136: jump @364 if a3 == 0\n      : @363 (gas: 1)\n 11139: jump @496\n      : @364 (gas: 9)\n 11142: a0 = s1 + 0x7ff\n 11146: a0 = a0 + 0x79\n 11149: u64 [a0 + 1824] = 0\n 11153: u64 [a0 + 1816] = 0\n 11157: u64 [a0 + 1808] = 0\n 11161: u64 [a0 + 1800] = 0x2\n 11166: a0 = s1 + 0x7ff\n 11170: a0 = a0 + 0x781\n 11174: ra = 294, jump @22\n      : @365 [@dyn 147] (gas: 6)\n 11180: a0 = u64 [s1 + 0xe0]\n 11184: ra = 0x128\n 11188: ecalli 3 // 'caller'\n 11190: a2 = u64 [s1 + 0xf8]\n 11194: t0 = 0x12a\n 11198: jump @653\n      : @366 [@dyn 148] (gas: 2)\n 11201: a2 = u64 [s1 + 0xf8]\n 11205: t0 = 298, jump @653\n      : @367 [@dyn 149] (gas: 8)\n 11211: u64 [s1 + 1624] = 0\n 11215: a2 = s1 + 0x600\n 11219: u64 [a2 + 0x50] = a1\n 11222: u64 [a2 + 0x48] = a0\n 11225: a1 = s1 + 0x640\n 11229: u64 [a2 + 0x40] = a3\n 11232: a0 = 0\n 11234: ra = 300, jump @19\n      : @368 [@dyn 150] (gas: 7)\n 11240: u64 [s1 + 1592] = 0\n 11244: u64 [s1 + 1584] = 0\n 11248: u64 [s1 + 1576] = 0\n 11252: a0 = 0x20\n 11255: a1 = s1 + 0x620\n 11259: u64 [s1 + 1568] = 0\n 11263: ra = 302, jump @19\n      : @369 [@dyn 151] (gas: 6)\n 11269: a0 = sp + 0xffffffffffffffe0\n 11272: a0 = a0 & 0xffffffffffffffe0\n 11275: u64 [s1 + 0xe8] = a0\n 11279: sp = a0\n 11281: a1 = i32 [0x200ac]\n 11286: jump @371 if a1 >u 63\n      : @370 (gas: 2)\n 11290: u32 [0x200ac] = 0x40\n 11296: fallthrough\n      : @371 (gas: 14)\n 11297: a0 = sp + 0xffffffffffffffe0\n 11300: a2 = a0 & 0xffffffffffffffe0\n 11303: u64 [s1 + 0xd8] = a2\n 11307: sp = a2\n 11309: a0 = 0x200c0\n 11314: i32 a0 = a0 + 0\n 11316: i32 a2 = a2 + 0\n 11318: a1 = 0x40\n 11321: u64 [s1 + 0xd0] = a0\n 11325: ra = 0x130\n 11329: ecalli 6 // 'hash_keccak_256'\n 11331: a3 = u64 [s1 + 0xd8]\n 11335: t0 = 0x132\n 11339: jump @655\n      : @372 [@dyn 152] (gas: 2)\n 11342: a3 = u64 [s1 + 0xd8]\n 11346: t0 = 306, jump @655\n      : @373 [@dyn 153] (gas: 7)\n 11352: a1 = u64 [s1 + 0xe8]\n 11356: u64 [a1 + 0x18] = a3\n 11359: u64 [a1 + 0x10] = a2\n 11362: u64 [a1 + 0x8] = a4\n 11365: u64 [a1] = a0\n 11367: a0 = s1 + 0x600\n 11371: ra = 308, jump @21\n      : @374 [@dyn 154] (gas: 27)\n 11377: a2 = s1 + 0x600\n 11381: a0 = u64 [a2 + 0x8]\n 11384: a1 = u64 [a2]\n 11386: t0 = u64 [s1 + 0x618]\n 11390: a3 = u64 [a2 + 0x10]\n 11393: a4 = a0 + 0x5\n 11396: a5 = u64 [s1 + 0xf0]\n 11400: a5 = a5 + a1\n 11403: a1 = a5 <u a1\n 11406: a4 = a4 + a1\n 11409: a2 = a4 ^ a0\n 11412: a0 = a4 <u a0\n 11415: a0 = a1 if a2 == 0\n 11418: a0 = a0 + a3\n 11421: a1 = a0 <u a3\n 11424: a1 = a1 + t0\n 11427: a2 = s1 + 0x7ff\n 11431: a2 = a2 + 0x79\n 11434: a3 = a2 + 0x700\n 11438: u64 [a3 + 0x28] = a5\n 11441: u64 [a3 + 0x30] = a4\n 11444: u64 [a3 + 0x38] = a0\n 11447: u64 [a3 + 0x40] = a1\n 11450: a1 = s1 + 0x7ff\n 11454: a1 = a1 + 0x7a1\n 11458: a0 = u64 [s1 + 0xe8]\n 11462: ra = 310, jump @22\n      : @375 [@dyn 155] (gas: 3)\n 11468: a0 = s1 + 0x5e0\n 11472: a1 = 0x40\n 11475: ra = 312, jump @17\n      : @376 [@dyn 156] (gas: 6)\n 11481: a4 = s1 + 0x500\n 11485: a0 = u64 [a4 + 0xf8]\n 11489: a1 = u64 [a4 + 0xf0]\n 11493: a2 = u64 [a4 + 0xe8]\n 11497: a3 = u64 [a4 + 0xe0]\n 11501: t0 = 314, jump @665\n      : @377 [@dyn 157] (gas: 1)\n 11507: jump @447 if a0 != 0\n      : @378 (gas: 9)\n 11511: u64 [s1 + 1496] = 0\n 11515: u64 [s1 + 1488] = 0\n 11519: u64 [s1 + 1480] = 0x5\n 11524: a0 = 0x6bc75e2d63100000\n 11534: a1 = s1 + 0x5c0\n 11538: u64 [s1 + 0x5c0] = a0\n 11542: a0 = a3\n 11544: u64 [s1 + 0xf0] = a3\n 11548: ra = 316, jump @19\n      : @379 [@dyn 158] (gas: 6)\n 11554: a0 = u64 [s1 + 0xe0]\n 11558: ra = 0x13e\n 11562: ecalli 3 // 'caller'\n 11564: a2 = u64 [s1 + 0xf8]\n 11568: t0 = 0x140\n 11572: jump @668\n      : @380 [@dyn 159] (gas: 2)\n 11575: a2 = u64 [s1 + 0xf8]\n 11579: t0 = 320, jump @668\n      : @381 [@dyn 160] (gas: 29)\n 11585: t0 = a1 | a0\n 11588: a3 = a3 >> 0x20\n 11591: a2 = reverse a2\n 11593: a1 = a2 << 0x20\n 11596: a1 = a1 | a3\n 11599: a2 = a2 >> 0x20\n 11602: u64 [s1 + 1400] = 0\n 11606: u64 [s1 + 1432] = 0\n 11610: u64 [s1 + 1424] = 0\n 11614: u64 [s1 + 1416] = 0\n 11618: u64 [s1 + 1408] = 0\n 11622: a3 = u64 [0x20028]\n 11627: a4 = u64 [0x20030]\n 11632: a5 = u64 [0x20038]\n 11637: a0 = u64 [0x20040]\n 11642: u64 [s1 + 0x5b8] = a3\n 11646: a3 = s1 + 0x500\n 11650: u64 [a3 + 0xb0] = a4\n 11654: u64 [a3 + 0xa8] = a5\n 11658: u64 [a3 + 0xa0] = a0\n 11662: u64 [a3 + 0x70] = a2\n 11665: u64 [a3 + 0x68] = a1\n 11668: a1 = 0x20\n 11671: a2 = s1 + 0x5a0\n 11675: a3 = s1 + 0x580\n 11679: a4 = s1 + 0x560\n 11683: u64 [s1 + 0x560] = t0\n 11687: a0 = u64 [s1 + 0xf0]\n 11691: ra = 322, jump @23\n      : @382 [@dyn 161] (gas: 6)\n 11697: a0 = 0\n 11699: a1 = u64 [s1 + 0xd0]\n 11703: a2 = 0\n 11705: ecalli 7 // 'seal_return'\n 11707: a1 = 0x200c0\n 11712: jump @457\n      : @383 (gas: 8)\n 11715: u64 [a2 + 1696] = 0\n 11719: u64 [a2 + 1688] = 0\n 11723: u64 [a2 + 1680] = 0\n 11727: u64 [a2 + 1672] = 0\n 11731: a0 = s1 + 0x1000\n 11735: i32 a0 = a0 + 0xffffffffffffff00\n 11739: ecalli 10 // 'value_transferred'\n 11741: fallthrough\n      : @384 (gas: 11)\n 11742: a4 = s1 + 0x7ff\n 11746: a4 = a4 + 0x79\n 11749: a5 = a4 + 0x600\n 11753: a0 = u64 [a5 + 0x98]\n 11757: a1 = u64 [a5 + 0xa0]\n 11761: a2 = u64 [a5 + 0x90]\n 11765: a3 = u64 [a5 + 0x88]\n 11769: a1 = a1 | a2\n 11772: a0 = a0 | a3\n 11775: a0 = a0 | a1\n 11778: jump @502 if a0 != 0\n      : @385 (gas: 3)\n 11782: a0 = u64 [s1 + 0xf8]\n 11786: a0 = i32 [a0]\n 11788: jump @503 if a0 <=u 3\n      : @386 (gas: 8)\n 11793: u64 [a4 + 1728] = 0\n 11797: u64 [a4 + 1720] = 0\n 11801: u64 [a4 + 1712] = 0\n 11805: u64 [a4 + 1704] = 0x2\n 11810: a0 = s1 + 0x4c0\n 11814: a1 = s1 + 0x7ff\n 11818: a1 = a1 + 0x721\n 11822: ra = 324, jump @21\n      : @387 [@dyn 162] (gas: 11)\n 11828: a0 = u64 [s1 + 0x4d8]\n 11832: u64 [s1 + 0xf8] = a0\n 11836: a0 = u64 [s1 + 0x4d0]\n 11840: u64 [s1 + 0xf0] = a0\n 11844: a0 = u64 [s1 + 0x4c8]\n 11848: u64 [s1 + 0xe8] = a0\n 11852: a0 = u64 [s1 + 0x4c0]\n 11856: u64 [s1 + 0xe0] = a0\n 11860: a0 = s1 + 0x4a0\n 11864: a1 = 0x40\n 11867: ra = 326, jump @17\n      : @388 [@dyn 163] (gas: 6)\n 11873: a4 = s1 + 0x400\n 11877: a0 = u64 [a4 + 0xb8]\n 11881: a1 = u64 [a4 + 0xb0]\n 11885: a2 = u64 [a4 + 0xa8]\n 11889: a3 = u64 [a4 + 0xa0]\n 11893: t0 = 328, jump @665\n      : @389 [@dyn 164] (gas: 1)\n 11899: jump @447 if a0 != 0\n      : @390 (gas: 14)\n 11903: a0 = u64 [s1 + 0xe0]\n 11907: a2 = s1 + 0x400\n 11911: u64 [a2 + 0x80] = a0\n 11915: a0 = u64 [s1 + 0xe8]\n 11919: u64 [a2 + 0x88] = a0\n 11923: a0 = u64 [s1 + 0xf0]\n 11927: u64 [a2 + 0x90] = a0\n 11931: a1 = s1 + 0x480\n 11935: a0 = u64 [s1 + 0xf8]\n 11939: u64 [a2 + 0x98] = a0\n 11943: a0 = a3\n 11945: u64 [s1 + 0xf8] = a3\n 11949: ra = 0x172\n 11953: jump @19\n      : @391 (gas: 9)\n 11956: a0 = s1 + 0x1078\n 11960: u64 [a0 + 160] = 0\n 11964: u64 [a0 + 152] = 0\n 11968: u64 [a0 + 144] = 0\n 11972: u64 [a0 + 136] = 0\n 11976: a0 = s1 + 0x1000\n 11980: i32 a0 = a0 + 0x100\n 11984: ecalli 10 // 'value_transferred'\n 11986: fallthrough\n      : @392 (gas: 9)\n 11987: a3 = s1 + 0x1078\n 11991: a0 = u64 [a3 + 0x98]\n 11995: a1 = u64 [a3 + 0xa0]\n 11999: a2 = u64 [a3 + 0x90]\n 12003: a3 = u64 [a3 + 0x88]\n 12007: a1 = a1 | a2\n 12010: a0 = a0 | a3\n 12013: a0 = a0 | a1\n 12016: jump @504 if a0 != 0\n      : @393 (gas: 4)\n 12020: a0 = u64 [s1 + 0xf8]\n 12024: a0 = i32 [a0]\n 12026: a1 = 0x43\n 12029: jump @505 if a1 >=u a0\n      : @394 (gas: 7)\n 12033: a0 = 0xffffffff\n 12043: u64 [s1 + 0xf8] = a0\n 12047: a0 = s1 + 0x7ff\n 12051: a0 = a0 + 0x621\n 12055: ra = 0x14a\n 12059: t0 = 0x1ea\n 12063: jump @670\n      : @395 [@dyn 165] (gas: 13)\n 12066: a1 = s1 + 0x7ff\n 12070: a1 = a1 + 0x79\n 12073: a0 = u64 [a1 + 0x5a8]\n 12077: u64 [s1 + 0xf0] = a0\n 12081: a0 = u64 [a1 + 0x5b0]\n 12085: u64 [s1 + 0xd0] = a0\n 12089: a0 = u32 [a1 + 0x5b8]\n 12093: u64 [s1 + 0xc8] = a0\n 12097: a0 = s1 + 0x7ff\n 12101: a0 = a0 + 0x601\n 12105: ra = 0x14c\n 12109: t0 = 0x1f4\n 12113: jump @670\n      : @396 [@dyn 166] (gas: 21)\n 12116: a1 = s1 + 0x7ff\n 12120: a1 = a1 + 0x79\n 12123: a2 = a1 + 0x500\n 12127: a0 = u64 [a2 + 0x98]\n 12131: u64 [s1 + 0xe8] = a0\n 12135: a0 = u64 [a2 + 0x90]\n 12139: u64 [s1 + 0xe0] = a0\n 12143: a0 = u64 [a2 + 0x88]\n 12147: u64 [s1 + 0xd8] = a0\n 12151: u64 [a1 + 1408] = 0\n 12155: a0 = u64 [s1 + 0xc8]\n 12159: u64 [a2 + 0x78] = a0\n 12162: a0 = u64 [s1 + 0xd0]\n 12166: u64 [a2 + 0x70] = a0\n 12169: a2 = a1\n 12171: a1 = s1 + 0x7ff\n 12175: a1 = a1 + 0x5e1\n 12179: a0 = u64 [s1 + 0xf0]\n 12183: u64 [a2 + 0x568] = a0\n 12187: a0 = 0\n 12189: ra = 334, jump @19\n      : @397 [@dyn 167] (gas: 11)\n 12195: a1 = s1 + 0x7ff\n 12199: a1 = a1 + 0x79\n 12202: u64 [a1 + 1376] = 0\n 12206: u64 [a1 + 1368] = 0\n 12210: u64 [a1 + 1352] = 0x1\n 12215: a2 = a1\n 12217: a0 = 0x20\n 12220: a1 = s1 + 0x7ff\n 12224: a1 = a1 + 0x5c1\n 12228: u64 [a2 + 1360] = 0\n 12232: ra = 336, jump @19\n      : @398 [@dyn 168] (gas: 3)\n 12238: a1 = 0x200ac\n 12243: a0 = i32 [0x200ac]\n 12248: jump @400 if a0 >u 63\n      : @399 (gas: 2)\n 12252: u32 [0x200ac] = 0x40\n 12258: fallthrough\n      : @400 (gas: 15)\n 12259: a0 = sp + 0xffffffffffffffe0\n 12262: a2 = a0 & 0xffffffffffffffe0\n 12265: u64 [s1 + 0xc8] = a2\n 12269: sp = a2\n 12271: a0 = 0x200c0\n 12276: i32 a0 = a0 + 0\n 12278: i32 a2 = a2 + 0\n 12280: u64 [s1 + 0xf0] = a1\n 12284: a1 = 0x40\n 12287: u64 [s1 + 0xd0] = a0\n 12291: ra = 0x152\n 12295: ecalli 6 // 'hash_keccak_256'\n 12297: a3 = u64 [s1 + 0xc8]\n 12301: t0 = 0x154\n 12305: jump @671\n      : @401 [@dyn 169] (gas: 2)\n 12308: a3 = u64 [s1 + 0xc8]\n 12312: t0 = 340, jump @671\n      : @402 [@dyn 170] (gas: 29)\n 12318: u64 [s1 + 0xc0] = a0\n 12322: a0 = reverse a1\n 12324: u64 [s1 + 0xb8] = a0\n 12328: a0 = reverse a2\n 12330: u64 [s1 + 0xb0] = a0\n 12334: a0 = reverse a3\n 12336: u64 [s1 + 0xa8] = a0\n 12340: a0 = sp + 0xffffffffffffffe0\n 12343: a0 = a0 & 0xffffffffffffffe0\n 12346: u64 [s1 + 0xc8] = a0\n 12350: sp = a0\n 12352: a0 = u64 [s1 + 0xd8]\n 12356: a0 = a0 & 0xffffffffffffffff\n 12359: a2 = u64 [s1 + 0xe0]\n 12363: a1 = a2 & 0xffffffffffffffff\n 12366: a2 = u64 [s1 + 0xf8]\n 12370: a3 = u64 [s1 + 0xe8]\n 12374: a2 = a2 & a3\n 12377: a3 = s1 + 0x7ff\n 12381: a3 = a3 + 0x79\n 12384: u64 [a3 + 1344] = 0\n 12388: a4 = a3 + 0x500\n 12392: u64 [a4 + 0x38] = a2\n 12395: u64 [a4 + 0x30] = a1\n 12398: a1 = s1 + 0x7ff\n 12402: a1 = a1 + 0x5a1\n 12406: u64 [a4 + 0x28] = a0\n 12409: a0 = 0\n 12411: ra = 342, jump @19\n      : @403 [@dyn 171] (gas: 16)\n 12417: a0 = u64 [s1 + 0xa8]\n 12421: a1 = s1 + 0x7ff\n 12425: a1 = a1 + 0x79\n 12428: a2 = a1 + 0x500\n 12432: u64 [a2 + 0x20] = a0\n 12435: a0 = u64 [s1 + 0xb0]\n 12439: u64 [a2 + 0x18] = a0\n 12442: a0 = u64 [s1 + 0xb8]\n 12446: u64 [a2 + 0x10] = a0\n 12449: a3 = a1\n 12451: a0 = 0x20\n 12454: a1 = s1 + 0x7ff\n 12458: a1 = a1 + 0x581\n 12462: a2 = u64 [s1 + 0xc0]\n 12466: u64 [a3 + 0x508] = a2\n 12470: ra = 344, jump @19\n      : @404 [@dyn 172] (gas: 3)\n 12476: a1 = u64 [s1 + 0xf0]\n 12480: a0 = i32 [a1]\n 12482: jump @406 if a0 >u 63\n      : @405 (gas: 2)\n 12486: u32 [a1 + 0] = 0x40\n 12489: fallthrough\n      : @406 (gas: 12)\n 12490: a0 = sp + 0xffffffffffffffe0\n 12493: a0 = a0 & 0xffffffffffffffe0\n 12496: u64 [s1 + 0xf8] = a0\n 12500: sp = a0\n 12502: i32 a2 = a0 + 0\n 12504: a1 = 0x40\n 12507: a0 = u64 [s1 + 0xd0]\n 12511: ra = 0x15a\n 12515: ecalli 6 // 'hash_keccak_256'\n 12517: a3 = u64 [s1 + 0xf8]\n 12521: t0 = 0x15c\n 12525: jump @655\n      : @407 [@dyn 173] (gas: 2)\n 12528: a3 = u64 [s1 + 0xf8]\n 12532: t0 = 348, jump @655\n      : @408 [@dyn 174] (gas: 8)\n 12538: a1 = u64 [s1 + 0xc8]\n 12542: u64 [a1 + 0x18] = a3\n 12545: u64 [a1 + 0x10] = a2\n 12548: u64 [a1 + 0x8] = a4\n 12551: u64 [a1] = a0\n 12553: a0 = s1 + 0x7ff\n 12557: a0 = a0 + 0x561\n 12561: ra = 350, jump @21\n      : @409 [@dyn 175] (gas: 15)\n 12567: a1 = s1 + 0x7ff\n 12571: a1 = a1 + 0x79\n 12574: a0 = u64 [a1 + 0x500]\n 12578: u64 [s1 + 0xf8] = a0\n 12582: a2 = a1 + 0x400\n 12586: a0 = u64 [a2 + 0xf8]\n 12590: u64 [s1 + 0xf0] = a0\n 12594: a0 = u64 [a2 + 0xf0]\n 12598: u64 [s1 + 0xe8] = a0\n 12602: a0 = u64 [a2 + 0xe8]\n 12606: u64 [s1 + 0xe0] = a0\n 12610: a0 = s1 + 0x7ff\n 12614: a0 = a0 + 0x541\n 12618: a1 = 0x40\n 12621: ra = 352, jump @17\n      : @410 [@dyn 176] (gas: 15)\n 12627: a3 = s1 + 0x7ff\n 12631: a3 = a3 + 0x79\n 12634: a5 = a3 + 0x400\n 12638: a0 = u64 [a5 + 0xe0]\n 12642: a1 = u64 [a5 + 0xd8]\n 12646: a2 = u64 [a5 + 0xd0]\n 12650: a4 = u64 [a5 + 0xc8]\n 12654: a0 = a0 | a2\n 12657: a2 = a4 | a1\n 12660: a2 = a2 | a0\n 12663: a2 = a2 >> 0x20\n 12666: a0 = a0 | a1\n 12669: a0 = a0 << 0x20\n 12672: a0 = a0 | a2\n 12675: jump @447 if a0 != 0\n      : @411 (gas: 15)\n 12679: a0 = u64 [s1 + 0xe0]\n 12683: a2 = a3 + 0x400\n 12687: u64 [a2 + 0xa8] = a0\n 12691: a0 = u64 [s1 + 0xe8]\n 12695: u64 [a2 + 0xb0] = a0\n 12699: a0 = u64 [s1 + 0xf0]\n 12703: u64 [a2 + 0xb8] = a0\n 12707: a1 = s1 + 0x7ff\n 12711: a1 = a1 + 0x521\n 12715: a0 = u64 [s1 + 0xf8]\n 12719: u64 [a2 + 0xc0] = a0\n 12723: a0 = a4\n 12725: u64 [s1 + 0xf8] = a4\n 12729: ra = 0x172\n 12733: jump @19\n      : @412 (gas: 9)\n 12736: a0 = s1 + 0x1078\n 12740: u64 [a0 + 96] = 0\n 12743: u64 [a0 + 88] = 0\n 12746: u64 [a0 + 80] = 0\n 12749: u64 [a0 + 72] = 0\n 12752: a0 = s1 + 0x1000\n 12756: i32 a0 = a0 + 0xc0\n 12760: ecalli 10 // 'value_transferred'\n 12762: fallthrough\n      : @413 (gas: 9)\n 12763: a3 = s1 + 0x1078\n 12767: a0 = u64 [a3 + 0x58]\n 12770: a1 = u64 [a3 + 0x60]\n 12773: a2 = u64 [a3 + 0x50]\n 12776: a3 = u64 [a3 + 0x48]\n 12779: a1 = a1 | a2\n 12782: a0 = a0 | a3\n 12785: a0 = a0 | a1\n 12788: jump @506 if a0 != 0\n      : @414 (gas: 4)\n 12792: a0 = u64 [s1 + 0xf8]\n 12796: a0 = i32 [a0]\n 12798: a1 = 0x43\n 12801: jump @507 if a1 >=u a0\n      : @415 (gas: 5)\n 12805: a0 = s1 + 0x7ff\n 12809: a0 = a0 + 0x501\n 12813: ra = 0x162\n 12817: t0 = 0x1ea\n 12821: jump @670\n      : @416 [@dyn 177] (gas: 72)\n 12824: a1 = s1 + 0x7ff\n 12828: a1 = a1 + 0x79\n 12831: a2 = a1 + 0x400\n 12835: a0 = u64 [a2 + 0x88]\n 12839: u64 [s1 + 0xf8] = a0\n 12843: a0 = u64 [a2 + 0x90]\n 12847: u64 [s1 + 0xf0] = a0\n 12851: a0 = u64 [a2 + 0x98]\n 12855: u64 [s1 + 0xe8] = a0\n 12859: a0 = u64 [a2 + 0xa0]\n 12863: u64 [s1 + 0xe0] = a0\n 12867: a0 = s1 + 0x1000\n 12871: i32 a0 = a0 + 0xe0\n 12875: a1 = 0x24\n 12878: ecalli 1 // 'call_data_load'\n 12880: a0 = s1 + 0x1078\n 12884: a1 = u64 [a0 + 0x68]\n 12887: u64 [s1 + 0xd8] = a1\n 12891: a1 = u64 [a0 + 0x70]\n 12894: u64 [s1 + 0xd0] = a1\n 12898: a1 = u64 [a0 + 0x78]\n 12901: u64 [s1 + 0xc8] = a1\n 12905: a0 = u64 [a0 + 0x80]\n 12909: u64 [s1 + 0xc0] = a0\n 12913: a0 = 0x300c0\n 12918: u64 [s1 + 0xb8] = a0\n 12922: i32 a0 = a0 + 0\n 12924: ecalli 3 // 'caller'\n 12926: a2 = u64 [s1 + 0xb8]\n 12930: a0 = u64 [a2 + 0x8]\n 12933: a1 = i32 [a2 + 0x10]\n 12936: a2 = u64 [a2]\n 12938: a0 = reverse a0\n 12940: a3 = a0 << 0x20\n 12943: a1 = reverse a1\n 12945: a1 = a1 >> 0x20\n 12948: a1 = a1 | a3\n 12951: a0 = a0 >> 0x20\n 12954: a2 = reverse a2\n 12956: a3 = a2 << 0x20\n 12959: a0 = a0 | a3\n 12962: a2 = a2 >> 0x20\n 12965: a3 = s1 + 0x7ff\n 12969: a3 = a3 + 0x79\n 12972: a4 = u64 [s1 + 0xc0]\n 12976: a5 = a3 + 0x400\n 12980: u64 [a5 + 0x40] = a4\n 12983: a4 = u64 [s1 + 0xc8]\n 12987: u64 [a5 + 0x38] = a4\n 12990: a4 = u64 [s1 + 0xd0]\n 12994: u64 [a5 + 0x30] = a4\n 12997: a4 = u64 [s1 + 0xd8]\n 13001: u64 [a5 + 0x28] = a4\n 13004: a4 = u64 [s1 + 0xe0]\n 13008: u64 [a5 + 0x60] = a4\n 13011: a4 = u64 [s1 + 0xe8]\n 13015: u64 [a5 + 0x58] = a4\n 13018: a4 = u64 [s1 + 0xf0]\n 13022: u64 [a5 + 0x50] = a4\n 13025: a4 = u64 [s1 + 0xf8]\n 13029: u64 [a5 + 0x48] = a4\n 13032: u64 [a5 + 0x78] = a2\n 13035: u64 [a5 + 0x70] = a0\n 13038: u64 [a5 + 0x68] = a1\n 13041: a0 = s1 + 0x7ff\n 13045: a0 = a0 + 0x4e1\n 13049: a1 = s1 + 0x7ff\n 13053: a1 = a1 + 0x4c1\n 13057: a2 = s1 + 0x7ff\n 13061: a2 = a2 + 0x4a1\n 13065: u64 [a3 + 1152] = 0\n 13069: ra = 356, jump @601\n      : @417 [@dyn 178] (gas: 4)\n 13075: a0 = s1 + 0x7ff\n 13079: a0 = a0 + 0x481\n 13083: a1 = 0x40\n 13086: ra = 358, jump @17\n      : @418 [@dyn 179] (gas: 15)\n 13092: a3 = s1 + 0x7ff\n 13096: a3 = a3 + 0x79\n 13099: a5 = a3 + 0x400\n 13103: a4 = u64 [a5 + 0x20]\n 13106: a1 = u64 [a5 + 0x18]\n 13109: a2 = u64 [a5 + 0x10]\n 13112: a0 = u64 [a5 + 0x8]\n 13115: a4 = a4 | a2\n 13118: a2 = a0 | a1\n 13121: a2 = a2 | a4\n 13124: a2 = a2 >> 0x20\n 13127: a1 = a1 | a4\n 13130: a1 = a1 << 0x20\n 13133: a1 = a1 | a2\n 13136: jump @447 if a1 != 0\n      : @419 (gas: 9)\n 13140: u64 [a3 + 1024] = 0\n 13144: u64 [a3 + 1016] = 0\n 13148: u64 [a3 + 1000] = 0x1\n 13153: a1 = s1 + 0x7ff\n 13157: a1 = a1 + 0x461\n 13161: u64 [a3 + 1008] = 0\n 13165: u64 [s1 + 0xf8] = a0\n 13169: ra = 0x172\n 13173: jump @19\n      : @420 (gas: 1)\n 13176: jump @456 if a0 != 1889567281\n      : @421 (gas: 8)\n 13184: u64 [a2 + 2016] = 0\n 13188: u64 [a2 + 2008] = 0\n 13192: u64 [a2 + 2000] = 0\n 13196: u64 [a2 + 1992] = 0\n 13200: a0 = s1 + 0x1000\n 13204: i32 a0 = a0 + 0x40\n 13207: ecalli 10 // 'value_transferred'\n 13209: fallthrough\n      : @422 (gas: 11)\n 13210: a3 = s1 + 0x7ff\n 13214: a3 = a3 + 0x79\n 13217: a4 = a3 + 0x700\n 13221: a0 = u64 [a4 + 0xd8]\n 13225: a1 = u64 [a4 + 0xe0]\n 13229: a2 = u64 [a4 + 0xd0]\n 13233: a3 = u64 [a4 + 0xc8]\n 13237: a1 = a1 | a2\n 13240: a0 = a0 | a3\n 13243: a0 = a0 | a1\n 13246: jump @508 if a0 != 0\n      : @423 (gas: 4)\n 13250: a0 = u64 [s1 + 0xf8]\n 13254: a0 = i32 [a0]\n 13256: a1 = 0x23\n 13259: jump @509 if a1 >=u a0\n      : @424 (gas: 5)\n 13263: a0 = s1 + 0x7ff\n 13267: a0 = a0 + 0x261\n 13271: ra = 0x168\n 13275: t0 = 0x1ea\n 13279: jump @670\n      : @425 [@dyn 180] (gas: 14)\n 13282: a3 = s1 + 0x7ff\n 13286: a3 = a3 + 0x79\n 13289: a4 = a3 + 0x100\n 13293: a0 = u64 [a4 + 0xe8]\n 13297: a1 = u64 [a4 + 0xf0]\n 13301: a2 = u32 [a3 + 0x1f8]\n 13305: u64 [a3 + 480] = 0\n 13309: u64 [a4 + 0xd8] = a2\n 13313: u64 [a4 + 0xd0] = a1\n 13317: a1 = s1 + 0x7ff\n 13321: a1 = a1 + 0x241\n 13325: u64 [a4 + 0xc8] = a0\n 13329: a0 = 0\n 13331: ra = 362, jump @19\n      : @426 [@dyn 181] (gas: 11)\n 13337: a0 = s1 + 0x7ff\n 13341: a0 = a0 + 0x79\n 13344: u64 [a0 + 448] = 0\n 13348: u64 [a0 + 440] = 0\n 13352: u64 [a0 + 432] = 0\n 13356: a2 = a0\n 13358: a0 = 0x20\n 13361: a1 = s1 + 0x7ff\n 13365: a1 = a1 + 0x221\n 13369: u64 [a2 + 424] = 0\n 13373: ra = 364, jump @19\n      : @427 [@dyn 182] (gas: 2)\n 13379: a1 = i32 [0x200ac]\n 13384: jump @429 if a1 >u 63\n      : @428 (gas: 2)\n 13388: u32 [0x200ac] = 0x40\n 13394: fallthrough\n      : @429 (gas: 28)\n 13395: a0 = sp + 0xffffffffffffffe0\n 13398: a2 = a0 & 0xffffffffffffffe0\n 13401: u64 [s1 + 0xf8] = a2\n 13405: sp = a2\n 13407: a0 = 0x200c0\n 13412: i32 a0 = a0 + 0\n 13414: i32 a2 = a2 + 0\n 13416: a1 = 0x40\n 13419: ecalli 6 // 'hash_keccak_256'\n 13421: a3 = u64 [s1 + 0xf8]\n 13425: a0 = u64 [a3 + 0x18]\n 13428: a1 = u64 [a3 + 0x10]\n 13431: a2 = u64 [a3 + 0x8]\n 13434: a3 = u64 [a3]\n 13436: a0 = reverse a0\n 13438: a1 = reverse a1\n 13440: a2 = reverse a2\n 13442: a3 = reverse a3\n 13444: a4 = s1 + 0x1078\n 13448: u64 [a4] = a3\n 13450: a3 = a4 + 0xffffffffffffff00\n 13454: u64 [a3 + 0xf8] = a2\n 13458: u64 [a3 + 0xf0] = a1\n 13462: u64 [a3 + 0xe8] = a0\n 13466: a0 = s1 + 0x7ff\n 13470: a0 = a0 + 0x201\n 13474: a1 = s1 + 0x1060\n 13478: ra = 366, jump @21\n      : @430 [@dyn 183] (gas: 15)\n 13484: a1 = s1 + 0x7ff\n 13488: a1 = a1 + 0x79\n 13491: a2 = a1 + 0x100\n 13495: a0 = u64 [a2 + 0xa0]\n 13499: u64 [s1 + 0xf8] = a0\n 13503: a0 = u64 [a2 + 0x98]\n 13507: u64 [s1 + 0xf0] = a0\n 13511: a0 = u64 [a2 + 0x90]\n 13515: u64 [s1 + 0xe8] = a0\n 13519: a0 = u64 [a2 + 0x88]\n 13523: u64 [s1 + 0xe0] = a0\n 13527: a0 = s1 + 0x7ff\n 13531: a0 = a0 + 0x1e1\n 13535: a1 = 0x40\n 13538: ra = 368, jump @17\n      : @431 [@dyn 184] (gas: 15)\n 13544: a3 = s1 + 0x7ff\n 13548: a3 = a3 + 0x79\n 13551: a5 = a3 + 0x100\n 13555: a0 = u64 [a5 + 0x80]\n 13559: a1 = u64 [a5 + 0x78]\n 13562: a2 = u64 [a5 + 0x70]\n 13565: a4 = u64 [a5 + 0x68]\n 13568: a0 = a0 | a2\n 13571: a2 = a4 | a1\n 13574: a2 = a2 | a0\n 13577: a2 = a2 >> 0x20\n 13580: a0 = a0 | a1\n 13583: a0 = a0 << 0x20\n 13586: a0 = a0 | a2\n 13589: jump @447 if a0 != 0\n      : @432 (gas: 14)\n 13593: a0 = u64 [s1 + 0xe0]\n 13597: a2 = a3 + 0x100\n 13601: u64 [a2 + 0x48] = a0\n 13604: a0 = u64 [s1 + 0xe8]\n 13608: u64 [a2 + 0x50] = a0\n 13611: a0 = u64 [s1 + 0xf0]\n 13615: u64 [a2 + 0x58] = a0\n 13618: a1 = s1 + 0x7ff\n 13622: a1 = a1 + 0x1c1\n 13626: a0 = u64 [s1 + 0xf8]\n 13630: u64 [a2 + 0x60] = a0\n 13633: a0 = a4\n 13635: u64 [s1 + 0xf8] = a4\n 13639: ra = 370, jump @19\n      : @433 [@dyn 185] (gas: 3)\n 13645: a1 = 0x20\n 13648: a0 = u64 [s1 + 0xf8]\n 13652: ra = 372, jump @26\n      : @434 [@dyn 186] (gas: 5)\n 13658: i32 a1 = a0 + 0\n 13660: a2 = 0x20\n 13663: a0 = 0\n 13665: ecalli 7 // 'seal_return'\n 13667: fallthrough\n      : @435 (gas: 7)\n 13668: u64 [s1 + 568] = 0\n 13672: u64 [s1 + 560] = 0\n 13676: u64 [s1 + 552] = 0\n 13680: a1 = s1 + 0x220\n 13684: u64 [s1 + 544] = 0x3\n 13689: a0 = 0\n 13691: ra = 374, jump @19\n      : @436 [@dyn 187] (gas: 21)\n 13697: a0 = sp + 0xffffffffffffffe0\n 13700: a1 = a0 & 0xffffffffffffffe0\n 13703: sp = a1\n 13705: u64 [s1 + 248] = 0\n 13709: a5 = 0\n 13711: t2 = 0\n 13713: t0 = 0\n 13715: t1 = u64 [0x20068]\n 13720: a2 = u64 [0x20070]\n 13725: ra = u64 [0x20078]\n 13730: a0 = u64 [0x20080]\n 13735: u64 [a1 + 0x18] = t1\n 13738: u64 [s1 + 0xd8] = a2\n 13742: u64 [a1 + 0x10] = a2\n 13745: u64 [a1 + 0x8] = ra\n 13748: a2 = a0\n 13750: u64 [a1] = a0\n 13752: a0 = 0xffffff60\n 13762: u64 [s1 + 0x98] = a0\n 13766: u64 [s1 + 0x90] = a1\n 13770: fallthrough\n      : @437 (gas: 19)\n 13771: u64 [s1 + 0xd0] = a2\n 13775: a0 = u64 [s1 + 0xb8]\n 13779: a2 = u64 [s1 + 0xf8]\n 13783: a0 = a2 <u a0\n 13786: a2 = u64 [s1 + 0xa8]\n 13790: a3 = a5 ^ a2\n 13793: u64 [s1 + 0xf0] = a5\n 13797: a2 = a5 <u a2\n 13800: a2 = a0 if a3 == 0\n 13803: a4 = u64 [s1 + 0xb0]\n 13807: a0 = t2 <u a4\n 13810: a3 = u64 [s1 + 0xa0]\n 13814: a5 = t0 ^ a3\n 13817: a3 = t0 <u a3\n 13820: a3 = a0 if a5 == 0\n 13823: a0 = t2 ^ a4\n 13826: a0 = a0 | a5\n 13829: a3 = a2 if a0 == 0\n 13832: jump @442 if a3 == 0\n      : @438 (gas: 6)\n 13836: a0 = s1 + 0x200\n 13840: u64 [s1 + 0xe8] = t0\n 13844: u64 [s1 + 0xc8] = t1\n 13848: u64 [s1 + 0xe0] = t2\n 13852: u64 [s1 + 0xc0] = ra\n 13856: ra = 376, jump @21\n      : @439 [@dyn 188] (gas: 10)\n 13862: a5 = u64 [s1 + 0xe0]\n 13866: a0 = u64 [s1 + 0xe8]\n 13870: a0 = a0 | a5\n 13873: a1 = u64 [s1 + 0xf8]\n 13877: a2 = u64 [s1 + 0x98]\n 13881: a1 = a1 <u a2\n 13884: a2 = u64 [s1 + 0xf0]\n 13888: a1 = 0 if a2 != 0\n 13890: a1 = 0 if a0 != 0\n 13892: jump @447 if a1 == 0\n      : @440 (gas: 14)\n 13896: t0 = u64 [s1 + 0x218]\n 13900: a0 = s1 + 0x200\n 13904: a1 = u64 [a0 + 0x10]\n 13907: a3 = u64 [a0 + 0x8]\n 13910: a4 = u64 [a0]\n 13912: a0 = u64 [s1 + 0xf8]\n 13916: i32 a0 = a0 + 0xa0\n 13920: a2 = s1 + 0x100\n 13924: u64 [a2 + 0xe0] = a4\n 13928: u64 [a2 + 0xe8] = a3\n 13932: u64 [a2 + 0xf0] = a1\n 13936: a1 = s1 + 0x1e0\n 13940: u64 [s1 + 0x1f8] = t0\n 13944: ra = 378, jump @19\n      : @441 [@dyn 189] (gas: 36)\n 13950: t0 = u64 [s1 + 0xe8]\n 13954: a5 = u64 [s1 + 0xd0]\n 13958: a5 = a5 + 0x1\n 13961: a0 = a5 <u 0x1\n 13964: ra = u64 [s1 + 0xc0]\n 13968: ra = ra + a0\n 13971: a0 = a5 | ra\n 13974: a0 = a0 <u 0x1\n 13977: a1 = u64 [s1 + 0xd8]\n 13981: a0 = a0 + a1\n 13984: a1 = a0 <u a1\n 13987: a3 = u64 [s1 + 0xc8]\n 13991: a3 = a3 + a1\n 13994: a1 = u64 [s1 + 0xf8]\n 13998: t1 = a1 + 0x20\n 14001: a2 = t1 <u a1\n 14004: a4 = u64 [s1 + 0xf0]\n 14008: t2 = a4 + a2\n 14011: a4 = t2 <u a4\n 14014: a4 = a2 if a2 == 0\n 14017: a1 = u64 [s1 + 0xe0]\n 14021: a4 = a4 + a1\n 14024: a2 = a4 <u a1\n 14027: t0 = t0 + a2\n 14030: a1 = u64 [s1 + 0x90]\n 14034: u64 [a1 + 0x8] = ra\n 14037: a2 = a5\n 14039: u64 [a1] = a5\n 14041: u64 [a1 + 0x10] = a0\n 14044: u64 [a1 + 0x18] = a3\n 14047: u64 [s1 + 0xd8] = a0\n 14051: u64 [s1 + 0xf8] = t1\n 14055: a5 = t2\n 14057: t2 = a4\n 14059: t1 = a3\n 14061: jump @437\n      : @442 (gas: 11)\n 14064: a0 = u64 [s1 + 0xf8]\n 14068: a3 = a0 + 0xa0\n 14072: a0 = a3 <u a0\n 14075: a2 = u64 [s1 + 0xf0]\n 14079: a1 = a2 + a0\n 14082: a2 = a1 <u a2\n 14085: a2 = a0 if a0 == 0\n 14088: a0 = t2 + a2\n 14091: a2 = a0 <u t2\n 14094: t0 = t0 + a2\n 14097: fallthrough\n      : @443 (gas: 37)\n 14098: t1 = a3 + 0xffffffffffffff9f\n 14101: a3 = t1 <u a3\n 14104: a5 = a1 + a3\n 14107: a5 = a5 + 0xffffffffffffffff\n 14110: u64 [s1 + 0xd8] = a5\n 14114: a2 = a5 ^ a1\n 14117: a1 = a5 <u a1\n 14120: a1 = a3 if a2 == 0\n 14123: a3 = a0 + 0xffffffffffffffff\n 14126: a4 = a3 + a1\n 14129: a1 = a4 <u a3\n 14132: a0 = a0 <u 0x1\n 14135: a2 = t0 - a0\n 14138: t0 = a2 + a1\n 14141: u64 [s1 + 0xc0] = t0\n 14145: a0 = t1 & 0xffffffffffffffe0\n 14148: u64 [s1 + 0xd0] = a0\n 14152: a3 = a0 + 0x80\n 14156: u64 [s1 + 0xf8] = a3\n 14160: a0 = a3 <u a0\n 14163: a2 = a5 + a0\n 14166: u64 [s1 + 0xf0] = a2\n 14170: a1 = a2 <u a5\n 14173: a1 = a0 if a0 == 0\n 14176: u64 [s1 + 0xc8] = a4\n 14180: a1 = a1 + a4\n 14183: u64 [s1 + 0xe8] = a1\n 14187: a0 = a1 <u a4\n 14190: t0 = t0 + a0\n 14193: u64 [s1 + 0xe0] = t0\n 14197: u64 [s1 + 0x1a0] = a3\n 14201: u64 [s1 + 0x1a8] = a2\n 14205: u64 [s1 + 0x1b0] = a1\n 14209: a0 = 0x40\n 14212: a1 = s1 + 0x1a0\n 14216: u64 [s1 + 0x1b8] = t0\n 14220: ra = 380, jump @19\n      : @444 [@dyn 190] (gas: 17)\n 14226: u64 [s1 + 344] = 0\n 14230: u64 [s1 + 336] = 0\n 14234: u64 [s1 + 328] = 0\n 14238: a4 = s1 + 0x100\n 14242: u64 [a4 + 64] = 0x80\n 14247: a0 = u64 [s1 + 0xe0]\n 14251: u64 [a4 + 0x78] = a0\n 14254: a0 = u64 [s1 + 0xe8]\n 14258: u64 [a4 + 0x70] = a0\n 14261: a0 = u64 [s1 + 0xf0]\n 14265: u64 [a4 + 0x68] = a0\n 14268: a0 = s1 + 0x180\n 14272: a1 = s1 + 0x160\n 14276: a2 = s1 + 0x140\n 14280: a3 = u64 [s1 + 0xf8]\n 14284: u64 [a4 + 0x60] = a3\n 14287: ra = 382, jump @572\n      : @445 [@dyn 191] (gas: 10)\n 14293: a0 = u64 [s1 + 0xc8]\n 14297: a1 = u64 [s1 + 0xc0]\n 14301: a0 = a0 | a1\n 14304: a1 = 0xffffff80\n 14314: a2 = u64 [s1 + 0xd0]\n 14318: a1 = a2 <u a1\n 14321: a2 = u64 [s1 + 0xd8]\n 14325: a1 = 0 if a2 != 0\n 14327: a1 = 0 if a0 != 0\n 14329: jump @447 if a1 == 0\n      : @446 (gas: 30)\n 14332: ra = u64 [s1 + 0x190]\n 14336: a1 = u64 [s1 + 0x198]\n 14340: t1 = u64 [s1 + 0x180]\n 14344: a3 = u64 [s1 + 0x188]\n 14348: a2 = u64 [s1 + 0xe8]\n 14352: a4 = ra <u a2\n 14355: a1 = a1 - a4\n 14358: a0 = u64 [s1 + 0xe0]\n 14362: t0 = a1 - a0\n 14365: a1 = u64 [s1 + 0xf0]\n 14369: a4 = a3 ^ a1\n 14372: a5 = a3 <u a1\n 14375: a0 = u64 [s1 + 0xf8]\n 14379: t2 = t1 <u a0\n 14382: a5 = t2 if a4 == 0\n 14385: a2 = ra - a2\n 14388: a4 = a2 <u a5\n 14391: a4 = t0 - a4\n 14394: a5 = a2 - a5\n 14397: a3 = a3 - t2\n 14400: a3 = a3 - a1\n 14403: a1 = t1 - a0\n 14406: a2 = a1 | a5\n 14409: a3 = a3 | a4\n 14412: a2 = a2 | a3\n 14415: a2 = a2 >> 0x20\n 14418: a3 = a3 | a5\n 14421: a3 = a3 << 0x20\n 14424: a2 = a2 | a3\n 14427: jump @532 if a2 == 0\n      : @447 (gas: 1)\n 14431: trap\n      : @448 (gas: 10)\n 14432: a2 = s1 + 0x7ff\n 14436: a2 = a2 + 0x79\n 14439: u64 [a2 + 896] = 0\n 14443: u64 [a2 + 888] = 0\n 14447: u64 [a2 + 880] = 0\n 14451: a1 = s1 + 0x7ff\n 14455: a1 = a1 + 0x3e1\n 14459: u64 [a2 + 872] = 0x4\n 14464: a0 = 0\n 14466: ra = 384, jump @19\n      : @449 [@dyn 192] (gas: 37)\n 14472: a0 = sp + 0xffffffffffffffe0\n 14475: a4 = a0 & 0xffffffffffffffe0\n 14478: sp = a4\n 14480: u64 [s1 + 248] = 0\n 14484: t2 = 0\n 14486: t1 = 0\n 14488: u64 [s1 + 240] = 0\n 14492: t0 = u64 [0x20000]\n 14497: a3 = u64 [0x20008]\n 14502: a1 = u64 [s1 + 0x70]\n 14505: a0 = a1 + 0x20\n 14508: u64 [s1 + 0x90] = a0\n 14512: a0 = a0 <u a1\n 14515: a1 = u64 [s1 + 0x60]\n 14518: a2 = a1 + a0\n 14521: u64 [s1 + 0x88] = a2\n 14525: a1 = a2 <u a1\n 14528: a1 = a0 if a0 == 0\n 14531: a5 = u64 [0x20010]\n 14536: a0 = u64 [0x20018]\n 14541: ra = t0\n 14543: u64 [a4 + 0x18] = t0\n 14546: u64 [s1 + 0xd0] = a3\n 14550: u64 [a4 + 0x10] = a3\n 14553: t0 = a5\n 14555: u64 [a4 + 0x8] = a5\n 14558: u64 [s1 + 0xd8] = a4\n 14562: a2 = a0\n 14564: u64 [a4] = a0\n 14566: a0 = u64 [s1 + 0x68]\n 14569: a1 = a1 + a0\n 14572: u64 [s1 + 0x80] = a1\n 14576: a0 = a1 <u a0\n 14579: a1 = u64 [s1 + 0x58]\n 14582: a0 = a0 + a1\n 14585: u64 [s1 + 0x78] = a0\n 14588: fallthrough\n      : @450 (gas: 21)\n 14589: u64 [s1 + 0xb8] = a2\n 14593: u64 [s1 + 0xc0] = t0\n 14597: u64 [s1 + 0xc8] = ra\n 14601: a0 = u64 [s1 + 0xb0]\n 14605: a1 = u64 [s1 + 0xf8]\n 14609: a0 = a1 <u a0\n 14612: a2 = u64 [s1 + 0xa0]\n 14616: a1 = t2 ^ a2\n 14619: a2 = t2 <u a2\n 14622: a2 = a0 if a1 == 0\n 14625: a4 = u64 [s1 + 0xa8]\n 14629: a0 = t1 <u a4\n 14632: a3 = u64 [s1 + 0x98]\n 14636: a1 = u64 [s1 + 0xf0]\n 14640: a5 = a1 ^ a3\n 14643: a3 = a1 <u a3\n 14646: a3 = a0 if a5 == 0\n 14649: a0 = t1 ^ a4\n 14652: a0 = a0 | a5\n 14655: a3 = a2 if a0 == 0\n 14658: jump @452 if a3 != 0\n      : @451 (gas: 1)\n 14661: jump @344\n      : @452 (gas: 6)\n 14664: a0 = s1 + 0x7ff\n 14668: a0 = a0 + 0x3c1\n 14672: a1 = u64 [s1 + 0xd8]\n 14676: u64 [s1 + 0xe8] = t1\n 14680: u64 [s1 + 0xe0] = t2\n 14684: ra = 386, jump @21\n      : @453 [@dyn 193] (gas: 30)\n 14690: t2 = u64 [s1 + 0xf8]\n 14694: t1 = u64 [s1 + 0xe0]\n 14698: ra = u64 [s1 + 0xe8]\n 14702: a1 = u64 [s1 + 0x90]\n 14706: a0 = a1 + t2\n 14709: a1 = a0 <u a1\n 14712: a4 = u64 [s1 + 0x88]\n 14716: a2 = a4 + t1\n 14719: a2 = a2 + a1\n 14722: a5 = a2 ^ a4\n 14725: a4 = a2 <u a4\n 14728: a4 = a1 if a5 == 0\n 14731: a5 = u64 [s1 + 0x80]\n 14735: a1 = a5 + ra\n 14738: t0 = a1 <u a5\n 14741: a5 = u64 [s1 + 0xf0]\n 14745: a3 = u64 [s1 + 0x78]\n 14748: a5 = a5 + a3\n 14751: a5 = a5 + t0\n 14754: a4 = a4 + a1\n 14757: a1 = a4 <u a1\n 14760: a1 = a1 + a5\n 14763: a1 = a1 | a2\n 14766: a2 = a0 | a4\n 14769: a2 = a2 | a1\n 14772: a1 = a1 | a4\n 14775: a2 = a2 >> 0x20\n 14778: a1 = a1 << 0x20\n 14781: a1 = a1 | a2\n 14784: jump @447 if a1 != 0\n      : @454 (gas: 15)\n 14788: a5 = s1 + 0x7ff\n 14792: a5 = a5 + 0x79\n 14795: t0 = u64 [a5 + 0x360]\n 14799: a3 = a5 + 0x300\n 14803: a1 = u64 [a3 + 0x58]\n 14806: a2 = u64 [a3 + 0x50]\n 14809: a4 = u64 [a3 + 0x48]\n 14812: u64 [a3 + 0x28] = a4\n 14815: u64 [a3 + 0x30] = a2\n 14818: u64 [a3 + 0x38] = a1\n 14821: a1 = s1 + 0x7ff\n 14825: a1 = a1 + 0x3a1\n 14829: u64 [a5 + 0x340] = t0\n 14833: u64 [s1 + 0xf8] = t2\n 14837: ra = 388, jump @19\n      : @455 [@dyn 194] (gas: 39)\n 14843: a3 = u64 [s1 + 0xb8]\n 14847: a3 = a3 + 0x1\n 14850: a0 = a3 <u 0x1\n 14853: ra = u64 [s1 + 0xc0]\n 14857: ra = ra + a0\n 14860: a0 = a3 | ra\n 14863: a0 = a0 <u 0x1\n 14866: a1 = u64 [s1 + 0xd0]\n 14870: t2 = a1 + a0\n 14873: a1 = t2 <u a1\n 14876: a0 = u64 [s1 + 0xc8]\n 14880: a0 = a0 + a1\n 14883: a1 = u64 [s1 + 0xf8]\n 14887: t1 = a1 + 0x20\n 14890: a2 = t1 <u a1\n 14893: a4 = u64 [s1 + 0xe0]\n 14897: a1 = a4 + a2\n 14900: a4 = a1 <u a4\n 14903: a4 = a2 if a2 == 0\n 14906: a2 = u64 [s1 + 0xe8]\n 14910: a4 = a4 + a2\n 14913: a2 = a4 <u a2\n 14916: a5 = u64 [s1 + 0xf0]\n 14920: a5 = a5 + a2\n 14923: u64 [s1 + 0xf0] = a5\n 14927: t0 = ra\n 14929: a5 = u64 [s1 + 0xd8]\n 14933: u64 [a5 + 0x8] = ra\n 14936: a2 = a3\n 14938: u64 [a5] = a3\n 14940: a3 = t2\n 14942: u64 [a5 + 0x10] = a3\n 14945: ra = a0\n 14947: u64 [a5 + 0x18] = a0\n 14950: u64 [s1 + 0xd0] = a3\n 14954: u64 [s1 + 0xf8] = t1\n 14958: t2 = a1\n 14960: t1 = a4\n 14962: jump @450\n      : @456 (gas: 7)\n 14965: a1 = 0x200c0\n 14970: i32 a1 = a1 + 0\n 14972: a0 = 0x1\n 14975: a2 = 0\n 14977: ecalli 7 // 'seal_return'\n 14979: a1 = 0x200c0\n 14984: fallthrough\n      : @457 (gas: 6)\n 14985: i32 a1 = a1 + 0\n 14987: a0 = 0x1\n 14990: a2 = 0\n 14992: ecalli 7 // 'seal_return'\n 14994: a1 = 0x200c0\n 14999: jump @457\n      : @458 (gas: 2)\n 15001: a1 = 0x200c0\n 15006: jump @457\n      : @459 (gas: 2)\n 15008: a1 = 0x200c0\n 15013: jump @457\n      : @460 (gas: 2)\n 15015: a1 = 0x200c0\n 15020: jump @457\n      : @461 (gas: 2)\n 15022: a1 = 0x200c0\n 15027: jump @457\n      : @462 (gas: 6)\n 15029: u64 [s1 + 304] = 0\n 15033: u64 [s1 + 296] = 0\n 15037: u64 [s1 + 288] = 0\n 15041: t0 = 0x186\n 15045: a0 = 0x4e487b7100000000\n 15055: fallthrough\n      : @463 [@dyn 195] (gas: 4)\n 15056: a1 = s1 + 0x120\n 15060: u64 [s1 + 0x138] = a0\n 15064: a0 = 0\n 15066: ra = 392, jump @19\n      : @464 [@dyn 196] (gas: 7)\n 15072: u64 [s1 + 280] = 0\n 15076: u64 [s1 + 272] = 0\n 15080: u64 [s1 + 256] = 0x22\n 15085: a0 = 0x4\n 15088: a1 = s1 + 0x100\n 15092: u64 [s1 + 264] = 0\n 15096: ra = 394, jump @19\n      : @465 [@dyn 197] (gas: 2)\n 15102: a1 = i32 [0x200ac]\n 15107: jump @467 if a1 >u 63\n      : @466 (gas: 3)\n 15111: u32 [0x200ac] = 0x40\n 15117: a1 = 0x200c0\n 15122: jump @531\n      : @467 (gas: 2)\n 15125: a1 = 0x200c0\n 15130: jump @531\n      : @468 (gas: 2)\n 15133: a1 = 0x200c0\n 15138: jump @457\n      : @469 (gas: 2)\n 15141: a1 = 0x200c0\n 15146: jump @457\n      : @470 (gas: 2)\n 15149: a1 = 0x200c0\n 15154: jump @457\n      : @471 (gas: 2)\n 15157: a1 = 0x200c0\n 15162: jump @457\n      : @472 (gas: 8)\n 15165: u64 [s1 + 688] = 0\n 15169: u64 [s1 + 680] = 0\n 15173: u64 [s1 + 672] = 0\n 15177: a0 = 0xe602df0500000000\n 15187: a1 = s1 + 0x2a0\n 15191: u64 [s1 + 0x2b8] = a0\n 15195: a0 = 0\n 15197: ra = 396, jump @19\n      : @473 [@dyn 198] (gas: 7)\n 15203: u64 [s1 + 664] = 0\n 15207: u64 [s1 + 656] = 0\n 15211: u64 [s1 + 648] = 0\n 15215: a0 = 0x4\n 15218: a1 = s1 + 0x280\n 15222: u64 [s1 + 640] = 0\n 15226: ra = 398, jump @19\n      : @474 [@dyn 199] (gas: 2)\n 15232: a1 = i32 [0x200ac]\n 15237: jump @476 if a1 >u 63\n      : @475 (gas: 3)\n 15241: u32 [0x200ac] = 0x40\n 15247: a1 = 0x200c0\n 15252: jump @531\n      : @476 (gas: 2)\n 15255: a1 = 0x200c0\n 15260: jump @531\n      : @477 (gas: 8)\n 15263: u64 [s1 + 752] = 0\n 15267: u64 [s1 + 744] = 0\n 15271: u64 [s1 + 736] = 0\n 15275: a0 = 0x94280d6200000000\n 15285: a1 = s1 + 0x2e0\n 15289: u64 [s1 + 0x2f8] = a0\n 15293: a0 = 0\n 15295: ra = 400, jump @19\n      : @478 [@dyn 200] (gas: 7)\n 15301: u64 [s1 + 728] = 0\n 15305: u64 [s1 + 720] = 0\n 15309: u64 [s1 + 712] = 0\n 15313: a0 = 0x4\n 15316: a1 = s1 + 0x2c0\n 15320: u64 [s1 + 704] = 0\n 15324: ra = 402, jump @19\n      : @479 [@dyn 201] (gas: 2)\n 15330: a1 = i32 [0x200ac]\n 15335: jump @481 if a1 >u 63\n      : @480 (gas: 3)\n 15339: u32 [0x200ac] = 0x40\n 15345: a1 = 0x200c0\n 15350: jump @531\n      : @481 (gas: 2)\n 15353: a1 = 0x200c0\n 15358: jump @531\n      : @482 (gas: 2)\n 15361: a1 = 0x200c0\n 15366: jump @457\n      : @483 (gas: 2)\n 15369: a1 = 0x200c0\n 15374: jump @457\n      : @484 (gas: 11)\n 15377: a2 = s1 + 0x7ff\n 15381: a2 = a2 + 0x79\n 15384: u64 [a2 + 568] = 0\n 15388: u64 [a2 + 560] = 0\n 15392: u64 [a2 + 552] = 0\n 15396: a0 = 0x4e487b7100000000\n 15406: a1 = s1 + 0x7ff\n 15410: a1 = a1 + 0x2a1\n 15414: u64 [a2 + 0x240] = a0\n 15418: a0 = 0\n 15420: ra = 404, jump @19\n      : @485 [@dyn 202] (gas: 11)\n 15426: a1 = s1 + 0x7ff\n 15430: a1 = a1 + 0x79\n 15433: u64 [a1 + 544] = 0\n 15437: u64 [a1 + 536] = 0\n 15441: u64 [a1 + 520] = 0x22\n 15446: a2 = a1\n 15448: a0 = 0x4\n 15451: a1 = s1 + 0x7ff\n 15455: a1 = a1 + 0x281\n 15459: u64 [a2 + 528] = 0\n 15463: ra = 406, jump @19\n      : @486 [@dyn 203] (gas: 2)\n 15469: a1 = i32 [0x200ac]\n 15474: jump @488 if a1 >u 63\n      : @487 (gas: 3)\n 15478: u32 [0x200ac] = 0x40\n 15484: a1 = 0x200c0\n 15489: jump @531\n      : @488 (gas: 2)\n 15492: a1 = 0x200c0\n 15497: jump @531\n      : @489 (gas: 2)\n 15500: a1 = 0x200c0\n 15505: jump @457\n      : @490 (gas: 2)\n 15508: a1 = 0x200c0\n 15513: jump @457\n      : @491 (gas: 8)\n 15516: u64 [s1 + 1296] = 0\n 15520: u64 [s1 + 1288] = 0\n 15524: u64 [s1 + 1280] = 0\n 15528: a0 = 0xec442f0500000000\n 15538: a1 = s1 + 0x500\n 15542: u64 [s1 + 0x518] = a0\n 15546: a0 = 0\n 15548: ra = 408, jump @19\n      : @492 [@dyn 204] (gas: 7)\n 15554: u64 [s1 + 1272] = 0\n 15558: u64 [s1 + 1264] = 0\n 15562: u64 [s1 + 1256] = 0\n 15566: a0 = 0x4\n 15569: a1 = s1 + 0x4e0\n 15573: u64 [s1 + 1248] = 0\n 15577: ra = 410, jump @19\n      : @493 [@dyn 205] (gas: 2)\n 15583: a1 = i32 [0x200ac]\n 15588: jump @495 if a1 >u 63\n      : @494 (gas: 3)\n 15592: u32 [0x200ac] = 0x40\n 15598: a1 = 0x200c0\n 15603: jump @531\n      : @495 (gas: 2)\n 15606: a1 = 0x200c0\n 15611: jump @531\n      : @496 (gas: 6)\n 15614: u64 [s1 + 1360] = 0\n 15618: u64 [s1 + 1352] = 0\n 15622: u64 [s1 + 1344] = 0\n 15626: t0 = 0x19c\n 15630: a0 = 0x4e487b7100000000\n 15640: fallthrough\n      : @497 [@dyn 206] (gas: 4)\n 15641: a1 = s1 + 0x540\n 15645: u64 [s1 + 0x558] = a0\n 15649: a0 = 0\n 15651: ra = 414, jump @19\n      : @498 [@dyn 207] (gas: 7)\n 15657: u64 [s1 + 1336] = 0\n 15661: u64 [s1 + 1328] = 0\n 15665: u64 [s1 + 1312] = 0x11\n 15670: a0 = 0x4\n 15673: a1 = s1 + 0x520\n 15677: u64 [s1 + 1320] = 0\n 15681: ra = 416, jump @19\n      : @499 [@dyn 208] (gas: 2)\n 15687: a1 = i32 [0x200ac]\n 15692: jump @501 if a1 >u 63\n      : @500 (gas: 3)\n 15696: u32 [0x200ac] = 0x40\n 15702: a1 = 0x200c0\n 15707: jump @531\n      : @501 (gas: 2)\n 15710: a1 = 0x200c0\n 15715: jump @531\n      : @502 (gas: 2)\n 15718: a1 = 0x200c0\n 15723: jump @457\n      : @503 (gas: 2)\n 15726: a1 = 0x200c0\n 15731: jump @457\n      : @504 (gas: 2)\n 15734: a1 = 0x200c0\n 15739: jump @457\n      : @505 (gas: 2)\n 15742: a1 = 0x200c0\n 15747: jump @457\n      : @506 (gas: 2)\n 15750: a1 = 0x200c0\n 15755: jump @457\n      : @507 (gas: 2)\n 15758: a1 = 0x200c0\n 15763: jump @457\n      : @508 (gas: 2)\n 15766: a1 = 0x200c0\n 15771: jump @457\n      : @509 (gas: 2)\n 15774: a1 = 0x200c0\n 15779: jump @457\n      : @510 (gas: 8)\n 15782: u64 [s1 + 1936] = 0\n 15786: u64 [s1 + 1928] = 0\n 15790: u64 [s1 + 1920] = 0\n 15794: a0 = 0xfb8f41b200000000\n 15804: a1 = s1 + 0x780\n 15808: u64 [s1 + 0x798] = a0\n 15812: a0 = 0\n 15814: ra = 418, jump @19\n      : @511 [@dyn 209] (gas: 6)\n 15820: a0 = u64 [s1 + 0x80]\n 15824: ra = 0x1a4\n 15828: ecalli 3 // 'caller'\n 15830: a2 = u64 [s1 + 0xb0]\n 15834: t0 = 0x1a6\n 15838: jump @653\n      : @512 [@dyn 210] (gas: 2)\n 15841: a2 = u64 [s1 + 0xb0]\n 15845: t0 = 422, jump @653\n      : @513 [@dyn 211] (gas: 7)\n 15851: u64 [s1 + 1912] = 0\n 15855: u64 [s1 + 0x770] = a1\n 15859: u64 [s1 + 0x768] = a0\n 15863: a0 = 0x4\n 15866: a1 = s1 + 0x760\n 15870: u64 [s1 + 0x760] = a3\n 15874: ra = 424, jump @19\n      : @514 [@dyn 212] (gas: 11)\n 15880: a0 = u64 [s1 + 0x60]\n 15883: u64 [s1 + 0x758] = a0\n 15887: a0 = u64 [s1 + 0x58]\n 15890: u64 [s1 + 0x750] = a0\n 15894: a0 = u64 [s1 + 0x68]\n 15897: u64 [s1 + 0x748] = a0\n 15901: a0 = 0x24\n 15904: a1 = s1 + 0x740\n 15908: a2 = u64 [s1 + 0x70]\n 15911: u64 [s1 + 0x740] = a2\n 15915: ra = 426, jump @19\n      : @515 [@dyn 213] (gas: 12)\n 15921: a0 = u64 [s1 + 0xe8]\n 15925: a3 = s1 + 0x700\n 15929: u64 [a3 + 0x38] = a0\n 15932: a0 = u64 [s1 + 0xd8]\n 15936: u64 [a3 + 0x30] = a0\n 15939: a0 = u64 [s1 + 0xc8]\n 15943: u64 [a3 + 0x28] = a0\n 15946: a0 = 0x44\n 15949: a1 = s1 + 0x720\n 15953: a2 = u64 [s1 + 0xd0]\n 15957: u64 [a3 + 0x20] = a2\n 15960: ra = 428, jump @19\n      : @516 [@dyn 214] (gas: 3)\n 15966: a0 = u64 [s1 + 0xc0]\n 15970: a0 = i32 [a0]\n 15972: jump @518 if a0 >u 127\n      : @517 (gas: 7)\n 15976: a1 = u64 [s1 + 0xc0]\n 15980: u32 [a1 + 0] = 0x80\n 15984: a0 = 0x1\n 15987: a2 = 0x64\n 15990: a1 = u64 [s1 + 0xe0]\n 15994: ecalli 7 // 'seal_return'\n 15996: jump @526\n      : @518 (gas: 5)\n 15999: a0 = 0x1\n 16002: a2 = 0x64\n 16005: a1 = u64 [s1 + 0xe0]\n 16009: ecalli 7 // 'seal_return'\n 16011: jump @526\n      : @519 (gas: 8)\n 16014: u64 [s1 + 2000] = 0\n 16018: u64 [s1 + 1992] = 0\n 16022: u64 [s1 + 1984] = 0\n 16026: a0 = 0xe602df0500000000\n 16036: a1 = s1 + 0x7c0\n 16040: u64 [s1 + 0x7d8] = a0\n 16044: a0 = 0\n 16046: ra = 430, jump @19\n      : @520 [@dyn 215] (gas: 8)\n 16052: u64 [s1 + 1976] = 0\n 16056: u64 [s1 + 1968] = 0\n 16060: u64 [s1 + 1960] = 0\n 16064: a0 = 0x4\n 16067: a1 = s1 + 0x7a0\n 16071: u64 [s1 + 1952] = 0\n 16075: ra = 0x1b2\n 16079: jump @19\n      : @521 (gas: 13)\n 16082: a0 = s1 + 0x1000\n 16086: u64 [a0 + 4294965264] = 0\n 16090: a0 = s1 + 0x1000\n 16094: u64 [a0 + 4294965256] = 0\n 16098: a0 = s1 + 0x1000\n 16102: u64 [a0 + 4294965248] = 0\n 16106: a0 = 0x94280d6200000000\n 16116: a1 = s1 + 0x7ff\n 16120: a1 = a1 + 0x1\n 16123: a2 = s1 + 0x1000\n 16127: u64 [a2 + 0xfffffffffffff818] = a0\n 16131: a0 = 0\n 16133: ra = 432, jump @19\n      : @522 [@dyn 216] (gas: 7)\n 16139: u64 [s1 + 2040] = 0\n 16143: u64 [s1 + 2032] = 0\n 16147: u64 [s1 + 2024] = 0\n 16151: a0 = 0x4\n 16154: a1 = s1 + 0x7e0\n 16158: u64 [s1 + 2016] = 0\n 16162: ra = 434, jump @19\n      : @523 [@dyn 217] (gas: 3)\n 16168: a0 = u64 [s1 + 0xc0]\n 16172: a0 = i32 [a0]\n 16174: jump @525 if a0 >u 63\n      : @524 (gas: 7)\n 16178: a1 = u64 [s1 + 0xc0]\n 16182: u32 [a1 + 0] = 0x40\n 16185: a0 = 0x1\n 16188: a2 = 0x24\n 16191: a1 = u64 [s1 + 0xe0]\n 16195: ecalli 7 // 'seal_return'\n 16197: jump @526\n      : @525 (gas: 5)\n 16199: a0 = 0x1\n 16202: a2 = 0x24\n 16205: a1 = u64 [s1 + 0xe0]\n 16209: ecalli 7 // 'seal_return'\n 16211: fallthrough\n      : @526 (gas: 12)\n 16212: a0 = s1 + 0x7ff\n 16216: a0 = a0 + 0x79\n 16219: u64 [a0 + 632] = 0\n 16223: u64 [a0 + 624] = 0\n 16227: u64 [a0 + 616] = 0\n 16231: a2 = a0\n 16233: a0 = 0x4e487b7100000000\n 16243: a1 = s1 + 0x7ff\n 16247: a1 = a1 + 0x2e1\n 16251: u64 [a2 + 0x280] = a0\n 16255: a0 = 0\n 16257: ra = 436, jump @19\n      : @527 [@dyn 218] (gas: 11)\n 16263: a1 = s1 + 0x7ff\n 16267: a1 = a1 + 0x79\n 16270: u64 [a1 + 608] = 0\n 16274: u64 [a1 + 600] = 0\n 16278: u64 [a1 + 584] = 0x41\n 16283: a2 = a1\n 16285: a0 = 0x4\n 16288: a1 = s1 + 0x7ff\n 16292: a1 = a1 + 0x2c1\n 16296: u64 [a2 + 592] = 0\n 16300: ra = 438, jump @19\n      : @528 [@dyn 219] (gas: 2)\n 16306: a1 = i32 [0x200ac]\n 16311: jump @530 if a1 >u 63\n      : @529 (gas: 3)\n 16315: u32 [0x200ac] = 0x40\n 16321: a1 = 0x200c0\n 16326: jump @531\n      : @530 (gas: 2)\n 16328: a1 = 0x200c0\n 16333: fallthrough\n      : @531 (gas: 7)\n 16334: i32 a1 = a1 + 0\n 16336: a0 = 0x1\n 16339: a2 = 0x24\n 16342: ecalli 7 // 'seal_return'\n 16344: u64 [s1 + 0xf8] = a1\n 16348: ra = 0x1b8\n 16352: jump @26\n      : @532 (gas: 2)\n 16355: u64 [s1 + 0xf8] = a1\n 16359: ra = 440, jump @26\n      : @533 [@dyn 220] (gas: 5)\n 16365: i32 a1 = a0 + 0\n 16367: a2 = i32 [s1 + 0xf8]\n 16371: a0 = 0\n 16373: ecalli 7 // 'seal_return'\n 16375: jump @435\n      : @534 (gas: 17)\n 16378: sp = sp + 0xffffffffffffff30\n 16382: u64 [sp + 0xc8] = ra\n 16386: u64 [sp + 0xc0] = s0\n 16390: u64 [sp + 0xb8] = s1\n 16394: s0 = sp + 0xd0\n 16398: sp = sp & 0xfffffffffffffff0\n 16401: a2 = u64 [a1 + 0x18]\n 16404: u64 [sp + 0x10] = a2\n 16407: a2 = u64 [a1 + 0x10]\n 16410: u64 [sp + 0x8] = a2\n 16413: a2 = u64 [a1 + 0x8]\n 16416: u64 [sp] = a2\n 16418: s1 = u64 [a1]\n 16420: u64 [sp + 0x28] = a0\n 16423: a0 = sp + 0x90\n 16427: a1 = 0x40\n 16430: ra = 442, jump @17\n      : @535 [@dyn 221] (gas: 39)\n 16436: a1 = u64 [sp + 0x98]\n 16440: a2 = u64 [sp + 0x90]\n 16444: a0 = s1 + 0x1f\n 16447: ra = a0 <u s1\n 16450: a3 = u64 [sp]\n 16452: a4 = a3 + ra\n 16455: a0 = a0 & 0xffffffffffffffe0\n 16458: t1 = a1 + a4\n 16461: t0 = a2 + a0\n 16464: u64 [sp + 0x20] = a2\n 16467: a5 = t0 <u a2\n 16470: t1 = t1 + a5\n 16473: s1 = t1 ^ a1\n 16476: u64 [sp + 0x18] = a1\n 16479: a2 = t1 <u a1\n 16482: a2 = a5 if s1 == 0\n 16485: t2 = u64 [sp + 0xa8]\n 16489: a4 = a4 <u a3\n 16492: s1 = u64 [sp + 0xa0]\n 16496: a4 = ra if ra == 0\n 16499: a0 = u64 [sp + 0x8]\n 16502: a4 = a4 + a0\n 16505: a5 = a4 <u a0\n 16508: a4 = a4 + s1\n 16511: a3 = a4 + a2\n 16514: a0 = u64 [sp + 0x10]\n 16517: a0 = a0 + t2\n 16520: a0 = a0 + a5\n 16523: a5 = a3 <u a4\n 16526: a4 = a4 <u s1\n 16529: a0 = a0 + a4\n 16532: a4 = a0 + a5\n 16535: a0 = a4 >u 0\n 16537: a5 = a3 >u 0\n 16539: a5 = a0 if a4 != 0\n 16542: a0 = a3 | a4\n 16545: a1 = t1 >u 0\n 16547: a1 = a5 if a0 != 0\n 16550: jump @539 if a1 != 0\n      : @536 (gas: 8)\n 16553: a0 = a3 <u s1\n 16556: a1 = a4 ^ t2\n 16559: a5 = a4 <u t2\n 16562: a5 = a0 if a1 == 0\n 16565: a0 = a3 ^ s1\n 16568: a0 = a0 | a1\n 16571: a2 = a5 if a0 != 0\n 16574: jump @539 if a2 != 0\n      : @537 (gas: 8)\n 16577: u64 [sp + 0x70] = t0\n 16580: u64 [sp + 0x78] = t1\n 16583: u64 [sp + 0x80] = a3\n 16587: a0 = 0x40\n 16590: a1 = sp + 0x70\n 16593: u64 [sp + 0x88] = a4\n 16597: u64 [sp + 0x10] = t2\n 16600: ra = 444, jump @19\n      : @538 [@dyn 222] (gas: 14)\n 16606: a0 = u64 [sp + 0x28]\n 16609: a1 = u64 [sp + 0x10]\n 16612: u64 [a0 + 0x18] = a1\n 16615: u64 [a0 + 0x10] = s1\n 16618: a1 = u64 [sp + 0x18]\n 16621: u64 [a0 + 0x8] = a1\n 16624: a1 = u64 [sp + 0x20]\n 16627: u64 [a0] = a1\n 16629: sp = s0 + 0xffffffffffffff30\n 16633: ra = u64 [sp + 0xc8]\n 16637: s0 = u64 [sp + 0xc0]\n 16641: s1 = u64 [sp + 0xb8]\n 16645: sp = sp + 0xd0\n 16649: ret\n      : @539 (gas: 6)\n 16651: u64 [sp + 96] = 0\n 16654: u64 [sp + 88] = 0\n 16657: u64 [sp + 80] = 0\n 16660: t0 = 0x1be\n 16664: a0 = 0x4e487b7100000000\n 16674: fallthrough\n      : @540 [@dyn 223] (gas: 4)\n 16675: a1 = sp + 0x50\n 16678: u64 [sp + 0x68] = a0\n 16681: a0 = 0\n 16683: ra = 448, jump @19\n      : @541 [@dyn 224] (gas: 7)\n 16689: u64 [sp + 72] = 0\n 16692: u64 [sp + 64] = 0\n 16695: u64 [sp + 48] = 0x41\n 16699: a0 = 0x4\n 16702: a1 = sp + 0x30\n 16705: u64 [sp + 56] = 0\n 16708: ra = 450, jump @19\n      : @542 [@dyn 225] (gas: 2)\n 16714: a1 = i32 [0x200ac]\n 16719: jump @544 if a1 >u 63\n      : @543 (gas: 2)\n 16723: u32 [0x200ac] = 0x40\n 16729: fallthrough\n      : @544 (gas: 7)\n 16730: a1 = 0x200c0\n 16735: i32 a1 = a1 + 0\n 16737: a0 = 0x1\n 16740: a2 = 0x24\n 16743: ra = 0x1c4\n 16747: ecalli 7 // 'seal_return'\n 16749: fallthrough\n      : @545 [@dyn 226] (gas: 37)\n 16750: sp = sp + 0xfffffffffffffe70\n 16754: u64 [sp + 0x188] = ra\n 16758: u64 [sp + 0x180] = s0\n 16762: u64 [sp + 0x178] = s1\n 16766: s0 = sp + 0x190\n 16770: sp = sp & 0xfffffffffffffff0\n 16773: t2 = u64 [a1]\n 16775: a4 = u64 [a2 + 0x8]\n 16778: ra = u64 [a1 + 0x8]\n 16781: s1 = u64 [a2]\n 16783: a3 = t2 + 0x1f\n 16786: t0 = a3 <u t2\n 16789: a5 = ra + t0\n 16792: u64 [sp + 0x20] = s1\n 16795: t1 = a3 <u s1\n 16798: a3 = a5 ^ a4\n 16801: u64 [sp + 0x28] = a4\n 16804: a4 = a5 <u a4\n 16807: a4 = t1 if a3 == 0\n 16810: s1 = u64 [a1 + 0x10]\n 16813: a3 = a5 <u ra\n 16816: a3 = t0 if t0 == 0\n 16819: a5 = u64 [a2 + 0x18]\n 16822: t0 = u64 [a1 + 0x18]\n 16825: t1 = u64 [a2 + 0x10]\n 16828: a3 = a3 + s1\n 16831: a1 = a3 <u s1\n 16834: a1 = a1 + t0\n 16837: a2 = a1 ^ a5\n 16840: u64 [sp + 0x10] = a5\n 16843: a1 = a1 <s a5\n 16846: a5 = a3 <u t1\n 16849: a1 = a5 if a2 == 0\n 16852: a3 = a3 ^ t1\n 16855: a2 = a2 | a3\n 16858: a4 = a1 if a2 != 0\n 16861: jump @563 if a4 == 0\n      : @546 (gas: 13)\n 16865: u64 [sp + 0x8] = a0\n 16868: u64 [sp + 0x18] = t1\n 16871: a0 = t2 | s1\n 16874: u64 [sp + 0x38] = ra\n 16877: u64 [sp + 0x30] = t0\n 16880: a1 = ra | t0\n 16883: a0 = a0 | a1\n 16886: a0 = a0 >> 0x20\n 16889: u64 [sp + 0x58] = s1\n 16892: a1 = a1 | s1\n 16895: a1 = a1 << 0x20\n 16898: a0 = a0 | a1\n 16901: jump @562 if a0 != 0\n      : @547 (gas: 4)\n 16905: a0 = sp + 0x150\n 16909: u64 [sp + 0x50] = t2\n 16912: a1 = t2\n 16914: ra = 454, jump @17\n      : @548 [@dyn 227] (gas: 12)\n 16920: a3 = u64 [sp + 0x168]\n 16924: a2 = u64 [sp + 0x160]\n 16928: a4 = u64 [sp + 0x158]\n 16932: a0 = a3 >u 0\n 16934: a1 = a2 >u 0\n 16936: a1 = a0 if a3 != 0\n 16939: u64 [sp + 0x80] = a2\n 16943: u64 [sp + 0x88] = a3\n 16947: a0 = a2 | a3\n 16950: a2 = a4 >u 0\n 16952: a2 = a1 if a0 != 0\n 16955: jump @564 if a2 != 0\n      : @549 (gas: 20)\n 16959: a1 = u64 [sp + 0x150]\n 16963: a0 = a1 + 0x1f\n 16966: u64 [sp + 0x48] = a1\n 16969: a1 = a0 <u a1\n 16972: u64 [sp + 0x78] = a4\n 16975: a1 = a1 + a4\n 16978: a1 = a1 & 0x1\n 16981: a0 = a0 & 0xffffffffffffffe0\n 16984: a2 = a0 + 0x20\n 16987: a0 = a2 <u a0\n 16990: a3 = a1 + a0\n 16993: a4 = a3 <u a1\n 16996: a4 = a0 if a0 == 0\n 16999: u64 [sp + 296] = 0\n 17003: u64 [sp + 0x110] = a2\n 17007: u64 [sp + 0x118] = a3\n 17011: a0 = sp + 0x130\n 17015: a1 = sp + 0x110\n 17019: u64 [sp + 0x120] = a4\n 17023: ra = 456, jump @534\n      : @550 [@dyn 228] (gas: 15)\n 17029: a2 = u64 [sp + 0x148]\n 17033: a3 = u64 [sp + 0x140]\n 17037: a1 = u64 [sp + 0x138]\n 17041: a0 = u64 [sp + 0x130]\n 17045: u64 [sp + 0x40] = a1\n 17048: u64 [sp + 0x68] = a2\n 17051: a2 = a2 | a1\n 17054: a1 = a0 | a3\n 17057: a1 = a1 | a2\n 17060: a1 = a1 >> 0x20\n 17063: u64 [sp + 0x70] = a3\n 17066: a2 = a2 | a3\n 17069: a2 = a2 << 0x20\n 17072: a1 = a1 | a2\n 17075: jump @562 if a1 != 0\n      : @551 (gas: 11)\n 17079: s1 = u64 [sp + 0x48]\n 17082: u64 [sp + 0xf0] = s1\n 17086: a1 = u64 [sp + 0x78]\n 17089: u64 [sp + 0xf8] = a1\n 17093: a1 = u64 [sp + 0x80]\n 17097: u64 [sp + 0x100] = a1\n 17101: a1 = sp + 0xf0\n 17105: a2 = u64 [sp + 0x88]\n 17109: u64 [sp + 0x108] = a2\n 17113: u64 [sp + 0x60] = a0\n 17116: ra = 458, jump @19\n      : @552 [@dyn 229] (gas: 45)\n 17122: a0 = u64 [sp + 0x50]\n 17125: a3 = a0 + s1\n 17128: a2 = a3 <u a0\n 17131: t2 = u64 [sp + 0x38]\n 17134: a0 = u64 [sp + 0x78]\n 17137: a0 = a0 + t2\n 17140: a0 = a0 + a2\n 17143: a4 = a0 ^ t2\n 17146: a1 = a0 <u t2\n 17149: a1 = a2 if a4 == 0\n 17152: t1 = u64 [sp + 0x58]\n 17155: a2 = u64 [sp + 0x80]\n 17159: a2 = a2 + t1\n 17162: a5 = a3 + 0x20\n 17165: t0 = a5 <u a3\n 17168: a4 = a0 + t0\n 17171: a3 = u64 [sp + 0x20]\n 17174: a5 = a3 <u a5\n 17177: a3 = u64 [sp + 0x28]\n 17180: s1 = a4 ^ a3\n 17183: a3 = a3 <u a4\n 17186: a5 = a3 if s1 != 0\n 17189: a3 = a2 <u t1\n 17192: t1 = u64 [sp + 0x30]\n 17195: s1 = u64 [sp + 0x88]\n 17199: s1 = s1 + t1\n 17202: a3 = a3 + s1\n 17205: a1 = a1 + a2\n 17208: a2 = a1 <u a2\n 17211: a2 = a2 + a3\n 17214: a0 = a4 <u a0\n 17217: a0 = t0 if t0 == 0\n 17220: a0 = a0 + a1\n 17223: a1 = a0 <u a1\n 17226: a1 = a1 + a2\n 17229: a3 = u64 [sp + 0x10]\n 17232: a2 = a1 ^ a3\n 17235: a1 = a3 <u a1\n 17238: a4 = u64 [sp + 0x18]\n 17241: a3 = a4 <u a0\n 17244: a1 = a3 if a2 == 0\n 17247: a0 = a0 ^ a4\n 17250: a0 = a0 | a2\n 17253: a5 = a1 if a0 != 0\n 17256: jump @570 if a5 != 0\n      : @553 (gas: 10)\n 17260: a0 = u64 [sp + 0x70]\n 17263: a1 = u64 [sp + 0x68]\n 17266: a1 = a1 | a0\n 17269: a0 = 0xffffffe0\n 17279: a4 = u64 [sp + 0x60]\n 17282: a2 = a4 <u a0\n 17285: a3 = u64 [sp + 0x40]\n 17288: a2 = 0 if a3 != 0\n 17290: a2 = 0 if a1 != 0\n 17292: jump @562 if a2 == 0\n      : @554 (gas: 12)\n 17296: a3 = a4\n 17298: a1 = u64 [sp + 0x58]\n 17301: a1 = a1 | t1\n 17304: a5 = u64 [sp + 0x50]\n 17307: a0 = a5 <u a0\n 17310: a0 = 0 if t2 != 0\n 17312: a0 = 0 if a1 != 0\n 17314: ra = u64 [sp + 0x88]\n 17318: a2 = u64 [sp + 0x80]\n 17322: a4 = u64 [sp + 0x78]\n 17325: s1 = u64 [sp + 0x48]\n 17328: jump @562 if a0 == 0\n      : @555 (gas: 8)\n 17332: a0 = s1 | a2\n 17335: a1 = a4 | ra\n 17338: a0 = a0 | a1\n 17341: a0 = a0 >> 0x20\n 17344: a1 = a1 | a2\n 17347: a1 = a1 << 0x20\n 17350: a0 = a0 | a1\n 17353: jump @562 if a0 != 0\n      : @556 (gas: 5)\n 17357: i32 a0 = a3 + 0x20\n 17360: i32 a1 = a5 + 0x20\n 17363: u64 [sp + 0x58] = a1\n 17366: a1 = s1\n 17368: ra = 460, jump @26\n      : @557 [@dyn 230] (gas: 4)\n 17374: u64 [sp + 0x50] = a0\n 17377: a0 = u64 [sp + 0x58]\n 17380: a1 = s1\n 17382: ra = 462, jump @26\n      : @558 [@dyn 231] (gas: 4)\n 17388: a1 = a0\n 17390: a0 = u64 [sp + 0x50]\n 17393: a2 = s1\n 17395: ra = 464, jump @0\n      : @559 [@dyn 232] (gas: 27)\n 17401: a1 = u64 [sp + 0x60]\n 17404: a0 = a1 + s1\n 17407: a1 = a0 <u a1\n 17410: s1 = u64 [sp + 0x40]\n 17413: a2 = u64 [sp + 0x78]\n 17416: a2 = a2 + s1\n 17419: a2 = a2 + a1\n 17422: a3 = a2 ^ s1\n 17425: a4 = a2 <u s1\n 17428: a4 = a1 if a3 == 0\n 17431: a5 = u64 [sp + 0x70]\n 17434: a1 = u64 [sp + 0x80]\n 17438: a1 = a1 + a5\n 17441: a4 = a4 + a1\n 17444: t0 = a4 <u a1\n 17447: a1 = a1 <u a5\n 17450: a5 = u64 [sp + 0x88]\n 17454: a3 = u64 [sp + 0x68]\n 17457: a5 = a5 + a3\n 17460: a1 = a1 + a5\n 17463: a1 = a1 + t0\n 17466: a1 = a1 | a4\n 17469: a3 = 0xffffffe0\n 17479: a3 = a0 <u a3\n 17482: a3 = 0 if a2 != 0\n 17484: a3 = 0 if a1 != 0\n 17486: jump @562 if a3 == 0\n      : @560 (gas: 7)\n 17489: i32 a0 = a0 + 0x20\n 17492: u64 [sp + 232] = 0\n 17496: u64 [sp + 224] = 0\n 17500: u64 [sp + 216] = 0\n 17504: a1 = sp + 0xd0\n 17508: u64 [sp + 208] = 0\n 17512: ra = 466, jump @19\n      : @561 [@dyn 233] (gas: 14)\n 17518: a0 = u64 [sp + 0x8]\n 17521: a1 = u64 [sp + 0x68]\n 17524: u64 [a0 + 0x18] = a1\n 17527: a1 = u64 [sp + 0x70]\n 17530: u64 [a0 + 0x10] = a1\n 17533: u64 [a0 + 0x8] = s1\n 17536: a1 = u64 [sp + 0x60]\n 17539: u64 [a0] = a1\n 17541: sp = s0 + 0xfffffffffffffe70\n 17545: ra = u64 [sp + 0x188]\n 17549: s0 = u64 [sp + 0x180]\n 17553: s1 = u64 [sp + 0x178]\n 17557: sp = sp + 0x190\n 17561: ret\n      : @562 (gas: 1)\n 17563: trap\n      : @563 (gas: 2)\n 17564: a1 = 0x200c0\n 17569: jump @571\n      : @564 (gas: 6)\n 17571: u64 [sp + 192] = 0\n 17575: u64 [sp + 184] = 0\n 17579: u64 [sp + 176] = 0\n 17583: t0 = 0x1d4\n 17587: a0 = 0x4e487b7100000000\n 17597: fallthrough\n      : @565 [@dyn 234] (gas: 4)\n 17598: a1 = sp + 0xb0\n 17602: u64 [sp + 0xc8] = a0\n 17606: a0 = 0\n 17608: ra = 470, jump @19\n      : @566 [@dyn 235] (gas: 7)\n 17614: u64 [sp + 168] = 0\n 17618: u64 [sp + 160] = 0\n 17622: u64 [sp + 144] = 0x41\n 17627: a0 = 0x4\n 17630: a1 = sp + 0x90\n 17634: u64 [sp + 152] = 0\n 17638: ra = 472, jump @19\n      : @567 [@dyn 236] (gas: 2)\n 17644: a1 = i32 [0x200ac]\n 17649: jump @569 if a1 >u 63\n      : @568 (gas: 2)\n 17653: u32 [0x200ac] = 0x40\n 17659: fallthrough\n      : @569 (gas: 7)\n 17660: a1 = 0x200c0\n 17665: i32 a1 = a1 + 0\n 17667: a0 = 0x1\n 17670: a2 = 0x24\n 17673: ecalli 7 // 'seal_return'\n 17675: a1 = 0x200c0\n 17680: jump @571\n      : @570 (gas: 2)\n 17682: a1 = 0x200c0\n 17687: fallthrough\n      : @571 (gas: 6)\n 17688: i32 a1 = a1 + 0\n 17690: a0 = 0x1\n 17693: a2 = 0\n 17695: ra = 0x1da\n 17699: ecalli 7 // 'seal_return'\n 17701: fallthrough\n      : @572 [@dyn 237] (gas: 22)\n 17702: sp = sp + 0xfffffffffffffee0\n 17706: u64 [sp + 0x118] = ra\n 17710: u64 [sp + 0x110] = s0\n 17714: u64 [sp + 0x108] = s1\n 17718: s0 = sp + 0x120\n 17722: sp = sp & 0xfffffffffffffff0\n 17725: a4 = u64 [a1 + 0x10]\n 17728: a3 = u64 [a1 + 0x18]\n 17731: a5 = u64 [a1 + 0x8]\n 17734: t0 = u64 [a1]\n 17736: u64 [sp + 0x68] = a3\n 17739: u64 [sp + 0x78] = a5\n 17742: a1 = a5 | a3\n 17745: a3 = t0 | a4\n 17748: a3 = a3 | a1\n 17751: a3 = a3 >> 0x20\n 17754: u64 [sp + 0x70] = a4\n 17757: a1 = a1 | a4\n 17760: a1 = a1 << 0x20\n 17763: a1 = a1 | a3\n 17766: u64 [sp + 0x8] = a0\n 17769: jump @587 if a1 != 0\n      : @573 (gas: 15)\n 17773: a0 = u64 [a2 + 0x18]\n 17776: u64 [sp + 0x48] = a0\n 17779: s1 = u64 [a2 + 0x10]\n 17782: a0 = u64 [a2 + 0x8]\n 17785: u64 [sp + 0x50] = a0\n 17788: a0 = u64 [a2]\n 17790: u64 [sp + 0x58] = a0\n 17793: u64 [sp + 248] = 0\n 17797: u64 [sp + 240] = 0\n 17801: u64 [sp + 232] = 0\n 17805: a1 = sp + 0xe0\n 17809: u64 [sp + 224] = 0x20\n 17814: a0 = t0\n 17816: u64 [sp + 0x60] = t0\n 17819: ra = 476, jump @19\n      : @574 [@dyn 238] (gas: 12)\n 17825: a1 = u64 [sp + 0x58]\n 17828: a0 = a1 | s1\n 17831: a2 = u64 [sp + 0x48]\n 17834: a3 = u64 [sp + 0x50]\n 17837: a2 = a2 | a3\n 17840: a0 = a0 | a2\n 17843: a0 = a0 >> 0x20\n 17846: u64 [sp + 0x20] = s1\n 17849: a2 = a2 | s1\n 17852: a2 = a2 << 0x20\n 17855: a0 = a0 | a2\n 17858: jump @587 if a0 != 0\n      : @575 (gas: 2)\n 17862: a0 = sp + 0xc0\n 17866: ra = 478, jump @17\n      : @576 [@dyn 239] (gas: 13)\n 17872: a0 = u64 [sp + 0x70]\n 17875: a1 = u64 [sp + 0x68]\n 17878: a1 = a1 | a0\n 17881: a0 = 0x100000000\n 17891: u64 [sp + 0x10] = a0\n 17894: a0 = 0xffffffe0\n 17904: a2 = u64 [sp + 0x60]\n 17907: a0 = a2 <u a0\n 17910: a3 = u64 [sp + 0x78]\n 17913: a0 = 0 if a3 != 0\n 17915: u64 [sp + 0x18] = a1\n 17918: a0 = 0 if a1 != 0\n 17920: jump @587 if a0 == 0\n      : @577 (gas: 16)\n 17924: a3 = u64 [sp + 0xd8]\n 17928: a4 = u64 [sp + 0xd0]\n 17932: a5 = u64 [sp + 0xc8]\n 17936: a1 = u64 [sp + 0xc0]\n 17940: i32 a0 = a2 + 0x20\n 17943: u64 [sp + 0x28] = a1\n 17946: u64 [sp + 0xa0] = a1\n 17950: u64 [sp + 0x30] = a5\n 17953: u64 [sp + 0xa8] = a5\n 17957: u64 [sp + 0x38] = a4\n 17960: u64 [sp + 0xb0] = a4\n 17964: a1 = sp + 0xa0\n 17968: u64 [sp + 0x40] = a3\n 17971: u64 [sp + 0xb8] = a3\n 17975: s1 = a2\n 17977: ra = 480, jump @19\n      : @578 [@dyn 240] (gas: 8)\n 17983: a0 = u64 [sp + 0x10]\n 17986: a0 = a0 + 0xffffffffffffffc0\n 17989: a0 = s1 <u a0\n 17992: a1 = u64 [sp + 0x78]\n 17995: a0 = 0 if a1 != 0\n 17997: a1 = u64 [sp + 0x18]\n 18000: a0 = 0 if a1 != 0\n 18002: jump @587 if a0 == 0\n      : @579 (gas: 10)\n 18006: a0 = u64 [sp + 0x48]\n 18009: a1 = u64 [sp + 0x20]\n 18012: a0 = a0 | a1\n 18015: a1 = 0xffffffe0\n 18025: a3 = u64 [sp + 0x58]\n 18028: a1 = a3 <u a1\n 18031: a4 = u64 [sp + 0x50]\n 18034: a1 = 0 if a4 != 0\n 18036: a1 = 0 if a0 != 0\n 18038: jump @587 if a1 == 0\n      : @580 (gas: 13)\n 18042: a2 = s1\n 18044: a1 = u64 [sp + 0x28]\n 18047: a5 = u64 [sp + 0x38]\n 18050: a0 = a1 | a5\n 18053: a4 = u64 [sp + 0x40]\n 18056: s1 = u64 [sp + 0x30]\n 18059: a4 = a4 | s1\n 18062: a0 = a0 | a4\n 18065: a0 = a0 >> 0x20\n 18068: a4 = a4 | a5\n 18071: a4 = a4 << 0x20\n 18074: a0 = a0 | a4\n 18077: jump @587 if a0 != 0\n      : @581 (gas: 5)\n 18081: i32 a0 = a2 + 0x40\n 18084: i32 a3 = a3 + 0x20\n 18087: u64 [sp + 0x58] = a3\n 18090: s1 = a1\n 18092: ra = 482, jump @26\n      : @582 [@dyn 241] (gas: 4)\n 18098: u64 [sp + 0x50] = a0\n 18101: a0 = u64 [sp + 0x58]\n 18104: a1 = s1\n 18106: ra = 484, jump @26\n      : @583 [@dyn 242] (gas: 4)\n 18112: a1 = a0\n 18114: a0 = u64 [sp + 0x50]\n 18117: a2 = s1\n 18119: ra = 486, jump @0\n      : @584 [@dyn 243] (gas: 27)\n 18125: a0 = u64 [sp + 0x60]\n 18128: a0 = a0 + s1\n 18131: a1 = a0 <u s1\n 18134: a2 = u64 [sp + 0x78]\n 18137: a4 = u64 [sp + 0x30]\n 18140: a2 = a2 + a4\n 18143: a2 = a2 + a1\n 18146: a3 = a2 ^ a4\n 18149: a4 = a2 <u a4\n 18152: a4 = a1 if a3 == 0\n 18155: a1 = u64 [sp + 0x70]\n 18158: a3 = u64 [sp + 0x38]\n 18161: a1 = a1 + a3\n 18164: a3 = a1 <u a3\n 18167: a5 = u64 [sp + 0x68]\n 18170: s1 = u64 [sp + 0x40]\n 18173: a5 = a5 + s1\n 18176: a3 = a3 + a5\n 18179: a4 = a4 + a1\n 18182: a1 = a4 <u a1\n 18185: a1 = a1 + a3\n 18188: a1 = a1 | a4\n 18191: a3 = 0xffffffc0\n 18201: a3 = a0 <u a3\n 18204: a3 = 0 if a2 != 0\n 18206: a3 = 0 if a1 != 0\n 18208: jump @587 if a3 == 0\n      : @585 (gas: 7)\n 18212: i32 a0 = a0 + 0x40\n 18215: u64 [sp + 152] = 0\n 18219: u64 [sp + 144] = 0\n 18223: u64 [sp + 136] = 0\n 18227: a1 = sp + 0x80\n 18231: u64 [sp + 128] = 0\n 18235: ra = 488, jump @19\n      : @586 [@dyn 244] (gas: 35)\n 18241: s1 = u64 [sp + 0x28]\n 18244: s1 = s1 + 0x1f\n 18247: a0 = 0x1ffffffe0\n 18257: a0 = a0 & s1\n 18260: a1 = u64 [sp + 0x60]\n 18263: a0 = a0 + a1\n 18266: a1 = a0 <u a1\n 18269: a3 = u64 [sp + 0x78]\n 18272: a2 = a3 + a1\n 18275: a3 = a2 <u a3\n 18278: a3 = a1 if a1 == 0\n 18281: a1 = u64 [sp + 0x70]\n 18284: a3 = a3 + a1\n 18287: a1 = a3 <u a1\n 18290: a4 = u64 [sp + 0x68]\n 18293: a1 = a1 + a4\n 18296: a4 = a0 + 0x40\n 18299: a0 = a4 <u a0\n 18302: a5 = a2 + a0\n 18305: a2 = a5 <u a2\n 18308: a2 = a0 if a0 == 0\n 18311: a2 = a2 + a3\n 18314: a0 = a2 <u a3\n 18317: a0 = a0 + a1\n 18320: a1 = u64 [sp + 0x8]\n 18323: u64 [a1] = a4\n 18325: u64 [a1 + 0x8] = a5\n 18328: u64 [a1 + 0x10] = a2\n 18331: u64 [a1 + 0x18] = a0\n 18334: sp = s0 + 0xfffffffffffffee0\n 18338: ra = u64 [sp + 0x118]\n 18342: s0 = u64 [sp + 0x110]\n 18346: s1 = u64 [sp + 0x108]\n 18350: sp = sp + 0x120\n 18354: ret\n      : @587 (gas: 1)\n 18356: trap\n      : @588 [@dyn 245] (gas: 5)\n 18357: a1 = 0x4\n 18360: ra = 0x1ec\n 18364: ecalli 1 // 'call_data_load'\n 18366: t0 = 0x1ee\n 18370: jump @659\n      : @589 [@dyn 246] (gas: 1)\n 18373: t0 = 494, jump @659\n      : @590 [@dyn 247] (gas: 1)\n 18379: jump @593 if a3 == 0\n      : @591 (gas: 1)\n 18382: t0 = 496, jump @664\n      : @592 [@dyn 248] (gas: 1)\n 18388: ret\n      : @593 (gas: 8)\n 18390: a1 = 0x200c0\n 18395: i32 a1 = a1 + 0\n 18397: a0 = 0x1\n 18400: a2 = 0\n 18402: ra = 0x1f2\n 18406: ecalli 7 // 'seal_return'\n 18408: t0 = 0x1f4\n 18412: jump @670\n      : @594 [@dyn 249] (gas: 1)\n 18415: t0 = 500, jump @670\n      : @595 [@dyn 250] (gas: 5)\n 18421: a1 = 0x24\n 18424: ra = 0x1f6\n 18428: ecalli 1 // 'call_data_load'\n 18430: t0 = 0x1f8\n 18434: jump @659\n      : @596 [@dyn 251] (gas: 1)\n 18437: t0 = 504, jump @659\n      : @597 [@dyn 252] (gas: 1)\n 18443: jump @600 if a3 == 0\n      : @598 (gas: 1)\n 18446: t0 = 506, jump @664\n      : @599 [@dyn 253] (gas: 1)\n 18452: ret\n      : @600 (gas: 7)\n 18454: a1 = 0x200c0\n 18459: i32 a1 = a1 + 0\n 18461: a0 = 0x1\n 18464: a2 = 0\n 18466: ra = 0x1fc\n 18470: ecalli 7 // 'seal_return'\n 18472: fallthrough\n      : @601 [@dyn 254] (gas: 14)\n 18473: sp = sp + 0xfffffffffffffc20\n 18477: a3 = sp + 0x300\n 18481: u64 [a3 + 0xd8] = ra\n 18485: u64 [a3 + 0xd0] = s0\n 18489: u64 [a3 + 0xc8] = s1\n 18493: s0 = sp + 0x3e0\n 18497: sp = sp & 0xffffffffffffffe0\n 18500: s1 = sp\n 18502: t2 = u32 [a0 + 0x10]\n 18505: a3 = u64 [a0]\n 18507: a4 = u64 [a0 + 0x8]\n 18510: a0 = a3 | t2\n 18513: a0 = a0 | a4\n 18516: jump @633 if a0 == 0\n      : @602 (gas: 13)\n 18520: t0 = u64 [a1 + 0x10]\n 18523: t1 = u64 [a1 + 0x8]\n 18526: ra = u64 [a1]\n 18528: a5 = 0xffffffff\n 18538: a1 = t1 & 0xffffffffffffffff\n 18541: a0 = ra & 0xffffffffffffffff\n 18544: a5 = t0 & a5\n 18547: u64 [s1 + 0x48] = a0\n 18550: u64 [s1 + 0x38] = a5\n 18553: a0 = a0 | a5\n 18556: u64 [s1 + 0x40] = a1\n 18559: a0 = a0 | a1\n 18562: jump @638 if a0 == 0\n      : @603 (gas: 18)\n 18566: a0 = u64 [a2 + 0x18]\n 18569: u64 [s1 + 0x98] = a0\n 18573: a0 = u64 [a2 + 0x10]\n 18576: u64 [s1 + 0x88] = a0\n 18580: a0 = u64 [a2 + 0x8]\n 18583: u64 [s1 + 0x80] = a0\n 18587: a0 = u64 [a2]\n 18589: u64 [s1 + 0x90] = a0\n 18593: u64 [s1 + 824] = 0\n 18597: u64 [s1 + 0x60] = a3\n 18600: u64 [s1 + 0x320] = a3\n 18604: u64 [s1 + 0x58] = a4\n 18607: u64 [s1 + 0x328] = a4\n 18611: a1 = s1 + 0x320\n 18615: u64 [s1 + 0x50] = t2\n 18618: u64 [s1 + 0x330] = t2\n 18622: a0 = 0\n 18624: ra = 510, jump @19\n      : @604 [@dyn 255] (gas: 7)\n 18630: u64 [s1 + 792] = 0\n 18634: u64 [s1 + 784] = 0\n 18638: u64 [s1 + 776] = 0\n 18642: a0 = 0x20\n 18645: a1 = s1 + 0x300\n 18649: u64 [s1 + 768] = 0\n 18653: ra = 512, jump @19\n      : @605 [@dyn 256] (gas: 3)\n 18659: a2 = 0x200ac\n 18664: a0 = i32 [0x200ac]\n 18669: jump @607 if a0 >u 63\n      : @606 (gas: 2)\n 18673: u32 [0x200ac] = 0x40\n 18679: fallthrough\n      : @607 (gas: 15)\n 18680: u64 [s1 + 0x70] = a2\n 18683: a0 = sp + 0xffffffffffffffe0\n 18686: a2 = a0 & 0xffffffffffffffe0\n 18689: u64 [s1 + 0x68] = a2\n 18692: sp = a2\n 18694: a0 = 0x200c0\n 18699: i32 a0 = a0 + 0\n 18701: i32 a2 = a2 + 0\n 18703: a1 = 0x40\n 18706: u64 [s1 + 0x78] = a0\n 18709: ra = 0x202\n 18713: ecalli 6 // 'hash_keccak_256'\n 18715: a3 = u64 [s1 + 0x68]\n 18718: t0 = 0x204\n 18722: jump @661\n      : @608 [@dyn 257] (gas: 2)\n 18725: a3 = u64 [s1 + 0x68]\n 18728: t0 = 516, jump @661\n      : @609 [@dyn 258] (gas: 7)\n 18734: u64 [a4 + 0x58] = a3\n 18737: u64 [a4 + 0x50] = a2\n 18740: u64 [a4 + 0x48] = a1\n 18743: u64 [a4 + 0x40] = a0\n 18746: a0 = s1 + 0x2e0\n 18750: a1 = s1 + 0x340\n 18754: ra = 518, jump @21\n      : @610 [@dyn 259] (gas: 28)\n 18760: a1 = s1 + 0x200\n 18764: a2 = u64 [a1 + 0xf8]\n 18768: a0 = u64 [a1 + 0xf0]\n 18772: a5 = u64 [a1 + 0xe8]\n 18776: a4 = u64 [a1 + 0xe0]\n 18780: a1 = u64 [s1 + 0x98]\n 18784: t1 = a2 ^ a1\n 18787: u64 [s1 + 0x28] = a2\n 18790: a1 = a2 <u a1\n 18793: a2 = u64 [s1 + 0x88]\n 18797: a3 = a0 <u a2\n 18800: u64 [s1 + 0x10] = a3\n 18803: a1 = a3 if t1 == 0\n 18806: a3 = u64 [s1 + 0x80]\n 18810: t0 = a5 ^ a3\n 18813: u64 [s1 + 0x30] = a5\n 18816: a5 = a5 <u a3\n 18819: a3 = u64 [s1 + 0x90]\n 18823: u64 [s1 + 0x68] = a4\n 18826: a3 = a4 <u a3\n 18829: u64 [s1 + 0x18] = a3\n 18832: a5 = a3 if t0 == 0\n 18835: u64 [s1 + 0x20] = a0\n 18838: a2 = a2 ^ a0\n 18841: a0 = a2 | t1\n 18844: u64 [s1 + 0x8] = a5\n 18847: a1 = a5 if a0 == 0\n 18850: jump @644 if a1 != 0\n      : @611 (gas: 11)\n 18854: u64 [s1 + 728] = 0\n 18858: a0 = u64 [s1 + 0x60]\n 18861: a2 = s1 + 0x200\n 18865: u64 [a2 + 0xc0] = a0\n 18869: a0 = u64 [s1 + 0x58]\n 18872: u64 [a2 + 0xc8] = a0\n 18876: a1 = s1 + 0x2c0\n 18880: a0 = u64 [s1 + 0x50]\n 18883: u64 [a2 + 0xd0] = a0\n 18887: a0 = 0\n 18889: ra = 520, jump @19\n      : @612 [@dyn 260] (gas: 7)\n 18895: u64 [s1 + 696] = 0\n 18899: u64 [s1 + 688] = 0\n 18903: u64 [s1 + 680] = 0\n 18907: a0 = 0x20\n 18910: a1 = s1 + 0x2a0\n 18914: u64 [s1 + 672] = 0\n 18918: ra = 522, jump @19\n      : @613 [@dyn 261] (gas: 27)\n 18924: a0 = u64 [s1 + 0x88]\n 18928: a1 = u64 [s1 + 0x20]\n 18931: a0 = a1 - a0\n 18934: a2 = u64 [s1 + 0x8]\n 18937: a1 = a0 - a2\n 18940: u64 [s1 + 0x20] = a1\n 18943: a0 = a0 <u a2\n 18946: a1 = u64 [s1 + 0x98]\n 18950: a2 = u64 [s1 + 0x28]\n 18953: a1 = a2 - a1\n 18956: a2 = u64 [s1 + 0x10]\n 18959: a1 = a1 - a2\n 18962: a1 = a1 - a0\n 18965: u64 [s1 + 0x28] = a1\n 18968: a2 = u64 [s1 + 0x70]\n 18971: a0 = i32 [a2]\n 18973: a1 = u64 [s1 + 0x80]\n 18977: a3 = u64 [s1 + 0x30]\n 18980: a1 = a3 - a1\n 18983: a3 = u64 [s1 + 0x18]\n 18986: a1 = a1 - a3\n 18989: u64 [s1 + 0x30] = a1\n 18992: a1 = u64 [s1 + 0x90]\n 18996: a3 = u64 [s1 + 0x68]\n 18999: a3 = a3 - a1\n 19002: u64 [s1 + 0x68] = a3\n 19005: jump @615 if a0 >u 63\n      : @614 (gas: 2)\n 19009: u32 [a2 + 0] = 0x40\n 19012: fallthrough\n      : @615 (gas: 12)\n 19013: a0 = sp + 0xffffffffffffffe0\n 19016: a0 = a0 & 0xffffffffffffffe0\n 19019: u64 [s1 + 0x18] = a0\n 19022: sp = a0\n 19024: i32 a2 = a0 + 0\n 19026: a1 = 0x40\n 19029: a0 = u64 [s1 + 0x78]\n 19032: ra = 0x20c\n 19036: ecalli 6 // 'hash_keccak_256'\n 19038: a3 = u64 [s1 + 0x18]\n 19041: t0 = 0x20e\n 19045: jump @661\n      : @616 [@dyn 262] (gas: 2)\n 19048: a3 = u64 [s1 + 0x18]\n 19051: t0 = 526, jump @661\n      : @617 [@dyn 263] (gas: 15)\n 19057: u64 [a4 + 0x78] = a3\n 19060: u64 [a4 + 0x70] = a2\n 19063: u64 [a4 + 0x68] = a1\n 19066: u64 [a4 + 0x60] = a0\n 19069: a0 = u64 [s1 + 0x28]\n 19072: u64 [a4 + 0x98] = a0\n 19076: a0 = u64 [s1 + 0x20]\n 19079: u64 [a4 + 0x90] = a0\n 19083: a0 = u64 [s1 + 0x30]\n 19086: u64 [a4 + 0x88] = a0\n 19090: a0 = u64 [s1 + 0x68]\n 19093: u64 [a4 + 0x80] = a0\n 19097: a0 = s1 + 0x360\n 19101: a1 = s1 + 0x380\n 19105: ra = 528, jump @22\n      : @618 [@dyn 264] (gas: 11)\n 19111: u64 [s1 + 664] = 0\n 19115: a0 = u64 [s1 + 0x38]\n 19118: a2 = s1 + 0x200\n 19122: u64 [a2 + 0x90] = a0\n 19126: a0 = u64 [s1 + 0x40]\n 19129: u64 [a2 + 0x88] = a0\n 19133: a1 = s1 + 0x280\n 19137: a0 = u64 [s1 + 0x48]\n 19140: u64 [a2 + 0x80] = a0\n 19144: a0 = 0\n 19146: ra = 530, jump @19\n      : @619 [@dyn 265] (gas: 7)\n 19152: u64 [s1 + 632] = 0\n 19156: u64 [s1 + 624] = 0\n 19160: u64 [s1 + 616] = 0\n 19164: a0 = 0x20\n 19167: a1 = s1 + 0x260\n 19171: u64 [s1 + 608] = 0\n 19175: ra = 532, jump @19\n      : @620 [@dyn 266] (gas: 7)\n 19181: a1 = u64 [s1 + 0x70]\n 19184: a0 = sp + 0xffffffffffffffe0\n 19187: a0 = a0 & 0xffffffffffffffe0\n 19190: u64 [s1 + 0x68] = a0\n 19193: sp = a0\n 19195: a0 = i32 [a1]\n 19197: jump @622 if a0 >u 63\n      : @621 (gas: 2)\n 19201: u32 [a1 + 0] = 0x40\n 19204: fallthrough\n      : @622 (gas: 12)\n 19205: a0 = sp + 0xffffffffffffffe0\n 19208: a0 = a0 & 0xffffffffffffffe0\n 19211: u64 [s1 + 0x70] = a0\n 19214: sp = a0\n 19216: i32 a2 = a0 + 0\n 19218: a1 = 0x40\n 19221: a0 = u64 [s1 + 0x78]\n 19224: ra = 0x216\n 19228: ecalli 6 // 'hash_keccak_256'\n 19230: a3 = u64 [s1 + 0x70]\n 19233: t0 = 0x218\n 19237: jump @655\n      : @623 [@dyn 267] (gas: 2)\n 19240: a3 = u64 [s1 + 0x70]\n 19243: t0 = 536, jump @655\n      : @624 [@dyn 268] (gas: 7)\n 19249: a1 = u64 [s1 + 0x68]\n 19252: u64 [a1 + 0x18] = a3\n 19255: u64 [a1 + 0x10] = a2\n 19258: u64 [a1 + 0x8] = a4\n 19261: u64 [a1] = a0\n 19263: a0 = s1 + 0x240\n 19267: ra = 538, jump @21\n      : @625 [@dyn 269] (gas: 30)\n 19273: a0 = u64 [s1 + 0x248]\n 19277: a1 = u64 [s1 + 0x240]\n 19281: t0 = u64 [s1 + 0x258]\n 19285: a3 = u64 [s1 + 0x250]\n 19289: a4 = u64 [s1 + 0x80]\n 19293: a4 = a4 + a0\n 19296: a5 = u64 [s1 + 0x90]\n 19300: a5 = a5 + a1\n 19303: a1 = a5 <u a1\n 19306: a4 = a4 + a1\n 19309: a2 = a4 ^ a0\n 19312: a0 = a4 <u a0\n 19315: a0 = a1 if a2 == 0\n 19318: a1 = u64 [s1 + 0x88]\n 19322: a1 = a1 + a3\n 19325: a2 = u64 [s1 + 0x98]\n 19329: t0 = t0 + a2\n 19332: a2 = a1 <u a3\n 19335: a2 = a2 + t0\n 19338: a0 = a0 + a1\n 19341: a1 = a0 <u a1\n 19344: a1 = a1 + a2\n 19347: a2 = s1 + 0x300\n 19351: u64 [a2 + 0xa0] = a5\n 19355: u64 [a2 + 0xa8] = a4\n 19359: u64 [a2 + 0xb0] = a0\n 19363: u64 [a2 + 0xb8] = a1\n 19367: a1 = s1 + 0x3a0\n 19371: a0 = u64 [s1 + 0x68]\n 19374: ra = 540, jump @22\n      : @626 [@dyn 270] (gas: 3)\n 19380: a0 = s1 + 0x220\n 19384: a1 = 0x40\n 19387: ra = 542, jump @17\n      : @627 [@dyn 271] (gas: 6)\n 19393: a4 = s1 + 0x200\n 19397: a3 = u64 [a4 + 0x38]\n 19400: a1 = u64 [a4 + 0x30]\n 19403: a2 = u64 [a4 + 0x28]\n 19406: a0 = u64 [a4 + 0x20]\n 19409: t0 = 544, jump @658\n      : @628 [@dyn 272] (gas: 1)\n 19415: jump @632 if a1 != 0\n      : @629 (gas: 12)\n 19419: a1 = u64 [s1 + 0x90]\n 19423: a3 = s1 + 0x200\n 19427: u64 [a3] = a1\n 19429: a1 = u64 [s1 + 0x80]\n 19433: u64 [a3 + 0x8] = a1\n 19436: a1 = u64 [s1 + 0x88]\n 19440: u64 [a3 + 0x10] = a1\n 19443: a1 = s1 + 0x200\n 19447: a2 = u64 [s1 + 0x98]\n 19451: u64 [a3 + 0x18] = a2\n 19454: u64 [s1 + 0x98] = a0\n 19458: ra = 546, jump @19\n      : @630 [@dyn 273] (gas: 29)\n 19464: u64 [s1 + 440] = 0\n 19468: a0 = u64 [s1 + 0x38]\n 19471: a5 = s1 + 0x100\n 19475: u64 [a5 + 0xb0] = a0\n 19479: a0 = u64 [s1 + 0x40]\n 19482: u64 [a5 + 0xa8] = a0\n 19486: a0 = u64 [s1 + 0x48]\n 19489: u64 [a5 + 0xa0] = a0\n 19493: u64 [s1 + 472] = 0\n 19497: a0 = u64 [s1 + 0x50]\n 19500: u64 [a5 + 0xd0] = a0\n 19504: a0 = u64 [s1 + 0x58]\n 19507: u64 [a5 + 0xc8] = a0\n 19511: a0 = u64 [0x20088]\n 19516: a1 = u64 [0x20090]\n 19521: a2 = u64 [0x20098]\n 19526: a3 = u64 [s1 + 0x60]\n 19529: u64 [a5 + 0xc0] = a3\n 19533: u64 [a5 + 0xf8] = a0\n 19537: u64 [a5 + 0xf0] = a1\n 19541: u64 [a5 + 0xe8] = a2\n 19545: a0 = u64 [0x200a0]\n 19550: a1 = 0x20\n 19553: a2 = s1 + 0x1e0\n 19557: a3 = s1 + 0x1c0\n 19561: a4 = s1 + 0x1a0\n 19565: u64 [a5 + 0xe0] = a0\n 19569: a0 = u64 [s1 + 0x98]\n 19573: ra = 548, jump @23\n      : @631 [@dyn 274] (gas: 7)\n 19579: sp = s0 + 0xfffffffffffffc20\n 19583: a0 = sp + 0x300\n 19587: ra = u64 [a0 + 0xd8]\n 19591: s0 = u64 [a0 + 0xd0]\n 19595: s1 = u64 [a0 + 0xc8]\n 19599: sp = sp + 0x3e0\n 19603: ret\n      : @632 (gas: 1)\n 19605: trap\n      : @633 (gas: 8)\n 19606: u64 [s1 + 208] = 0\n 19610: u64 [s1 + 200] = 0\n 19614: u64 [s1 + 192] = 0\n 19618: a0 = 0x96c6fd1e00000000\n 19628: a1 = s1 + 0xc0\n 19632: u64 [s1 + 0xd8] = a0\n 19636: a0 = 0\n 19638: ra = 550, jump @19\n      : @634 [@dyn 275] (gas: 7)\n 19644: u64 [s1 + 184] = 0\n 19648: u64 [s1 + 176] = 0\n 19652: u64 [s1 + 168] = 0\n 19656: a0 = 0x4\n 19659: a1 = s1 + 0xa0\n 19663: u64 [s1 + 160] = 0\n 19667: ra = 552, jump @19\n      : @635 [@dyn 276] (gas: 2)\n 19673: a1 = i32 [0x200ac]\n 19678: jump @637 if a1 >u 63\n      : @636 (gas: 3)\n 19682: u32 [0x200ac] = 0x40\n 19688: a1 = 0x200c0\n 19693: jump @643\n      : @637 (gas: 2)\n 19695: a1 = 0x200c0\n 19700: jump @643\n      : @638 (gas: 8)\n 19702: u64 [s1 + 272] = 0\n 19706: u64 [s1 + 264] = 0\n 19710: u64 [s1 + 256] = 0\n 19714: a0 = 0xec442f0500000000\n 19724: a1 = s1 + 0x100\n 19728: u64 [s1 + 0x118] = a0\n 19732: a0 = 0\n 19734: ra = 554, jump @19\n      : @639 [@dyn 277] (gas: 7)\n 19740: u64 [s1 + 248] = 0\n 19744: u64 [s1 + 240] = 0\n 19748: u64 [s1 + 232] = 0\n 19752: a0 = 0x4\n 19755: a1 = s1 + 0xe0\n 19759: u64 [s1 + 224] = 0\n 19763: ra = 556, jump @19\n      : @640 [@dyn 278] (gas: 2)\n 19769: a1 = i32 [0x200ac]\n 19774: jump @642 if a1 >u 63\n      : @641 (gas: 3)\n 19778: u32 [0x200ac] = 0x40\n 19784: a1 = 0x200c0\n 19789: jump @643\n      : @642 (gas: 2)\n 19791: a1 = 0x200c0\n 19796: fallthrough\n      : @643 (gas: 5)\n 19797: i32 a1 = a1 + 0\n 19799: a0 = 0x1\n 19802: a2 = 0x24\n 19805: ecalli 7 // 'seal_return'\n 19807: fallthrough\n      : @644 (gas: 8)\n 19808: u64 [s1 + 400] = 0\n 19812: u64 [s1 + 392] = 0\n 19816: u64 [s1 + 384] = 0\n 19820: a0 = 0xe450d38c00000000\n 19830: a1 = s1 + 0x180\n 19834: u64 [s1 + 0x198] = a0\n 19838: a0 = 0\n 19840: ra = 558, jump @19\n      : @645 [@dyn 279] (gas: 10)\n 19846: u64 [s1 + 376] = 0\n 19850: a0 = u64 [s1 + 0x50]\n 19853: u64 [s1 + 0x170] = a0\n 19857: a0 = u64 [s1 + 0x58]\n 19860: u64 [s1 + 0x168] = a0\n 19864: a0 = 0x4\n 19867: a1 = s1 + 0x160\n 19871: a2 = u64 [s1 + 0x60]\n 19874: u64 [s1 + 0x160] = a2\n 19878: ra = 560, jump @19\n      : @646 [@dyn 280] (gas: 11)\n 19884: a0 = u64 [s1 + 0x28]\n 19887: u64 [s1 + 0x158] = a0\n 19891: a0 = u64 [s1 + 0x20]\n 19894: u64 [s1 + 0x150] = a0\n 19898: a0 = u64 [s1 + 0x30]\n 19901: u64 [s1 + 0x148] = a0\n 19905: a0 = 0x24\n 19908: a1 = s1 + 0x140\n 19912: a2 = u64 [s1 + 0x68]\n 19915: u64 [s1 + 0x140] = a2\n 19919: ra = 562, jump @19\n      : @647 [@dyn 281] (gas: 12)\n 19925: a0 = u64 [s1 + 0x98]\n 19929: a3 = s1 + 0x100\n 19933: u64 [a3 + 0x38] = a0\n 19936: a0 = u64 [s1 + 0x88]\n 19940: u64 [a3 + 0x30] = a0\n 19943: a0 = u64 [s1 + 0x80]\n 19947: u64 [a3 + 0x28] = a0\n 19950: a0 = 0x44\n 19953: a1 = s1 + 0x120\n 19957: a2 = u64 [s1 + 0x90]\n 19961: u64 [a3 + 0x20] = a2\n 19964: ra = 564, jump @19\n      : @648 [@dyn 282] (gas: 3)\n 19970: a0 = u64 [s1 + 0x70]\n 19973: a0 = i32 [a0]\n 19975: jump @650 if a0 >u 127\n      : @649 (gas: 3)\n 19979: a1 = u64 [s1 + 0x70]\n 19982: u32 [a1 + 0] = 0x80\n 19986: fallthrough\n      : @650 (gas: 7)\n 19987: a0 = 0x1\n 19990: a2 = 0x64\n 19993: a1 = u64 [s1 + 0x78]\n 19996: ecalli 7 // 'seal_return'\n 19998: a0 = 0\n 20000: ra = 0x236\n 20004: jump @32\n      : @651 [export #0: 'call'] (gas: 2)\n 20007: a0 = 0\n 20009: ra = 566, jump @32\n      : @652 [@dyn 283] [export #1: 'deploy'] (gas: 2)\n 20015: a0 = 0x1\n 20018: ra = 568, jump @32\n      : @653 [@dyn 284] (gas: 14)\n 20024: a0 = u64 [a2 + 0x8]\n 20027: a1 = i32 [a2 + 0x10]\n 20030: a2 = u64 [a2]\n 20032: a0 = reverse a0\n 20034: a3 = a0 << 0x20\n 20037: a1 = reverse a1\n 20039: a1 = a1 >> 0x20\n 20042: a3 = a3 | a1\n 20045: a0 = a0 >> 0x20\n 20048: a1 = reverse a2\n 20050: a2 = a1 << 0x20\n 20053: a0 = a0 | a2\n 20056: a1 = a1 >> 0x20\n 20059: jump [t0]\n      : @654 (gas: 22)\n 20061: a4 = u64 [s1 + 0x118]\n 20065: a2 = a4 <u 0x80\n 20069: a3 = u64 [s1 + 0xd0]\n 20073: a1 = a3 if a2 != 0\n 20076: a5 = u64 [s1 + 0xd8]\n 20080: a3 = u64 [s1 + 0xe8]\n 20084: a3 = a3 | a5\n 20087: a3 = a0 if a2 == 0\n 20090: a1 = 0xffffffffffffffff if a4 == 0\n 20093: a3 = 0xffffffffffffffff if a4 == 0\n 20096: a4 = u64 [s1 + 0xe0]\n 20100: a4 = 0 if a2 == 0\n 20102: a5 = 0 if a2 == 0\n 20104: a0 = u64 [s1 + 0xf8]\n 20108: a0 = a0 & ~a3\n 20111: a2 = u64 [s1 + 0x100]\n 20115: a1 = a2 & ~a1\n 20118: a2 = u64 [s1 + 0x108]\n 20122: a2 = a2 & ~a5\n 20125: a3 = u64 [s1 + 0x110]\n 20129: a3 = a3 & ~a4\n 20132: jump [t0]\n      : @655 (gas: 9)\n 20134: a0 = u64 [a3 + 0x18]\n 20137: a1 = u64 [a3 + 0x10]\n 20140: a2 = u64 [a3 + 0x8]\n 20143: a3 = u64 [a3]\n 20145: a0 = reverse a0\n 20147: a4 = reverse a1\n 20149: a2 = reverse a2\n 20151: a3 = reverse a3\n 20153: jump [t0]\n      : @656 (gas: 13)\n 20155: a4 = a0 << 0x3f\n 20158: a5 = a1 >> 0x1\n 20161: t1 = a5 | a4\n 20164: a5 = a3 << 0x3f\n 20167: a0 = a0 >> 0x1\n 20170: a0 = a0 | a5\n 20173: a1 = a1 << 0x3f\n 20176: a5 = a2 >> 0x1\n 20179: a1 = a1 | a5\n 20182: a3 = a3 >> 0x1\n 20185: a2 = a2 & 0x1\n 20188: a5 = -a2\n 20190: jump [t0]\n      : @657 (gas: 10)\n 20192: a4 = 0 if a2 == 0\n 20194: a1 = u64 [s1 + 0xf8]\n 20198: a1 = a1 & ~a3\n 20201: a2 = u64 [s1 + 0x100]\n 20205: a0 = a2 & ~a0\n 20208: a2 = u64 [s1 + 0x108]\n 20212: a2 = a2 & ~a4\n 20215: a3 = u64 [s1 + 0x110]\n 20219: a3 = a3 & ~a5\n 20222: jump [t0]\n      : @658 (gas: 8)\n 20224: a3 = a3 | a2\n 20227: a2 = a0 | a1\n 20230: a2 = a2 | a3\n 20233: a2 = a2 >> 0x20\n 20236: a1 = a1 | a3\n 20239: a1 = a1 << 0x20\n 20242: a1 = a1 | a2\n 20245: jump [t0]\n      : @659 (gas: 10)\n 20247: a0 = u64 [sp + 0x10]\n 20250: a1 = u64 [sp + 0x18]\n 20253: a2 = 0x100000000\n 20263: a2 = a2 ^ a0\n 20266: a2 = a2 | a1\n 20269: a3 = a0 >> 0x20\n 20272: a3 = a3 <u 0x1\n 20275: a3 = 0 if a1 != 0\n 20277: a3 = 0 if a2 == 0\n 20279: jump [t0]\n      : @660 (gas: 8)\n 20281: a2 = a4 >u 0\n 20283: a1 = a1 ^ 0x1\n 20286: a1 = a2 if a4 != 0\n 20289: a2 = t2 >u 0\n 20291: a3 = a5 >u 0\n 20293: a3 = a2 if a5 == 0\n 20296: a3 = a1 if a0 == 0\n 20299: jump [t0]\n      : @661 (gas: 10)\n 20301: a0 = u64 [a3 + 0x18]\n 20304: a1 = u64 [a3 + 0x10]\n 20307: a2 = u64 [a3 + 0x8]\n 20310: a3 = u64 [a3]\n 20312: a0 = reverse a0\n 20314: a1 = reverse a1\n 20316: a2 = reverse a2\n 20318: a3 = reverse a3\n 20320: a4 = s1 + 0x300\n 20324: jump [t0]\n      : @662 (gas: 8)\n 20326: a2 = a1 | a5\n 20329: a0 = a0 | a3\n 20332: a2 = a2 | a0\n 20335: a2 = a2 >> 0x20\n 20338: a0 = a0 | a5\n 20341: a0 = a0 << 0x20\n 20344: a0 = a0 | a2\n 20347: jump [t0]\n      : @663 (gas: 10)\n 20349: u64 [s1 + 264] = 0\n 20353: a4 = 0\n 20355: ra = 0\n 20357: u64 [s1 + 248] = 0\n 20361: u64 [s1 + 256] = 0\n 20365: a3 = u64 [s1 + 0xe8]\n 20369: a0 = u64 [a3 + 0x18]\n 20372: a1 = u64 [a3 + 0x10]\n 20375: a2 = u64 [a3 + 0x8]\n 20378: jump [t0]\n      : @664 (gas: 12)\n 20380: a2 = u64 [sp]\n 20382: a3 = u64 [sp + 0x8]\n 20385: u64 [s1] = a2\n 20387: u64 [s1 + 0x8] = a3\n 20390: u64 [s1 + 0x10] = a0\n 20393: u64 [s1 + 0x18] = a1\n 20396: sp = s0 + 0xffffffffffffffc0\n 20399: ra = u64 [sp + 0x38]\n 20402: s0 = u64 [sp + 0x30]\n 20405: s1 = u64 [sp + 0x28]\n 20408: sp = sp + 0x40\n 20411: jump [t0]\n      : @665 (gas: 8)\n 20413: a0 = a0 | a2\n 20416: a2 = a3 | a1\n 20419: a2 = a2 | a0\n 20422: a2 = a2 >> 0x20\n 20425: a0 = a0 | a1\n 20428: a0 = a0 << 0x20\n 20431: a0 = a0 | a2\n 20434: jump [t0]\n      : @666 (gas: 7)\n 20436: a0 = a0 << 0x3b\n 20439: a1 = a0 >> 0x38\n 20442: u64 [s1 + 0x118] = a1\n 20446: a2 = 0x80 - a1\n 20450: a0 = 0xffffffffffffffff\n 20453: a1 = 0xffffffffffffffff\n 20456: jump [t0]\n      : @667 (gas: 10)\n 20458: u64 [s1 + 0xd8] = a0\n 20462: u64 [s1 + 0xe0] = a1\n 20466: a0 = u64 [s1 + 0xd0]\n 20470: a0 = a0 | a1\n 20473: u64 [s1 + 0xd0] = a0\n 20477: a0 = u64 [s1 + 0x118]\n 20481: a2 = a0 + 0xffffffffffffff80\n 20484: a0 = 0xffffffffffffffff\n 20487: a1 = 0xffffffffffffffff\n 20490: jump [t0]\n      : @668 (gas: 8)\n 20492: a0 = u64 [a2 + 0x8]\n 20495: a1 = i32 [a2 + 0x10]\n 20498: a2 = u64 [a2]\n 20500: a3 = reverse a0\n 20502: a0 = a3 << 0x20\n 20505: a1 = reverse a1\n 20507: a1 = a1 >> 0x20\n 20510: jump [t0]\n      : @669 (gas: 7)\n 20512: a3 = a3 | a5\n 20515: a3 = a1 if a2 == 0\n 20518: a1 = 0xffffffffffffffff\n 20521: a0 = a1 if a4 == 0\n 20524: a3 = a1 if a4 == 0\n 20527: a5 = 0 if a2 == 0\n 20529: jump [t0]\n      : @670 (gas: 9)\n 20531: sp = sp + 0xffffffffffffffc0\n 20534: u64 [sp + 0x38] = ra\n 20537: u64 [sp + 0x30] = s0\n 20540: u64 [sp + 0x28] = s1\n 20543: s0 = sp + 0x40\n 20546: sp = sp & 0xffffffffffffffe0\n 20549: s1 = a0\n 20551: i32 a0 = sp + 0\n 20553: jump [t0]\n      : @671 (gas: 6)\n 20555: a0 = u64 [a3 + 0x18]\n 20558: a1 = u64 [a3 + 0x10]\n 20561: a2 = u64 [a3 + 0x8]\n 20564: a3 = u64 [a3]\n 20566: a0 = reverse a0\n 20568: jump [t0]\n      : @672 (gas: 8)\n 20570: a1 = sp + 0xffffffffffffffe0\n 20573: a1 = a1 & 0xffffffffffffffe0\n 20576: u64 [s1 + 0xe8] = a1\n 20580: sp = a1\n 20582: i32 a0 = a0 + 0\n 20584: i32 a2 = a1 + 0\n 20586: a1 = 0x20\n 20589: jump [t0]\n      : @673 (gas: 8)\n 20591: a0 = a0 + a4\n 20594: a3 = a3 + a1\n 20597: a5 = a3 <u a1\n 20600: a0 = a0 + a5\n 20603: ra = u64 [s1 + 0xe0]\n 20607: ra = ra + a3\n 20610: a3 = ra <u a3\n 20613: jump [t0]\n      : @674 (gas: 6)\n 20615: a1 = a3 << 0x3\n 20618: u64 [s1 + 0x118] = a1\n 20622: i32 a2 = 0x80 - a1\n 20626: a0 = 0xffffffffffffffff\n 20629: a1 = 0xffffffffffffffff\n 20632: jump [t0]\n      : @675 (gas: 2)\n 20634: a3 = a2 & 0x40\n 20637: jump @679 if a3 != 0\n      : @676 (gas: 1)\n 20640: jump @678 if a2 == 0\n      : @677 (gas: 6)\n 20643: i32 a3 = 0x40 - a2\n 20646: a3 = a1 << a3\n 20649: a1 = a1 >> a2\n 20652: a0 = a0 >> a2\n 20655: a0 = a0 | a3\n 20658: ret\n      : @678 (gas: 1)\n 20660: ret\n      : @679 (gas: 4)\n 20662: a0 = a2 + 0xffffffffffffffc0\n 20665: a0 = a1 >> a0\n 20668: a1 = 0\n 20670: ret\n      : @680 (gas: 2)\n 20672: a3 = a2 & 0x40\n 20675: jump @684 if a3 != 0\n      : @681 (gas: 1)\n 20678: jump @683 if a2 == 0\n      : @682 (gas: 6)\n 20681: i32 a3 = 0x40 - a2\n 20684: a3 = a0 >> a3\n 20687: a0 = a0 << a2\n 20690: a1 = a1 << a2\n 20693: a1 = a1 | a3\n 20696: ret\n      : @683 (gas: 1)\n 20698: ret\n      : @684 (gas: 4)\n 20700: a1 = a2 + 0xffffffffffffffc0\n 20703: a1 = a0 << a1\n 20706: a0 = 0\n 20708: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "mintToken()": "2004ffd9",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": "/// @use-src 2:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 6:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"contracts/MintableERC20.sol\"\nobject \"MintableERC20_1382\" {\n    code {\n        {\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MintableERC20_1382\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            let offset := mload(memoryDataOffset)\n            if gt(offset, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let offset_1 := mload(add(memoryDataOffset, 32))\n            if gt(offset_1, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x24)\n            }\n            let _2 := sload(/** @src 3:1648:1661  \"_name = name_\" */ 0x03)\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            length := shr(1, _2)\n            let outOfPlaceEncoding := and(_2, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1648:1661  \"_name = name_\" */ 0x03)\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 31)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _3 := add(data, shr(5, add(length, 31)))\n                let start := deleteStart\n                for { } lt(start, _3) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            srcOffset := 32\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1648:1661  \"_name = name_\" */ 0x03)\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 3:1648:1661  \"_name = name_\" */ 0x03, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 3:1648:1661  \"_name = name_\" */ 0x03, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 3:1648:1661  \"_name = name_\" */ 0x03, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ or(and(value, not(shr(shl(/** @src 3:1648:1661  \"_name = name_\" */ 0x03, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ newLen), not(0)))), shl(1, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x24)\n            }\n            let _4 := sload(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            length_1 := shr(1, _4)\n            let outOfPlaceEncoding_1 := and(_4, 1)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x24)\n            }\n            if gt(length_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 32)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                let _5 := add(data_1, shr(5, add(length_1, 31)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _5) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            srcOffset_1 := 32\n            switch gt(newLen_1, 31)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ srcOffset_1)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, 1)\n                    srcOffset_1 := add(srcOffset_1, 32)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 3:1648:1661  \"_name = name_\" */ 0x03, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ add(shl(1, newLen_1), 1))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ or(and(value_1, not(shr(shl(/** @src 3:1648:1661  \"_name = name_\" */ 0x03, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ newLen_1), not(0)))), shl(1, newLen_1)))\n            }\n            let _6 := mload(64)\n            let _7 := datasize(\"MintableERC20_1382_deployed\")\n            codecopy(_6, dataoffset(\"MintableERC20_1382_deployed\"), _7)\n            return(_6, _7)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let length := mload(offset)\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x24)\n            }\n            let array_1 := allocate_memory(add(and(add(length, 0x1f), not(31)), 0x20))\n            mstore(array_1, length)\n            if gt(add(add(offset, length), 0x20), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            mcopy(add(array_1, 0x20), add(offset, 0x20), length)\n            mstore(add(add(array_1, length), 0x20), /** @src -1:-1:-1 */ 0)\n            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"contracts/MintableERC20.sol\"\n    object \"MintableERC20_1382_deployed\" {\n        code {\n            {\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret := 0\n                        let slotValue := sload(/** @src 3:1837:1842  \"_name\" */ 0x03)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        let length := 0\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, 32), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 3:1837:1842  \"_name\" */ 0x03)\n                            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 32) }\n                            {\n                                mstore(add(add(_1, i), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(_1, i), 32)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address_3263()\n                        let value := calldataload(36)\n                        /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                        if /** @src 3:9794:9813  \"owner == address(0)\" */ iszero(/** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, /** @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                            mstore(4, 0)\n                            /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, 36)\n                        }\n                        let _2 := and(/** @src 3:9892:9913  \"spender == address(0)\" */ value0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                        if /** @src 3:9892:9913  \"spender == address(0)\" */ iszero(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ _2)\n                        /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, /** @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                            mstore(4, 0)\n                            /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, 36)\n                        }\n                        mstore(0, /** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        mstore(32, 1)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 3:9987:10014  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ _2)\n                        mstore(0x20, /** @src 3:9987:10005  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x40)\n                        sstore(/** @src 3:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ value)\n                        /// @src 3:10066:10097  \"Approval(owner, spender, value)\"\n                        let _3 := /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ mload(64)\n                        mstore(_3, value)\n                        /// @src 3:10066:10097  \"Approval(owner, spender, value)\"\n                        log3(_3, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 32, /** @src 3:10066:10097  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 3:10066:10097  \"Approval(owner, spender, value)\" */ _2)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _4 := sload(/** @src 3:2908:2920  \"_totalSupply\" */ 0x02)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _4)\n                        return(memPos_1, 32)\n                    }\n                    case 0x2004ffd9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 3:7509:7530  \"account == address(0)\"\n                        let _5 := iszero(/** @src 11:305:315  \"msg.sender\" */ caller())\n                        /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n                        if /** @src 3:7509:7530  \"account == address(0)\" */ _5\n                        /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, /** @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                            mstore(4, 0)\n                            /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, 36)\n                        }\n                        let _6 := sload(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        let sum := add(_6, /** @src 11:317:338  \"100000000000000000000\" */ 0x056bc75e2d63100000)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        if gt(_6, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        sstore(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ sum)\n                        /// @src 3:6624:7049  \"if (to == address(0)) {...\"\n                        _5 := /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0\n                        mstore(0, /** @src 11:305:315  \"msg.sender\" */ caller())\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        mstore(0x20, 0)\n                        let dataSlot_2 := keccak256(0, 64)\n                        sstore(dataSlot_2, add(sload(/** @src 3:7002:7024  \"_balances[to] += value\" */ dataSlot_2), /** @src 11:317:338  \"100000000000000000000\" */ 0x056bc75e2d63100000))\n                        /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                        let _7 := /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ mload(64)\n                        mstore(_7, /** @src 11:317:338  \"100000000000000000000\" */ 0x056bc75e2d63100000)\n                        /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                        log3(_7, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 32, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, /** @src 11:305:315  \"msg.sender\" */ caller())\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        return(0, 0)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_3263()\n                        let value1 := abi_decode_address()\n                        let value_1 := calldataload(68)\n                        let _8 := and(value0_1, sub(shl(160, 1), 1))\n                        mstore(0, _8)\n                        mstore(32, 1)\n                        let dataSlot_3 := keccak256(0, 64)\n                        /// @src 3:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_4 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ and(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 3:3638:3656  \"_allowances[owner]\" */ dataSlot_3)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        dataSlot_4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x40)\n                        let _9 := sload(/** @src 3:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_4)\n                        /// @src 3:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                        if /** @src 3:10561:10597  \"currentAllowance < type(uint256).max\" */ lt(_9, /** @src 3:10580:10597  \"type(uint256).max\" */ not(0))\n                        /// @src 3:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                        {\n                            /// @src 3:10613:10743  \"if (currentAllowance < value) {...\"\n                            if /** @src 3:10617:10641  \"currentAllowance < value\" */ lt(_9, value_1)\n                            /// @src 3:10613:10743  \"if (currentAllowance < value) {...\"\n                            {\n                                /// @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                mstore(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, /** @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                                mstore(4, /** @src 7:735:745  \"msg.sender\" */ caller())\n                                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                                mstore(36, _9)\n                                mstore(68, value_1)\n                                /// @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                revert(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, 100)\n                            }\n                            /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                            if /** @src 3:9794:9813  \"owner == address(0)\" */ iszero(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ _8)\n                            /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                            {\n                                /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                                mstore(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, /** @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                                mstore(4, 0)\n                                /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                                revert(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, 36)\n                            }\n                            /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                            if /** @src 3:9892:9913  \"spender == address(0)\" */ iszero(/** @src 7:735:745  \"msg.sender\" */ caller())\n                            /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                            {\n                                /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                                mstore(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, /** @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                                mstore(4, 0)\n                                /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                                revert(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0, 36)\n                            }\n                            mstore(0, _8)\n                            mstore(32, 1)\n                            let dataSlot_5 := keccak256(0, 64)\n                            /// @src 3:9987:10014  \"_allowances[owner][spender]\"\n                            let dataSlot_6 := /** @src -1:-1:-1 */ 0\n                            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ and(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 3:9987:10005  \"_allowances[owner]\" */ dataSlot_5)\n                            /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                            dataSlot_6 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x40)\n                            sstore(/** @src 3:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_6, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ sub(/** @src 3:10809:10833  \"currentAllowance - value\" */ _9, value_1))\n                        }\n                        /// @src 3:4967:4972  \"value\"\n                        fun_transfer(value0_1, value1, value_1)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, /** @src 3:2761:2763  \"18\" */ 0x12)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_3263(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _10 := sload(keccak256(0, 64))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _10)\n                        return(memPos_4, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let ret_1 := 0\n                        let slotValue_1 := sload(4)\n                        let length_1 := 0\n                        length_1 := shr(1, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr, 32), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, 4)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := 0\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 32) }\n                            {\n                                mstore(add(add(memPtr, i_1), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, 1)\n                            }\n                            ret_1 := add(add(memPtr, i_1), 32)\n                        }\n                        let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_3263()\n                        /// @src 3:3440:3445  \"value\"\n                        fun_transfer(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 3:3440:3445  \"value\" */ value0_2, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ calldataload(36))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, 1)\n                        return(memPos_5, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_3263()\n                        let value1_1 := abi_decode_address()\n                        mstore(0, and(value0_3, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 3:3638:3649  \"_allowances\" */ 0x01)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        /// @src 3:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ and(value1_1, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 3:3638:3656  \"_allowances[owner]\" */ dataSlot_7)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x40)\n                        let _11 := sload(/** @src 3:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_8)\n                        /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _11)\n                        return(memPos_6, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address_3263() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 760 @src 3:5374:5674  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                let _1 := and(/** @src 3:5457:5475  \"from == address(0)\" */ var_from, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ sub(shl(160, 1), 1))\n                /// @src 3:5457:5475  \"from == address(0)\"\n                let _2 := iszero(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ _1)\n                /// @src 3:5453:5539  \"if (from == address(0)) {...\"\n                if /** @src 3:5457:5475  \"from == address(0)\" */ _2\n                /// @src 3:5453:5539  \"if (from == address(0)) {...\"\n                {\n                    /// @src 3:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                    mstore(/** @src 3:5498:5528  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 3:5473:5474  \"0\" */ 0x00)\n                    /// @src 3:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 36)\n                }\n                let _3 := and(/** @src 3:5552:5568  \"to == address(0)\" */ var_to, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ sub(shl(160, 1), 1))\n                /// @src 3:5552:5568  \"to == address(0)\"\n                let _4 := iszero(/** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ _3)\n                /// @src 3:5548:5634  \"if (to == address(0)) {...\"\n                if /** @src 3:5552:5568  \"to == address(0)\" */ _4\n                /// @src 3:5548:5634  \"if (to == address(0)) {...\"\n                {\n                    /// @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                    /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                    mstore(/** @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 3:5473:5474  \"0\" */ 0x00)\n                    /// @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 36)\n                }\n                /// @src 3:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 3:5473:5474  \"0\" */ 0x00\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                let _5 := sload(keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x40))\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 3:6321:6340  \"fromBalance < value\" */ lt(_5, var_value)\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                    mstore(/** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ _1)\n                    mstore(36, _5)\n                    mstore(68, var_value)\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 100)\n                }\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                sstore(keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x40), sub(/** @src 3:6570:6589  \"fromBalance - value\" */ _5, var_value))\n                /// @src 3:6624:7049  \"if (to == address(0)) {...\"\n                _4 := /** @src 3:5473:5474  \"0\" */ 0x00\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ _3)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 11:115:348  \"contract MintableERC20 is ERC20 {...\"\n                let dataSlot := keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 3:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ var_value))\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                let _6 := /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ mload(64)\n                mstore(_6, var_value)\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                log3(_6, /** @src 11:115:348  \"contract MintableERC20 is ERC20 {...\" */ 32, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220d6341794d0f9f390bcde880d1deefde828e442dec7591586b5ccb8fbc21bb12664736f6c634300081c0033\"\n    }\n}\n",
          "hash": "a2f586401859179358478f65b398d6b44f1b88d0ac85e9e93a223e8fe83b81e8",
          "factoryDependencies": {}
        }
      },
      "contracts/MyToken.sol": {
        "MyToken": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "initialSupply",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINTER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PAUSER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x72a3fcfc8985f958f1d2676e9caa1b90194c01e2afbbc9c020e147dd1f7df04d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://972094b2503beeabda07de09a9229ee6f7155fae0630ab47841325f2c1715745\",\"dweb:/ipfs/QmXcsfdSBFhMe5CiPu7CB3tf8Aa1vB9sBNjuVqk6fRbHT8\"]}},\"version\":1}",
            "solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 616/66208 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 9900\n// Code size = 34674 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20270]\n   117: jump @261 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x302a0\n   126: i32 a0 = a0 + 0\n   128: ecalli 8 // 'set_immutable_data'\n   130: jump @261\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @33\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @33\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 32)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ra = 0x6\n   771: ecalli 5 // 'get_storage'\n   773: fallthrough\n      : @22 [@dyn 3] (gas: 5)\n   774: a0 = u64 [sp + 0x38]\n   777: a1 = u64 [sp + 0x30]\n   780: a2 = u64 [sp + 0x28]\n   783: a3 = u64 [sp + 0x20]\n   786: t0 = 8, jump @1351\n      : @23 [@dyn 4] (gas: 10)\n   791: u64 [s1 + 0x18] = a3\n   794: u64 [s1 + 0x10] = a2\n   797: u64 [s1 + 0x8] = a1\n   800: u64 [s1] = a0\n   802: sp = s0 + 0xffffffffffffffa0\n   805: ra = u64 [sp + 0x58]\n   808: s0 = u64 [sp + 0x50]\n   811: s1 = u64 [sp + 0x48]\n   814: sp = sp + 0x60\n   817: ret\n      : @24 (gas: 40)\n   819: sp = sp + 0xffffffffffffffa0\n   822: u64 [sp + 0x58] = ra\n   825: u64 [sp + 0x50] = s0\n   828: s0 = sp + 0x60\n   831: sp = sp & 0xffffffffffffffe0\n   834: t0 = u64 [a0]\n   836: a3 = u64 [a0 + 0x8]\n   839: a4 = u64 [a0 + 0x10]\n   842: a0 = u64 [a0 + 0x18]\n   845: t1 = u64 [a1]\n   847: a2 = u64 [a1 + 0x8]\n   850: a5 = u64 [a1 + 0x10]\n   853: a1 = u64 [a1 + 0x18]\n   856: t2 = reverse a0\n   858: a4 = reverse a4\n   860: a3 = reverse a3\n   862: a0 = reverse t0\n   864: t0 = reverse a1\n   866: a5 = reverse a5\n   868: a2 = reverse a2\n   870: a1 = reverse t1\n   872: u64 [sp + 0x18] = a0\n   875: u64 [sp + 0x10] = a3\n   878: u64 [sp + 0x8] = a4\n   881: u64 [sp] = t2\n   883: u64 [sp + 0x38] = a1\n   886: u64 [sp + 0x30] = a2\n   889: u64 [sp + 0x28] = a5\n   892: u64 [sp + 0x20] = t0\n   895: i32 a1 = sp + 0\n   897: i32 a3 = sp + 0x20\n   900: a2 = 0xffffffffffffffff\n   903: a4 = 0x20\n   906: a0 = 0\n   908: ecalli 9 // 'set_storage'\n   910: sp = s0 + 0xffffffffffffffa0\n   913: ra = u64 [sp + 0x58]\n   916: s0 = u64 [sp + 0x50]\n   919: sp = sp + 0x60\n   922: ret\n      : @25 (gas: 16)\n   924: sp = sp + 0xffffffffffffffa0\n   927: u64 [sp + 0x58] = ra\n   930: u64 [sp + 0x50] = s0\n   933: u64 [sp + 0x48] = s1\n   936: s0 = sp + 0x60\n   939: sp = sp & 0xffffffffffffffe0\n   942: a3 = u64 [a2]\n   944: u64 [sp + 0x18] = a3\n   947: a3 = u64 [a2 + 0x8]\n   950: u64 [sp + 0x10] = a3\n   953: a3 = u64 [a2 + 0x10]\n   956: u64 [sp + 0x8] = a3\n   959: a2 = u64 [a2 + 0x18]\n   962: u64 [sp] = a2\n   964: s1 = a1\n   966: ra = 10, jump @33\n      : @26 [@dyn 5] (gas: 23)\n   971: a1 = u64 [sp]\n   973: a1 = reverse a1\n   975: a2 = u64 [sp + 0x8]\n   978: a2 = reverse a2\n   980: a3 = u64 [sp + 0x10]\n   983: a3 = reverse a3\n   985: a4 = u64 [sp + 0x18]\n   988: a4 = reverse a4\n   990: u64 [sp + 0x38] = a4\n   993: u64 [sp + 0x30] = a3\n   996: u64 [sp + 0x28] = a2\n   999: u64 [sp + 0x20] = a1\n  1002: i32 a2 = a0 + 0\n  1004: i32 a3 = s1 + 0\n  1006: i32 a0 = sp + 0x20\n  1009: a1 = 0x1\n  1012: ecalli 4 // 'deposit_event'\n  1014: sp = s0 + 0xffffffffffffffa0\n  1017: ra = u64 [sp + 0x58]\n  1020: s0 = u64 [sp + 0x50]\n  1023: s1 = u64 [sp + 0x48]\n  1026: sp = sp + 0x60\n  1029: ret\n      : @27 (gas: 15)\n  1031: sp = sp + 0xffffffffffffff20\n  1035: u64 [sp + 0xd8] = ra\n  1039: u64 [sp + 0xd0] = s0\n  1043: u64 [sp + 0xc8] = s1\n  1047: s0 = sp + 0xe0\n  1051: sp = sp & 0xffffffffffffffe0\n  1054: a5 = u64 [a4]\n  1056: u64 [sp + 0x40] = a5\n  1059: a5 = u64 [a4 + 0x8]\n  1062: u64 [sp + 0x48] = a5\n  1065: a5 = u64 [a4 + 0x10]\n  1068: u64 [sp + 0x50] = a5\n  1071: a4 = u64 [a4 + 0x18]\n  1074: u64 [sp + 0x58] = a4\n  1077: t0 = 12, jump @1367\n      : @28 [@dyn 6] (gas: 2)\n  1082: u64 [sp + 0x38] = a1\n  1085: ra = 14, jump @33\n      : @29 [@dyn 7] (gas: 46)\n  1090: a1 = reverse s1\n  1092: u64 [sp + 0x78] = a1\n  1095: a1 = u64 [sp]\n  1097: a1 = reverse a1\n  1099: u64 [sp + 0x70] = a1\n  1102: a1 = u64 [sp + 0x8]\n  1105: a1 = reverse a1\n  1107: u64 [sp + 0x68] = a1\n  1110: a1 = u64 [sp + 0x10]\n  1113: a1 = reverse a1\n  1115: u64 [sp + 0x60] = a1\n  1118: a1 = u64 [sp + 0x18]\n  1121: a1 = reverse a1\n  1123: u64 [sp + 0x98] = a1\n  1127: a1 = u64 [sp + 0x20]\n  1130: a1 = reverse a1\n  1132: u64 [sp + 0x90] = a1\n  1136: a1 = u64 [sp + 0x28]\n  1139: a1 = reverse a1\n  1141: u64 [sp + 0x88] = a1\n  1145: a1 = u64 [sp + 0x30]\n  1148: a1 = reverse a1\n  1150: u64 [sp + 0x80] = a1\n  1154: a1 = u64 [sp + 0x40]\n  1157: a1 = reverse a1\n  1159: u64 [sp + 0xb8] = a1\n  1163: a1 = u64 [sp + 0x48]\n  1166: a1 = reverse a1\n  1168: u64 [sp + 0xb0] = a1\n  1172: a1 = u64 [sp + 0x50]\n  1175: a1 = reverse a1\n  1177: u64 [sp + 0xa8] = a1\n  1181: a1 = u64 [sp + 0x58]\n  1184: a1 = reverse a1\n  1186: u64 [sp + 0xa0] = a1\n  1190: i32 a2 = a0 + 0\n  1192: a3 = i32 [sp + 0x38]\n  1195: i32 a0 = sp + 0x60\n  1198: a1 = 0x3\n  1201: ecalli 4 // 'deposit_event'\n  1203: sp = s0 + 0xffffffffffffff20\n  1207: ra = u64 [sp + 0xd8]\n  1211: s0 = u64 [sp + 0xd0]\n  1215: s1 = u64 [sp + 0xc8]\n  1219: sp = sp + 0xe0\n  1223: ret\n      : @30 (gas: 23)\n  1225: sp = sp + 0xfffffffffffffee0\n  1229: u64 [sp + 0x118] = ra\n  1233: u64 [sp + 0x110] = s0\n  1237: u64 [sp + 0x108] = s1\n  1241: s0 = sp + 0x120\n  1245: sp = sp & 0xffffffffffffffe0\n  1248: s1 = u64 [a5]\n  1250: u64 [sp + 0x60] = s1\n  1253: s1 = u64 [a5 + 0x8]\n  1256: u64 [sp + 0x68] = s1\n  1259: s1 = u64 [a5 + 0x10]\n  1262: u64 [sp + 0x70] = s1\n  1265: a5 = u64 [a5 + 0x18]\n  1268: u64 [sp + 0x78] = a5\n  1271: a5 = u64 [a4]\n  1273: u64 [sp + 0x38] = a5\n  1276: a5 = u64 [a4 + 0x8]\n  1279: u64 [sp + 0x40] = a5\n  1282: a5 = u64 [a4 + 0x10]\n  1285: u64 [sp + 0x48] = a5\n  1288: a4 = u64 [a4 + 0x18]\n  1291: u64 [sp + 0x50] = a4\n  1294: t0 = 16, jump @1367\n      : @31 [@dyn 8] (gas: 2)\n  1299: u64 [sp + 0x58] = a1\n  1302: ra = 18, jump @33\n      : @32 [@dyn 9] (gas: 58)\n  1307: a1 = reverse s1\n  1309: u64 [sp + 0x98] = a1\n  1313: a1 = u64 [sp]\n  1315: a1 = reverse a1\n  1317: u64 [sp + 0x90] = a1\n  1321: a1 = u64 [sp + 0x8]\n  1324: a1 = reverse a1\n  1326: u64 [sp + 0x88] = a1\n  1330: a1 = u64 [sp + 0x10]\n  1333: a1 = reverse a1\n  1335: u64 [sp + 0x80] = a1\n  1339: a1 = u64 [sp + 0x18]\n  1342: a1 = reverse a1\n  1344: u64 [sp + 0xb8] = a1\n  1348: a1 = u64 [sp + 0x20]\n  1351: a1 = reverse a1\n  1353: u64 [sp + 0xb0] = a1\n  1357: a1 = u64 [sp + 0x28]\n  1360: a1 = reverse a1\n  1362: u64 [sp + 0xa8] = a1\n  1366: a1 = u64 [sp + 0x30]\n  1369: a1 = reverse a1\n  1371: u64 [sp + 0xa0] = a1\n  1375: a1 = u64 [sp + 0x38]\n  1378: a1 = reverse a1\n  1380: u64 [sp + 0xd8] = a1\n  1384: a1 = u64 [sp + 0x40]\n  1387: a1 = reverse a1\n  1389: u64 [sp + 0xd0] = a1\n  1393: a1 = u64 [sp + 0x48]\n  1396: a1 = reverse a1\n  1398: u64 [sp + 0xc8] = a1\n  1402: a1 = u64 [sp + 0x50]\n  1405: a1 = reverse a1\n  1407: u64 [sp + 0xc0] = a1\n  1411: a1 = u64 [sp + 0x60]\n  1414: a1 = reverse a1\n  1416: u64 [sp + 0xf8] = a1\n  1420: a1 = u64 [sp + 0x68]\n  1423: a1 = reverse a1\n  1425: u64 [sp + 0xf0] = a1\n  1429: a1 = u64 [sp + 0x70]\n  1432: a1 = reverse a1\n  1434: u64 [sp + 0xe8] = a1\n  1438: a1 = u64 [sp + 0x78]\n  1441: a1 = reverse a1\n  1443: u64 [sp + 0xe0] = a1\n  1447: i32 a2 = a0 + 0\n  1449: a3 = i32 [sp + 0x58]\n  1452: i32 a0 = sp + 0x80\n  1456: a1 = 0x4\n  1459: ecalli 4 // 'deposit_event'\n  1461: sp = s0 + 0xfffffffffffffee0\n  1465: ra = u64 [sp + 0x118]\n  1469: s0 = u64 [sp + 0x110]\n  1473: s1 = u64 [sp + 0x108]\n  1477: sp = sp + 0x120\n  1481: ret\n      : @33 (gas: 2)\n  1483: i32 a2 = a0 >> 0x10\n  1486: jump @38 if a2 != 0\n      : @34 (gas: 4)\n  1489: a1 = a1 + a0\n  1492: i32 a1 = a1 + 0x1f\n  1495: a1 = a1 & 0xffffffffffffffe0\n  1498: jump @38 if a1 >u 65536\n      : @35 (gas: 3)\n  1504: a2 = 0x2026c\n  1509: a3 = i32 [0x2026c]\n  1514: jump @37 if a3 >=u a1\n      : @36 (gas: 2)\n  1517: u32 [0x2026c] = a1\n  1522: fallthrough\n      : @37 (gas: 4)\n  1523: a1 = 0x20280\n  1528: i32 a0 = a0 + 0\n  1530: a0 = a0 + a1\n  1533: ret\n      : @38 (gas: 1)\n  1535: trap\n      : @39 (gas: 6)\n  1536: sp = sp + 0xfffffffffffffff0\n  1539: u64 [sp + 0x8] = ra\n  1542: u64 [sp] = s0\n  1544: s0 = a0 & 0x1\n  1547: ecalli 2 // 'call_data_size'\n  1549: fallthrough\n      : @40 (gas: 2)\n  1550: u32 [0x20268] = a0\n  1555: jump @42 if s0 == 0\n      : @41 (gas: 1)\n  1558: ra = 20, jump @43\n      : @42 [@dyn 10] (gas: 18)\n  1562: ra = 0x16\n  1565: sp = sp + 0xfffffffffffffe10\n  1569: u64 [sp + 0x1e8] = ra\n  1573: u64 [sp + 0x1e0] = s0\n  1577: u64 [sp + 0x1d8] = s1\n  1581: s0 = sp + 0x1f0\n  1585: sp = sp + 0xffffffffffffe650\n  1589: sp = sp & 0xffffffffffffffe0\n  1592: s1 = sp\n  1594: a2 = s1 + 0x1038\n  1598: u64 [a2 + 1248] = 0\n  1602: u64 [a2 + 1240] = 0\n  1606: u64 [a2 + 1224] = 0x80\n  1612: a0 = 0x40\n  1615: a1 = s1 + 0x1500\n  1619: u64 [a2 + 1232] = 0\n  1623: ra = 0x112\n  1627: jump @19\n      : @43 [@dyn 11] (gas: 21)\n  1630: sp = sp + 0xfffffffffffff808\n  1634: a0 = sp + 0x700\n  1638: u64 [a0 + 0xf0] = ra\n  1642: u64 [a0 + 0xe8] = s0\n  1646: u64 [a0 + 0xe0] = s1\n  1650: s0 = sp + 0x7f8\n  1654: sp = sp + 0xfffffffffffffcf8\n  1658: sp = sp & 0xffffffffffffffe0\n  1661: s1 = sp\n  1663: a0 = s1 + 0x1000\n  1667: u64 [a0 + 4294965304] = 0\n  1671: a0 = s1 + 0x1000\n  1675: u64 [a0 + 4294965296] = 0\n  1679: a1 = s1 + 0x1000\n  1683: u64 [a1 + 4294965280] = 0x80\n  1689: a0 = 0x40\n  1692: a1 = s1 + 0x7ff\n  1696: a1 = a1 + 0x21\n  1699: a2 = s1 + 0x1000\n  1703: u64 [a2 + 4294965288] = 0\n  1707: ra = 24, jump @19\n      : @44 [@dyn 12] (gas: 12)\n  1712: a0 = s1 + 0x1000\n  1716: u64 [a0 + 4294965336] = 0\n  1720: a0 = s1 + 0x1000\n  1724: u64 [a0 + 4294965328] = 0\n  1728: a0 = s1 + 0x1000\n  1732: u64 [a0 + 4294965320] = 0\n  1736: a0 = s1 + 0x1000\n  1740: u64 [a0 + 4294965312] = 0\n  1744: a0 = s1 + 0x1000\n  1748: i32 a0 = a0 + 0xfffffffffffff840\n  1752: ecalli 10 // 'value_transferred'\n  1754: fallthrough\n      : @45 (gas: 12)\n  1755: a0 = s1 + 0x1000\n  1759: a0 = u64 [a0 + 0xfffffffffffff850]\n  1763: a1 = s1 + 0x1000\n  1767: a1 = u64 [a1 + 0xfffffffffffff858]\n  1771: a2 = s1 + 0x1000\n  1775: a2 = u64 [a2 + 0xfffffffffffff848]\n  1779: a3 = s1 + 0x1000\n  1783: a3 = u64 [a3 + 0xfffffffffffff840]\n  1787: a1 = a1 | a2\n  1790: a0 = a0 | a3\n  1793: a0 = a0 | a1\n  1796: jump @47 if a0 == 0\n      : @46 (gas: 1)\n  1799: jump @217\n      : @47 (gas: 10)\n  1802: a2 = u32 [0x20268]\n  1807: u64 [s1 + 2040] = 0\n  1811: u64 [s1 + 2032] = 0\n  1815: u64 [s1 + 2024] = 0\n  1819: a0 = s1 + 0x7ff\n  1823: a0 = a0 + 0x1\n  1826: a1 = s1 + 0x7e0\n  1830: u64 [s1 + 0x138] = a2\n  1834: u64 [s1 + 0x7e0] = a2\n  1838: ra = 26, jump @857\n      : @48 [@dyn 13] (gas: 9)\n  1843: a0 = s1 + 0x1000\n  1847: a3 = u64 [a0 + 0xfffffffffffff818]\n  1851: a0 = s1 + 0x1000\n  1855: a1 = u64 [a0 + 0xfffffffffffff810]\n  1859: a0 = s1 + 0x1000\n  1863: a2 = u64 [a0 + 0xfffffffffffff808]\n  1867: a0 = s1 + 0x1000\n  1871: a0 = u64 [a0 + 0xfffffffffffff800]\n  1875: t0 = 28, jump @1332\n      : @49 [@dyn 14] (gas: 1)\n  1880: jump @51 if a1 == 0\n      : @50 (gas: 1)\n  1883: jump @216\n      : @51 (gas: 3)\n  1886: u64 [s1 + 0x130] = a0\n  1890: a1 = u64 [s1 + 0x138]\n  1894: ra = 30, jump @33\n      : @52 [@dyn 15] (gas: 5)\n  1899: i32 a0 = a0 + 0\n  1901: a1 = i32 [s1 + 0x138]\n  1905: a2 = 0\n  1907: ecalli 0 // 'call_data_copy'\n  1908: fallthrough\n      : @53 (gas: 2)\n  1909: a1 = u64 [s1 + 0x138]\n  1913: jump @55 if a1 >u 31\n      : @54 (gas: 1)\n  1917: jump @218\n      : @55 (gas: 3)\n  1920: a0 = s1 + 0x7c0\n  1924: a1 = u64 [s1 + 0x130]\n  1928: ra = 32, jump @17\n      : @56 [@dyn 16] (gas: 15)\n  1933: a0 = u64 [s1 + 0x7d8]\n  1937: u64 [s1 + 0x80] = a0\n  1941: a0 = u64 [s1 + 0x7d0]\n  1945: u64 [s1 + 0x78] = a0\n  1948: a0 = u64 [s1 + 0x7c8]\n  1952: u64 [s1 + 0x70] = a0\n  1955: a0 = u64 [s1 + 0x7c0]\n  1959: u64 [s1 + 0x68] = a0\n  1962: u64 [s1 + 1944] = 0\n  1966: u64 [s1 + 1936] = 0\n  1970: u64 [s1 + 1920] = 0x40\n  1975: a0 = s1 + 0x7a0\n  1979: a1 = s1 + 0x780\n  1983: u64 [s1 + 1928] = 0\n  1987: ra = 34, jump @857\n      : @57 [@dyn 17] (gas: 13)\n  1992: a1 = s1 + 0x700\n  1996: a2 = u64 [a1 + 0xb8]\n  2000: a3 = u64 [a1 + 0xb0]\n  2004: a4 = u64 [a1 + 0xa8]\n  2008: a0 = u64 [a1 + 0xa0]\n  2012: a5 = a4 | a2\n  2015: a1 = a0 | a3\n  2018: a1 = a1 | a5\n  2021: a1 = a1 >> 0x20\n  2024: a5 = a5 | a3\n  2027: a5 = a5 << 0x20\n  2030: a1 = a1 | a5\n  2033: jump @59 if a1 == 0\n      : @58 (gas: 1)\n  2036: jump @216\n      : @59 (gas: 11)\n  2039: u64 [s1 + 1912] = 0\n  2043: u64 [s1 + 1904] = 0\n  2047: u64 [s1 + 1896] = 0\n  2051: a5 = 0x7\n  2054: a1 = s1 + 0x760\n  2058: u64 [s1 + 0x760] = a5\n  2062: u64 [s1 + 0xc8] = a2\n  2066: u64 [s1 + 0xc0] = a3\n  2070: u64 [s1 + 0xb8] = a4\n  2074: u64 [s1 + 0xd0] = a0\n  2078: ra = 36, jump @19\n      : @60 [@dyn 18] (gas: 10)\n  2083: a3 = u64 [s1 + 0xd0]\n  2087: a0 = u64 [s1 + 0xc8]\n  2091: a1 = u64 [s1 + 0xc0]\n  2095: a0 = a0 | a1\n  2098: a1 = 0xffffffe0\n  2108: a1 = a3 <u a1\n  2111: a2 = u64 [s1 + 0xb8]\n  2115: a1 = 0 if a2 != 0\n  2117: a1 = 0 if a0 != 0\n  2119: jump @62 if a1 != 0\n      : @61 (gas: 1)\n  2122: jump @216\n      : @62 (gas: 9)\n  2125: i32 a0 = a3 + 0x20\n  2128: u64 [s1 + 1872] = 0\n  2132: a2 = u64 [0x20000]\n  2137: u64 [s1 + 1864] = 0\n  2141: u64 [s1 + 1856] = 0\n  2145: a1 = s1 + 0x740\n  2149: u64 [s1 + 0x758] = a2\n  2153: u64 [s1 + 0xf0] = a0\n  2157: ra = 38, jump @19\n      : @63 [@dyn 19] (gas: 7)\n  2162: u64 [s1 + 1816] = 0\n  2166: u64 [s1 + 1808] = 0\n  2170: u64 [s1 + 1792] = 0x40\n  2175: a0 = s1 + 0x720\n  2179: a1 = s1 + 0x700\n  2183: u64 [s1 + 1800] = 0\n  2187: ra = 40, jump @857\n      : @64 [@dyn 20] (gas: 13)\n  2192: a1 = s1 + 0x700\n  2196: a5 = u64 [a1 + 0x38]\n  2199: a2 = u64 [a1 + 0x30]\n  2202: a3 = u64 [a1 + 0x28]\n  2205: a0 = u64 [a1 + 0x20]\n  2208: a4 = a3 | a5\n  2211: a1 = a0 | a2\n  2214: a1 = a1 | a4\n  2217: a1 = a1 >> 0x20\n  2220: a4 = a4 | a2\n  2223: a4 = a4 << 0x20\n  2226: a1 = a1 | a4\n  2229: jump @66 if a1 == 0\n      : @65 (gas: 1)\n  2232: jump @216\n      : @66 (gas: 11)\n  2235: u64 [s1 + 1784] = 0\n  2239: u64 [s1 + 1776] = 0\n  2243: u64 [s1 + 1768] = 0\n  2247: a4 = 0x3\n  2250: a1 = s1 + 0x6e0\n  2254: u64 [s1 + 0x6e0] = a4\n  2258: u64 [s1 + 0x98] = a2\n  2262: u64 [s1 + 0x90] = a3\n  2266: u64 [s1 + 0xa0] = a0\n  2270: u64 [s1 + 0x88] = a5\n  2274: ra = 42, jump @19\n      : @67 [@dyn 21] (gas: 10)\n  2279: a3 = u64 [s1 + 0xa0]\n  2283: a0 = u64 [s1 + 0x98]\n  2287: a1 = u64 [s1 + 0x88]\n  2291: a0 = a0 | a1\n  2294: a1 = 0xffffffe0\n  2304: a1 = a3 <u a1\n  2307: a2 = u64 [s1 + 0x90]\n  2311: a1 = 0 if a2 != 0\n  2313: a1 = 0 if a0 != 0\n  2315: jump @69 if a1 != 0\n      : @68 (gas: 1)\n  2318: jump @216\n      : @69 (gas: 9)\n  2321: i32 a0 = a3 + 0x20\n  2324: u64 [s1 + 1744] = 0\n  2328: u64 [s1 + 1736] = 0\n  2332: u64 [s1 + 1728] = 0\n  2336: a2 = 0x4d544b0000000000\n  2346: a1 = s1 + 0x6c0\n  2350: u64 [s1 + 0x6d8] = a2\n  2354: u64 [s1 + 0x18] = a0\n  2357: ra = 44, jump @19\n      : @70 [@dyn 22] (gas: 3)\n  2362: a0 = s1 + 0x6a0\n  2366: a1 = u64 [s1 + 0xd0]\n  2370: ra = 46, jump @17\n      : @71 [@dyn 23] (gas: 17)\n  2375: a0 = s1 + 0x600\n  2379: a3 = u64 [a0 + 0xb8]\n  2383: a1 = u64 [a0 + 0xb0]\n  2387: a2 = u64 [a0 + 0xa8]\n  2391: a0 = a3 >u 0\n  2393: a4 = a1 >u 0\n  2395: a4 = a0 if a3 != 0\n  2398: u64 [s1 + 0xe8] = a2\n  2402: a0 = a2 >u 0\n  2404: u64 [s1 + 0x58] = a1\n  2407: u64 [s1 + 0xe0] = a3\n  2411: a1 = a1 | a3\n  2414: u64 [s1 + 0x50] = a0\n  2417: u64 [s1 + 0xa8] = a4\n  2421: u64 [s1 + 0xd8] = a1\n  2425: a0 = a4 if a1 != 0\n  2428: jump @73 if a0 == 0\n      : @72 (gas: 1)\n  2431: jump @219\n      : @73 (gas: 14)\n  2434: a0 = u64 [s1 + 0x6a0]\n  2438: u64 [s1 + 0x60] = a0\n  2441: a0 = s1 + 0x1000\n  2445: u64 [a0 + 4294965368] = 0\n  2449: a0 = s1 + 0x1000\n  2453: u64 [a0 + 4294965360] = 0\n  2457: a0 = s1 + 0x1000\n  2461: u64 [a0 + 4294965352] = 0\n  2465: a1 = s1 + 0x1000\n  2469: u64 [a1 + 4294965344] = 0x3\n  2474: a0 = s1 + 0x680\n  2478: a1 = s1 + 0x7ff\n  2482: a1 = a1 + 0x61\n  2485: ra = 48, jump @21\n      : @74 [@dyn 24] (gas: 6)\n  2490: a4 = s1 + 0x600\n  2494: a0 = u64 [a4 + 0x90]\n  2498: a1 = u64 [a4 + 0x88]\n  2502: a2 = u64 [a4 + 0x80]\n  2506: a3 = u64 [a4 + 0x98]\n  2510: t0 = 50, jump @1357\n      : @75 [@dyn 25] (gas: 12)\n  2515: t0 = a2 <u 0x1\n  2518: ra = a1 & 0x7f\n  2521: t2 = a5 & a0\n  2524: a4 = a5 & t1\n  2527: ra = a1 if a2 != 0\n  2530: a1 = ra <u 0x20\n  2533: a5 = a5 & a3\n  2536: a2 = a1\n  2538: a2 = 0 if a4 != 0\n  2540: a0 = t2 | a5\n  2543: a2 = 0 if a0 != 0\n  2545: jump @77 if t0 == a2\n      : @76 (gas: 1)\n  2548: jump @225\n      : @77 (gas: 1)\n  2551: t0 = 52, jump @1368\n      : @78 [@dyn 26] (gas: 4)\n  2556: a0 = u64 [s1 + 0x60]\n  2559: a0 = a0 <u 0x20\n  2562: u64 [s1 + 0xb0] = a0\n  2566: jump @90 if a3 == 0\n      : @79 (gas: 11)\n  2570: u64 [s1 + 0x110] = a4\n  2574: u64 [s1 + 0x118] = ra\n  2578: u64 [s1 + 0x120] = a5\n  2582: u64 [s1 + 0x130] = t2\n  2586: u64 [s1 + 1656] = 0\n  2590: u64 [s1 + 1648] = 0\n  2594: u64 [s1 + 1640] = 0\n  2598: a1 = s1 + 0x660\n  2602: u64 [s1 + 1632] = 0x3\n  2607: a0 = 0\n  2609: ra = 54, jump @19\n      : @80 [@dyn 27] (gas: 2)\n  2614: a1 = i32 [0x2026c]\n  2619: jump @82 if a1 >u 31\n      : @81 (gas: 2)\n  2623: u32 [0x2026c] = 0x20\n  2629: fallthrough\n      : @82 (gas: 11)\n  2630: a0 = sp + 0xffffffffffffffe0\n  2633: a2 = a0 & 0xffffffffffffffe0\n  2636: u64 [s1 + 0x128] = a2\n  2640: sp = a2\n  2642: a0 = 0x20280\n  2647: i32 a0 = a0 + 0\n  2649: i32 a2 = a2 + 0\n  2651: a1 = 0x20\n  2654: ra = 0x38\n  2657: ecalli 6 // 'hash_keccak_256'\n  2659: fallthrough\n      : @83 [@dyn 28] (gas: 9)\n  2660: a0 = u64 [s1 + 0x60]\n  2663: a1 = a0 + 0x1f\n  2666: a0 = a1 <u a0\n  2669: a5 = u64 [s1 + 0xe8]\n  2673: a2 = a5 + a0\n  2676: a3 = a2 <u a5\n  2679: a3 = a0 if a0 == 0\n  2682: a4 = u64 [s1 + 0x58]\n  2685: t0 = 58, jump @1352\n      : @84 [@dyn 29] (gas: 35)\n  2690: a1 = u64 [s1 + 0xb0]\n  2694: a1 = 0 if a5 != 0\n  2696: a3 = u64 [s1 + 0xd8]\n  2700: a1 = 0 if a3 != 0\n  2702: a4 = 0 if a1 != 0\n  2704: a0 = 0 if a1 != 0\n  2706: t0 = t2 + a0\n  2709: a0 = t0 <u t2\n  2712: a5 = a2 + a0\n  2715: a4 = a4 + a5\n  2718: u64 [s1 + 0x138] = a4\n  2722: a5 = a4 ^ a2\n  2725: a3 = a4 <u a2\n  2728: a3 = a0 if a5 == 0\n  2731: u64 [s1 + 0x100] = a3\n  2735: a0 = u64 [s1 + 0x118]\n  2739: ra = a0 + 0x1f\n  2742: a4 = ra <u a0\n  2745: a3 = u64 [s1 + 0x110]\n  2749: a0 = a3 + a4\n  2752: a5 = a0 <u a3\n  2755: a5 = a4 if a4 == 0\n  2758: t1 = u64 [s1 + 0x130]\n  2762: t1 = t1 + a5\n  2765: a4 = t1 << 0x3b\n  2768: a3 = a0 >> 0x5\n  2771: a3 = a3 | a4\n  2774: a0 = a0 << 0x3b\n  2777: a4 = ra >> 0x5\n  2780: a0 = a0 | a4\n  2783: a0 = a0 + t2\n  2786: u64 [s1 + 0x118] = a0\n  2790: a0 = a0 <u t2\n  2793: t2 = t0\n  2795: t0 = 60, jump @1375\n      : @85 [@dyn 30] (gas: 16)\n  2800: a0 = u64 [s1 + 0x58]\n  2803: a0 = a4 <u a0\n  2806: a3 = u64 [s1 + 0xe0]\n  2810: a0 = a0 + a3\n  2813: a3 = a4 >> 0x5\n  2816: a4 = a0 << 0x3b\n  2819: a3 = a3 | a4\n  2822: a4 = u64 [s1 + 0x128]\n  2826: t0 = u64 [a4]\n  2828: a4 = u64 [a4 + 0x8]\n  2831: a0 = a0 >> 0x5\n  2834: a3 = 0 if a1 != 0\n  2836: a0 = 0 if a1 != 0\n  2838: a1 = reverse a4\n  2840: a4 = reverse t0\n  2842: t0 = 62, jump @1393\n      : @86 [@dyn 31] (gas: 25)\n  2847: t0 = a0 + a3\n  2850: a0 = u64 [s1 + 0x130]\n  2854: a0 = t1 <u a0\n  2857: a3 = u64 [s1 + 0x120]\n  2861: a0 = a0 + a3\n  2864: a3 = t1 >> 0x5\n  2867: a5 = a0 << 0x3b\n  2870: a3 = a3 | a5\n  2873: a0 = a0 >> 0x5\n  2876: a0 = a0 + a4\n  2879: a5 = s1 + 0x100\n  2883: a4 = u64 [a5 + 0x38]\n  2886: a3 = a3 + a1\n  2889: a1 = a3 <u a1\n  2892: a0 = a0 + a1\n  2895: a2 = a2 + a3\n  2898: u64 [a5 + 0x8] = a2\n  2901: a1 = a2 <u a3\n  2904: a0 = a0 + a1\n  2907: u64 [a5] = a0\n  2909: a0 = sp + 0xffffffffffffffe0\n  2912: t1 = a0 & 0xffffffffffffffe0\n  2915: sp = t1\n  2917: u64 [s1 + 0xf8] = t1\n  2921: fallthrough\n      : @87 (gas: 20)\n  2922: a0 = u64 [s1 + 0x118]\n  2926: a0 = t2 <u a0\n  2929: a2 = u64 [s1 + 0x110]\n  2933: a1 = a4 ^ a2\n  2936: a2 = a4 <u a2\n  2939: a2 = a0 if a1 == 0\n  2942: a5 = u64 [s1 + 0x108]\n  2946: a0 = ra <u a5\n  2949: a3 = u64 [s1 + 0x100]\n  2953: a1 = t0 ^ a3\n  2956: a3 = t0 <u a3\n  2959: a3 = a0 if a1 == 0\n  2962: a0 = ra ^ a5\n  2965: a0 = a0 | a1\n  2968: a3 = a2 if a0 == 0\n  2971: u64 [t1] = t2\n  2973: u64 [t1 + 0x8] = a4\n  2976: u64 [t1 + 0x10] = ra\n  2979: u64 [t1 + 0x18] = t0\n  2982: jump @90 if a3 == 0\n      : @88 (gas: 16)\n  2985: a0 = s1 + 0x1000\n  2989: u64 [a0 + 4294965400] = 0\n  2993: a0 = s1 + 0x1000\n  2997: u64 [a0 + 4294965392] = 0\n  3001: a0 = s1 + 0x1000\n  3005: u64 [a0 + 4294965384] = 0\n  3009: a0 = s1 + 0x1000\n  3013: u64 [a0 + 4294965376] = 0\n  3017: a1 = s1 + 0x7ff\n  3021: a1 = a1 + 0x81\n  3025: a0 = t1\n  3027: u64 [s1 + 0x130] = t2\n  3031: u64 [s1 + 0x138] = a4\n  3035: u64 [s1 + 0x128] = t0\n  3039: u64 [s1 + 0x120] = ra\n  3043: ra = 64, jump @24\n      : @89 [@dyn 32] (gas: 15)\n  3048: t1 = u64 [s1 + 0xf8]\n  3052: t0 = u64 [s1 + 0x128]\n  3056: a4 = u64 [s1 + 0x138]\n  3060: t2 = u64 [s1 + 0x130]\n  3064: t2 = t2 + 0x1\n  3067: a0 = t2 <u 0x1\n  3070: a4 = a4 + a0\n  3073: a0 = t2 | a4\n  3076: a0 = a0 <u 0x1\n  3079: a1 = u64 [s1 + 0x120]\n  3083: a0 = a0 + a1\n  3086: a1 = a0 <u a1\n  3089: t0 = t0 + a1\n  3092: ra = a0\n  3094: jump @87\n      : @90 (gas: 26)\n  3097: a0 = u64 [s1 + 0xb0]\n  3101: a0 = a0 ^ 0x1\n  3104: a4 = u64 [s1 + 0xe8]\n  3108: a1 = u64 [s1 + 0x50]\n  3111: a0 = a1 if a4 != 0\n  3114: a1 = u64 [s1 + 0xa8]\n  3118: a2 = u64 [s1 + 0xd8]\n  3122: a0 = a1 if a2 != 0\n  3125: t1 = u64 [s1 + 0xe0]\n  3129: a1 = a4 | t1\n  3132: u64 [s1 + 0xb0] = a1\n  3136: a1 = u64 [s1 + 0x58]\n  3139: t2 = a1 >> 0x3f\n  3142: t1 = t1 << 0x1\n  3145: a5 = a4 >> 0x3f\n  3148: t0 = a1 << 0x1\n  3151: a3 = u64 [s1 + 0x60]\n  3154: ra = a3 >> 0x3f\n  3157: a4 = a4 << 0x1\n  3160: a2 = a3 << 0x1\n  3163: u64 [s1 + 0x48] = a2\n  3166: u64 [s1 + 0x40] = t1\n  3169: u64 [s1 + 0x38] = ra\n  3172: u64 [s1 + 0x30] = a5\n  3175: u64 [s1 + 0x50] = t0\n  3178: jump @101 if a0 == 0\n      : @91 (gas: 11)\n  3182: u64 [s1 + 0x28] = a4\n  3185: u64 [s1 + 0x20] = t2\n  3188: a3 = a3 & 0xffffffffffffffe0\n  3191: u64 [s1 + 0xa8] = a3\n  3195: u64 [s1 + 1592] = 0\n  3199: u64 [s1 + 1584] = 0\n  3203: u64 [s1 + 1576] = 0\n  3207: a1 = s1 + 0x620\n  3211: u64 [s1 + 1568] = 0x3\n  3216: a0 = 0\n  3218: ra = 66, jump @19\n      : @92 [@dyn 33] (gas: 7)\n  3223: a0 = sp + 0xffffffffffffffe0\n  3226: a0 = a0 & 0xffffffffffffffe0\n  3229: u64 [s1 + 0x118] = a0\n  3233: sp = a0\n  3235: a1 = 0x20\n  3238: a0 = 0\n  3240: ra = 68, jump @33\n      : @93 [@dyn 34] (gas: 35)\n  3245: a1 = sp + 0xffffffffffffffe0\n  3248: a1 = a1 & 0xffffffffffffffe0\n  3251: u64 [s1 + 0x110] = a1\n  3255: sp = a1\n  3257: i32 a0 = a0 + 0\n  3259: i32 a2 = a1 + 0\n  3261: a1 = 0x20\n  3264: ecalli 6 // 'hash_keccak_256'\n  3266: u64 [s1 + 312] = 0x20\n  3271: t0 = 0\n  3273: u64 [s1 + 304] = 0\n  3277: u64 [s1 + 296] = 0\n  3281: a4 = 0\n  3283: a5 = 0\n  3285: ra = 0\n  3287: u64 [s1 + 288] = 0\n  3291: a3 = u64 [s1 + 0x110]\n  3295: a0 = u64 [a3 + 0x18]\n  3298: a1 = u64 [a3 + 0x10]\n  3301: a2 = u64 [a3 + 0x8]\n  3304: t1 = u64 [a3]\n  3306: a0 = reverse a0\n  3308: a1 = reverse a1\n  3310: a3 = reverse a2\n  3312: t1 = reverse t1\n  3314: t2 = t1\n  3316: a2 = u64 [s1 + 0x118]\n  3320: u64 [a2 + 0x18] = t1\n  3323: u64 [s1 + 0xf0] = a3\n  3327: u64 [a2 + 0x10] = a3\n  3330: u64 [s1 + 0x110] = a1\n  3334: u64 [a2 + 0x8] = a1\n  3337: a3 = a0\n  3339: u64 [a2] = a0\n  3341: fallthrough\n      : @94 (gas: 25)\n  3342: u64 [s1 + 0x108] = t2\n  3346: t1 = a3\n  3348: a0 = u64 [s1 + 0xa8]\n  3352: u64 [s1 + 0x100] = a4\n  3356: a0 = a4 <u a0\n  3359: a4 = a0 ^ 0x1\n  3362: u64 [s1 + 0xf8] = a5\n  3366: a4 = 0x1 if a5 != 0\n  3369: a5 = s1 + 0x100\n  3373: a0 = u64 [a5 + 0x20]\n  3376: a0 = ra | a0\n  3379: a4 = 0x1 if a0 != 0\n  3382: a1 = u64 [s1 + 0xd0]\n  3386: a0 = u64 [a5 + 0x38]\n  3389: a1 = a1 + a0\n  3392: a3 = u64 [s1 + 0xb8]\n  3396: a3 = a3 + t0\n  3399: a2 = u64 [s1 + 0xc0]\n  3403: a0 = u64 [a5 + 0x30]\n  3406: a2 = a2 + a0\n  3409: a0 = u64 [s1 + 0xc8]\n  3413: t2 = u64 [s1 + 0x128]\n  3417: t2 = t2 + a0\n  3420: a0 = u64 [s1 + 0xb0]\n  3424: jump @103 if a4 != 0\n      : @95 (gas: 9)\n  3428: a0 = u64 [s1 + 0x138]\n  3432: a4 = a1 <u a0\n  3435: a3 = a3 + a4\n  3438: a0 = t0\n  3440: t0 = a3 ^ t0\n  3443: u64 [s1 + 0xe0] = a0\n  3447: a5 = a3 <u a0\n  3450: a5 = a4 if t0 == 0\n  3453: t0 = 70, jump @1355\n      : @96 [@dyn 35] (gas: 2)\n  3458: u64 [s1 + 0xe8] = t1\n  3462: jump @98 if a0 == 0\n      : @97 (gas: 1)\n  3465: jump @216\n      : @98 (gas: 3)\n  3468: a0 = s1 + 0x1c0\n  3472: u64 [s1 + 0xd8] = ra\n  3476: ra = 72, jump @17\n      : @99 [@dyn 36] (gas: 16)\n  3481: a0 = u64 [s1 + 0x1d8]\n  3485: a1 = u64 [s1 + 0x1d0]\n  3489: a2 = u64 [s1 + 0x1c8]\n  3493: a3 = u64 [s1 + 0x1c0]\n  3497: a4 = s1 + 0x7ff\n  3501: a4 = a4 + 0xb9\n  3505: u64 [a4] = a0\n  3507: u64 [a4 + 0xfffffffffffffff8] = a1\n  3510: a0 = s1 + 0x1000\n  3514: u64 [a0 + 0xfffffffffffff8a8] = a2\n  3518: a0 = s1 + 0x1000\n  3522: u64 [a0 + 0xfffffffffffff8a0] = a3\n  3526: a1 = s1 + 0x7ff\n  3530: a1 = a1 + 0xa1\n  3534: a0 = u64 [s1 + 0x118]\n  3538: ra = 74, jump @24\n      : @100 [@dyn 37] (gas: 56)\n  3543: t2 = u64 [s1 + 0xe8]\n  3547: t2 = t2 + 0x1\n  3550: a0 = t2 <u 0x1\n  3553: t0 = u64 [s1 + 0x110]\n  3557: t0 = t0 + a0\n  3560: a0 = t2 | t0\n  3563: a0 = a0 <u 0x1\n  3566: a1 = u64 [s1 + 0xf0]\n  3570: t1 = a1 + a0\n  3573: a1 = t1 <u a1\n  3576: a0 = u64 [s1 + 0x108]\n  3580: a0 = a0 + a1\n  3583: a1 = u64 [s1 + 0x138]\n  3587: a2 = a1 + 0x20\n  3590: u64 [s1 + 0x108] = a2\n  3594: a3 = a2 <u a1\n  3597: a1 = u64 [s1 + 0xe0]\n  3601: a2 = a1 + a3\n  3604: u64 [s1 + 0xe8] = a2\n  3608: a4 = a2 <u a1\n  3611: a4 = a3 if a3 == 0\n  3614: a1 = u64 [s1 + 0x130]\n  3618: ra = a1 + a4\n  3621: a4 = ra <u a1\n  3624: a1 = u64 [s1 + 0x128]\n  3628: a1 = a1 + a4\n  3631: u64 [s1 + 0x128] = a1\n  3635: a1 = u64 [s1 + 0x100]\n  3639: a4 = a1 + 0x20\n  3642: a5 = a4 <u a1\n  3645: a2 = u64 [s1 + 0xf8]\n  3649: a1 = a2 + a5\n  3652: a2 = a1 <u a2\n  3655: a2 = a5 if a5 == 0\n  3658: a3 = u64 [s1 + 0xd8]\n  3662: a2 = a2 + a3\n  3665: a5 = a2 <u a3\n  3668: a3 = u64 [s1 + 0x120]\n  3672: a3 = a3 + a5\n  3675: u64 [s1 + 0x120] = a3\n  3679: u64 [s1 + 0x110] = t0\n  3683: a5 = u64 [s1 + 0x118]\n  3687: u64 [a5 + 0x8] = t0\n  3690: a3 = t2\n  3692: u64 [a5] = t2\n  3694: u64 [a5 + 0x10] = t1\n  3697: t2 = a0\n  3699: u64 [a5 + 0x18] = a0\n  3702: u64 [s1 + 0xf0] = t1\n  3706: a0 = u64 [s1 + 0x108]\n  3710: u64 [s1 + 0x138] = a0\n  3714: t0 = u64 [s1 + 0xe8]\n  3718: u64 [s1 + 0x130] = ra\n  3722: a5 = a1\n  3724: ra = a2\n  3726: jump @94\n      : @101 (gas: 4)\n  3729: a0 = a3 | a1\n  3732: a1 = u64 [s1 + 0xb0]\n  3736: a0 = a0 | a1\n  3739: jump @118 if a0 != 0\n      : @102 (gas: 9)\n  3743: u64 [s1 + 288] = 0\n  3747: u64 [s1 + 280] = 0\n  3751: u64 [s1 + 296] = 0\n  3755: u64 [s1 + 304] = 0\n  3759: t1 = u64 [s1 + 0x40]\n  3762: t0 = u64 [s1 + 0x38]\n  3765: a1 = u64 [s1 + 0x30]\n  3768: a5 = u64 [s1 + 0x50]\n  3771: jump @120\n      : @103 (gas: 10)\n  3774: ra = t0\n  3776: t1 = u64 [s1 + 0x60]\n  3779: a4 = u64 [s1 + 0xa8]\n  3783: a4 = a4 ^ t1\n  3786: a5 = u64 [s1 + 0x58]\n  3789: a4 = a4 | a5\n  3792: a4 = a4 | a0\n  3795: t0 = u64 [s1 + 0x28]\n  3798: a5 = u64 [s1 + 0x50]\n  3801: jump @117 if a4 == 0\n      : @104 (gas: 7)\n  3805: a0 = u64 [s1 + 0x138]\n  3809: a4 = a1 <u a0\n  3812: a3 = a3 + a4\n  3815: t0 = a3 ^ ra\n  3818: a5 = a3 <u ra\n  3821: a5 = a4 if t0 == 0\n  3824: t0 = 76, jump @1355\n      : @105 [@dyn 38] (gas: 1)\n  3829: jump @107 if a0 == 0\n      : @106 (gas: 1)\n  3832: jump @216\n      : @107 (gas: 2)\n  3835: a0 = s1 + 0x600\n  3839: ra = 78, jump @17\n      : @108 [@dyn 39] (gas: 11)\n  3844: a1 = s1 + 0x600\n  3848: a0 = u64 [a1 + 0x18]\n  3851: u64 [s1 + 0x130] = a0\n  3855: a0 = u64 [a1 + 0x10]\n  3858: u64 [s1 + 0x128] = a0\n  3862: a0 = u64 [a1 + 0x8]\n  3865: u64 [s1 + 0x120] = a0\n  3869: a0 = u64 [a1]\n  3871: u64 [s1 + 0x110] = a0\n  3875: a0 = u64 [s1 + 0x60]\n  3878: t0 = 80, jump @1388\n      : @109 [@dyn 40] (gas: 1)\n  3883: ra = 82, jump @1404\n      : @110 [@dyn 41] (gas: 6)\n  3888: u64 [s1 + 0x108] = a0\n  3892: u64 [s1 + 0xf0] = a1\n  3896: a0 = 0xffffffffffffffff\n  3899: a1 = 0xffffffffffffffff\n  3902: a2 = u64 [s1 + 0x138]\n  3906: ra = 84, jump @1399\n      : @111 [@dyn 42] (gas: 1)\n  3911: t0 = 86, jump @1379\n      : @112 [@dyn 43] (gas: 1)\n  3916: ra = 88, jump @1399\n      : @113 [@dyn 44] (gas: 1)\n  3921: t0 = 90, jump @1342\n      : @114 [@dyn 45] (gas: 2)\n  3926: a2 = u64 [s1 + 0x120]\n  3930: t0 = 92, jump @1371\n      : @115 [@dyn 46] (gas: 8)\n  3935: u64 [a4 + 0x20] = a3\n  3938: u64 [a4 + 0x18] = a2\n  3941: u64 [a4 + 0x10] = a1\n  3944: u64 [a4 + 0x8] = a0\n  3947: a1 = s1 + 0x7ff\n  3951: a1 = a1 + 0xc1\n  3955: a0 = u64 [s1 + 0x118]\n  3959: ra = 94, jump @24\n      : @116 [@dyn 47] (gas: 3)\n  3964: a5 = u64 [s1 + 0x50]\n  3967: t0 = u64 [s1 + 0x28]\n  3970: fallthrough\n      : @117 (gas: 25)\n  3971: a0 = u64 [s1 + 0x20]\n  3974: a1 = u64 [s1 + 0x40]\n  3977: a0 = a0 | a1\n  3980: a1 = u64 [s1 + 0x30]\n  3983: a1 = a1 | a5\n  3986: a2 = u64 [s1 + 0x38]\n  3989: a2 = t0 | a2\n  3992: a3 = u64 [s1 + 0x48]\n  3995: a3 = a3 + 0x1\n  3998: a5 = s1 + 0x7ff\n  4002: a5 = a5 + 0xb9\n  4006: u64 [a5 + 64] = 0\n  4009: u64 [a5 + 56] = 0\n  4012: u64 [a5 + 48] = 0\n  4015: u64 [a5 + 40] = 0x3\n  4019: u64 [a5 + 0x48] = a3\n  4022: u64 [a5 + 0x50] = a2\n  4025: u64 [a5 + 0x58] = a1\n  4028: u64 [a5 + 0x60] = a0\n  4031: a0 = s1 + 0x7ff\n  4035: a0 = a0 + 0xe1\n  4039: a1 = s1 + 0x7ff\n  4043: a1 = a1 + 0x101\n  4047: ra = 0x6e\n  4050: jump @24\n      : @118 (gas: 5)\n  4053: a0 = s1 + 0x640\n  4057: a1 = u64 [s1 + 0xf0]\n  4061: u64 [s1 + 0x20] = t2\n  4064: u64 [s1 + 0x28] = a4\n  4067: ra = 96, jump @17\n      : @119 [@dyn 48] (gas: 17)\n  4072: a5 = u64 [s1 + 0x50]\n  4075: a4 = u64 [s1 + 0x28]\n  4078: a1 = u64 [s1 + 0x30]\n  4081: t0 = u64 [s1 + 0x38]\n  4084: t1 = u64 [s1 + 0x40]\n  4087: t2 = u64 [s1 + 0x20]\n  4090: a3 = u64 [s1 + 0x60]\n  4093: a2 = s1 + 0x600\n  4097: a0 = u64 [a2 + 0x58]\n  4100: u64 [s1 + 0x130] = a0\n  4104: a0 = u64 [a2 + 0x50]\n  4107: u64 [s1 + 0x128] = a0\n  4111: a0 = u64 [a2 + 0x48]\n  4114: u64 [s1 + 0x118] = a0\n  4118: a0 = u64 [a2 + 0x40]\n  4121: u64 [s1 + 0x120] = a0\n  4125: fallthrough\n      : @120 (gas: 7)\n  4126: a0 = a5 | a1\n  4129: u64 [s1 + 0x110] = a0\n  4133: a0 = t1 | t2\n  4136: u64 [s1 + 0x108] = a0\n  4140: a0 = a4 | t0\n  4143: u64 [s1 + 0x100] = a0\n  4147: t0 = 98, jump @1394\n      : @121 [@dyn 49] (gas: 1)\n  4152: ra = 100, jump @1404\n      : @122 [@dyn 50] (gas: 7)\n  4157: u64 [s1 + 0xe0] = a0\n  4161: u64 [s1 + 0xf8] = a1\n  4165: a0 = u64 [s1 + 0x60]\n  4168: i32 a2 = a0 << 0x3\n  4171: a0 = 0xffffffffffffffff\n  4174: a1 = 0xffffffffffffffff\n  4177: ra = 102, jump @1399\n      : @123 [@dyn 51] (gas: 10)\n  4182: u64 [s1 + 0xf0] = a0\n  4186: u64 [s1 + 0xe8] = a1\n  4190: a1 = u64 [s1 + 0xe0]\n  4194: a0 = a0 | a1\n  4197: u64 [s1 + 0xe0] = a0\n  4201: a0 = u64 [s1 + 0x138]\n  4205: i32 a2 = a0 + 0xffffffffffffff80\n  4208: a0 = 0xffffffffffffffff\n  4211: a1 = 0xffffffffffffffff\n  4214: ra = 104, jump @1399\n      : @124 [@dyn 52] (gas: 7)\n  4219: a4 = u64 [s1 + 0x138]\n  4223: a2 = a4 <u 0x80\n  4227: a3 = u64 [s1 + 0xe0]\n  4231: a0 = a3 if a2 != 0\n  4234: a5 = u64 [s1 + 0xe8]\n  4238: a3 = u64 [s1 + 0xf8]\n  4242: t0 = 106, jump @1396\n      : @125 [@dyn 53] (gas: 2)\n  4247: a4 = u64 [s1 + 0xf0]\n  4251: t0 = 108, jump @1356\n      : @126 [@dyn 54] (gas: 24)\n  4256: a4 = u64 [s1 + 0x48]\n  4259: a0 = a0 | a4\n  4262: a5 = s1 + 0x100\n  4266: a4 = u64 [a5]\n  4268: a1 = a1 | a4\n  4271: a4 = u64 [a5 + 0x8]\n  4274: a3 = a3 | a4\n  4277: a4 = u64 [a5 + 0x10]\n  4280: a2 = a2 | a4\n  4283: a5 = s1 + 0x7ff\n  4287: a5 = a5 + 0xb9\n  4291: u64 [a5 + 104] = 0x3\n  4295: u64 [a5 + 0x98] = a2\n  4299: u64 [a5 + 0xa0] = a3\n  4303: u64 [a5 + 0x90] = a1\n  4307: u64 [a5 + 0x88] = a0\n  4311: u64 [a5 + 128] = 0\n  4315: u64 [a5 + 120] = 0\n  4318: u64 [a5 + 112] = 0\n  4321: a0 = s1 + 0x7ff\n  4325: a0 = a0 + 0x121\n  4329: a1 = s1 + 0x7ff\n  4333: a1 = a1 + 0x141\n  4337: ra = 110, jump @24\n      : @127 [@dyn 55] (gas: 3)\n  4342: a0 = s1 + 0x5e0\n  4346: a1 = u64 [s1 + 0xa0]\n  4350: ra = 112, jump @17\n      : @128 [@dyn 56] (gas: 17)\n  4355: a0 = s1 + 0x500\n  4359: a3 = u64 [a0 + 0xf8]\n  4363: a2 = u64 [a0 + 0xf0]\n  4367: a1 = u64 [a0 + 0xe8]\n  4371: a0 = a3 >u 0\n  4373: a4 = a2 >u 0\n  4375: a4 = a0 if a3 != 0\n  4378: u64 [s1 + 0xb8] = a1\n  4382: a0 = a1 >u 0\n  4384: u64 [s1 + 0xb0] = a2\n  4388: u64 [s1 + 0xa8] = a3\n  4392: a2 = a2 | a3\n  4395: u64 [s1 + 0xd8] = a0\n  4399: u64 [s1 + 0xe0] = a4\n  4403: u64 [s1 + 0xf0] = a2\n  4407: a0 = a4 if a2 != 0\n  4410: jump @231 if a0 != 0\n      : @129 (gas: 12)\n  4414: a0 = u64 [s1 + 0x5e0]\n  4418: u64 [s1 + 0xc0] = a0\n  4422: a1 = s1 + 0x7ff\n  4426: a1 = a1 + 0xb9\n  4430: u64 [a1 + 192] = 0\n  4434: u64 [a1 + 184] = 0\n  4438: u64 [a1 + 176] = 0\n  4442: u64 [a1 + 168] = 0x4\n  4447: a0 = s1 + 0x5c0\n  4451: a1 = s1 + 0x7ff\n  4455: a1 = a1 + 0x161\n  4459: ra = 114, jump @21\n      : @130 [@dyn 57] (gas: 6)\n  4464: a4 = s1 + 0x500\n  4468: a0 = u64 [a4 + 0xd0]\n  4472: a1 = u64 [a4 + 0xc8]\n  4476: a2 = u64 [a4 + 0xc0]\n  4480: a3 = u64 [a4 + 0xd8]\n  4484: t0 = 116, jump @1357\n      : @131 [@dyn 58] (gas: 12)\n  4489: t0 = a2 <u 0x1\n  4492: ra = a1 & 0x7f\n  4495: t2 = a5 & a0\n  4498: a4 = a5 & t1\n  4501: ra = a1 if a2 != 0\n  4504: a1 = ra <u 0x20\n  4507: a5 = a5 & a3\n  4510: a2 = a1\n  4512: a2 = 0 if a4 != 0\n  4514: a0 = t2 | a5\n  4517: a2 = 0 if a0 != 0\n  4519: jump @237 if t0 != a2\n      : @132 (gas: 1)\n  4523: t0 = 118, jump @1368\n      : @133 [@dyn 59] (gas: 4)\n  4528: a0 = u64 [s1 + 0xc0]\n  4532: a0 = a0 <u 0x20\n  4535: u64 [s1 + 0xe8] = a0\n  4539: jump @145 if a3 == 0\n      : @134 (gas: 11)\n  4543: u64 [s1 + 0x110] = a4\n  4547: u64 [s1 + 0x118] = ra\n  4551: u64 [s1 + 0x120] = a5\n  4555: u64 [s1 + 0x130] = t2\n  4559: u64 [s1 + 1464] = 0\n  4563: u64 [s1 + 1456] = 0\n  4567: u64 [s1 + 1448] = 0\n  4571: a1 = s1 + 0x5a0\n  4575: u64 [s1 + 1440] = 0x4\n  4580: a0 = 0\n  4582: ra = 120, jump @19\n      : @135 [@dyn 60] (gas: 2)\n  4587: a1 = i32 [0x2026c]\n  4592: jump @137 if a1 >u 31\n      : @136 (gas: 2)\n  4596: u32 [0x2026c] = 0x20\n  4602: fallthrough\n      : @137 (gas: 11)\n  4603: a0 = sp + 0xffffffffffffffe0\n  4606: a2 = a0 & 0xffffffffffffffe0\n  4609: u64 [s1 + 0x128] = a2\n  4613: sp = a2\n  4615: a0 = 0x20280\n  4620: i32 a0 = a0 + 0\n  4622: i32 a2 = a2 + 0\n  4624: a1 = 0x20\n  4627: ra = 0x7a\n  4630: ecalli 6 // 'hash_keccak_256'\n  4632: fallthrough\n      : @138 [@dyn 61] (gas: 9)\n  4633: a0 = u64 [s1 + 0xc0]\n  4637: a1 = a0 + 0x1f\n  4640: a0 = a1 <u a0\n  4643: a5 = u64 [s1 + 0xb8]\n  4647: a2 = a5 + a0\n  4650: a3 = a2 <u a5\n  4653: a3 = a0 if a0 == 0\n  4656: a4 = u64 [s1 + 0xb0]\n  4660: t0 = 124, jump @1352\n      : @139 [@dyn 62] (gas: 35)\n  4665: a1 = u64 [s1 + 0xe8]\n  4669: a1 = 0 if a5 != 0\n  4671: a3 = u64 [s1 + 0xf0]\n  4675: a1 = 0 if a3 != 0\n  4677: a4 = 0 if a1 != 0\n  4679: a0 = 0 if a1 != 0\n  4681: t0 = t2 + a0\n  4684: a0 = t0 <u t2\n  4687: a5 = a2 + a0\n  4690: a4 = a4 + a5\n  4693: u64 [s1 + 0x138] = a4\n  4697: a5 = a4 ^ a2\n  4700: a3 = a4 <u a2\n  4703: a3 = a0 if a5 == 0\n  4706: u64 [s1 + 0x100] = a3\n  4710: a0 = u64 [s1 + 0x118]\n  4714: ra = a0 + 0x1f\n  4717: a4 = ra <u a0\n  4720: a3 = u64 [s1 + 0x110]\n  4724: a0 = a3 + a4\n  4727: a5 = a0 <u a3\n  4730: a5 = a4 if a4 == 0\n  4733: t1 = u64 [s1 + 0x130]\n  4737: t1 = t1 + a5\n  4740: a4 = t1 << 0x3b\n  4743: a3 = a0 >> 0x5\n  4746: a3 = a3 | a4\n  4749: a0 = a0 << 0x3b\n  4752: a4 = ra >> 0x5\n  4755: a0 = a0 | a4\n  4758: a0 = a0 + t2\n  4761: u64 [s1 + 0x118] = a0\n  4765: a0 = a0 <u t2\n  4768: t2 = t0\n  4770: t0 = 126, jump @1375\n      : @140 [@dyn 63] (gas: 16)\n  4775: a0 = u64 [s1 + 0xb0]\n  4779: a0 = a4 <u a0\n  4782: a3 = u64 [s1 + 0xa8]\n  4786: a0 = a0 + a3\n  4789: a3 = a4 >> 0x5\n  4792: a4 = a0 << 0x3b\n  4795: a3 = a3 | a4\n  4798: a4 = u64 [s1 + 0x128]\n  4802: t0 = u64 [a4]\n  4804: a4 = u64 [a4 + 0x8]\n  4807: a0 = a0 >> 0x5\n  4810: a3 = 0 if a1 != 0\n  4812: a0 = 0 if a1 != 0\n  4814: a1 = reverse a4\n  4816: a4 = reverse t0\n  4818: t0 = 128, jump @1393\n      : @141 [@dyn 64] (gas: 25)\n  4824: t0 = a0 + a3\n  4827: a0 = u64 [s1 + 0x130]\n  4831: a0 = t1 <u a0\n  4834: a3 = u64 [s1 + 0x120]\n  4838: a0 = a0 + a3\n  4841: a3 = t1 >> 0x5\n  4844: a5 = a0 << 0x3b\n  4847: a3 = a3 | a5\n  4850: a0 = a0 >> 0x5\n  4853: a0 = a0 + a4\n  4856: a5 = s1 + 0x100\n  4860: a4 = u64 [a5 + 0x38]\n  4863: a3 = a3 + a1\n  4866: a1 = a3 <u a1\n  4869: a0 = a0 + a1\n  4872: a2 = a2 + a3\n  4875: u64 [a5 + 0x8] = a2\n  4878: a1 = a2 <u a3\n  4881: a0 = a0 + a1\n  4884: u64 [a5] = a0\n  4886: a0 = sp + 0xffffffffffffffe0\n  4889: t1 = a0 & 0xffffffffffffffe0\n  4892: sp = t1\n  4894: u64 [s1 + 0xf8] = t1\n  4898: fallthrough\n      : @142 (gas: 20)\n  4899: a0 = u64 [s1 + 0x118]\n  4903: a0 = t2 <u a0\n  4906: a2 = u64 [s1 + 0x110]\n  4910: a1 = a4 ^ a2\n  4913: a2 = a4 <u a2\n  4916: a2 = a0 if a1 == 0\n  4919: a5 = u64 [s1 + 0x108]\n  4923: a0 = ra <u a5\n  4926: a3 = u64 [s1 + 0x100]\n  4930: a1 = t0 ^ a3\n  4933: a3 = t0 <u a3\n  4936: a3 = a0 if a1 == 0\n  4939: a0 = ra ^ a5\n  4942: a0 = a0 | a1\n  4945: a3 = a2 if a0 == 0\n  4948: u64 [t1] = t2\n  4950: u64 [t1 + 0x8] = a4\n  4953: u64 [t1 + 0x10] = ra\n  4956: u64 [t1 + 0x18] = t0\n  4959: jump @145 if a3 == 0\n      : @143 (gas: 14)\n  4962: a0 = s1 + 0x7ff\n  4966: a0 = a0 + 0xb9\n  4970: u64 [a0 + 224] = 0\n  4974: u64 [a0 + 216] = 0\n  4978: u64 [a0 + 208] = 0\n  4982: u64 [a0 + 200] = 0\n  4986: a1 = s1 + 0x7ff\n  4990: a1 = a1 + 0x181\n  4994: a0 = t1\n  4996: u64 [s1 + 0x130] = t2\n  5000: u64 [s1 + 0x138] = a4\n  5004: u64 [s1 + 0x128] = t0\n  5008: u64 [s1 + 0x120] = ra\n  5012: ra = 130, jump @24\n      : @144 [@dyn 65] (gas: 15)\n  5018: t1 = u64 [s1 + 0xf8]\n  5022: t0 = u64 [s1 + 0x128]\n  5026: a4 = u64 [s1 + 0x138]\n  5030: t2 = u64 [s1 + 0x130]\n  5034: t2 = t2 + 0x1\n  5037: a0 = t2 <u 0x1\n  5040: a4 = a4 + a0\n  5043: a0 = t2 | a4\n  5046: a0 = a0 <u 0x1\n  5049: a1 = u64 [s1 + 0x120]\n  5053: a0 = a0 + a1\n  5056: a1 = a0 <u a1\n  5059: t0 = t0 + a1\n  5062: ra = a0\n  5064: jump @142\n      : @145 (gas: 9)\n  5067: a0 = u64 [s1 + 0xe8]\n  5071: a0 = a0 ^ 0x1\n  5074: a2 = u64 [s1 + 0xb8]\n  5078: a1 = u64 [s1 + 0xd8]\n  5082: a0 = a1 if a2 != 0\n  5085: a1 = u64 [s1 + 0xe0]\n  5089: a3 = u64 [s1 + 0xf0]\n  5093: a0 = a1 if a3 != 0\n  5096: jump @155 if a0 == 0\n      : @146 (gas: 10)\n  5100: a0 = u64 [s1 + 0xc0]\n  5104: a0 = a0 & 0xffffffffffffffe0\n  5107: u64 [s1 + 0xc8] = a0\n  5111: u64 [s1 + 1400] = 0\n  5115: u64 [s1 + 1392] = 0\n  5119: u64 [s1 + 1384] = 0\n  5123: a1 = s1 + 0x560\n  5127: u64 [s1 + 1376] = 0x4\n  5132: a0 = 0\n  5134: ra = 132, jump @19\n      : @147 [@dyn 66] (gas: 7)\n  5140: a0 = sp + 0xffffffffffffffe0\n  5143: a0 = a0 & 0xffffffffffffffe0\n  5146: u64 [s1 + 0x120] = a0\n  5150: sp = a0\n  5152: a1 = 0x20\n  5155: a0 = 0\n  5157: ra = 134, jump @33\n      : @148 [@dyn 67] (gas: 39)\n  5163: a1 = sp + 0xffffffffffffffe0\n  5166: a1 = a1 & 0xffffffffffffffe0\n  5169: u64 [s1 + 0x118] = a1\n  5173: sp = a1\n  5175: i32 a0 = a0 + 0\n  5177: i32 a2 = a1 + 0\n  5179: a1 = 0x20\n  5182: ecalli 6 // 'hash_keccak_256'\n  5184: u64 [s1 + 312] = 0x20\n  5189: a5 = 0\n  5191: u64 [s1 + 296] = 0\n  5195: u64 [s1 + 304] = 0\n  5199: a4 = 0\n  5201: a3 = 0\n  5203: a2 = 0\n  5205: t1 = 0\n  5207: a0 = u64 [s1 + 0x118]\n  5211: t0 = u64 [a0 + 0x18]\n  5214: a1 = u64 [a0 + 0x10]\n  5217: ra = u64 [a0 + 0x8]\n  5220: a0 = u64 [a0]\n  5222: u64 [s1 + 0x110] = a0\n  5226: a0 = reverse t0\n  5228: u64 [s1 + 0x118] = a0\n  5232: t2 = reverse a1\n  5234: t0 = reverse ra\n  5236: a0 = u64 [s1 + 0x110]\n  5240: a1 = reverse a0\n  5242: ra = a1\n  5244: a0 = u64 [s1 + 0x120]\n  5248: u64 [a0 + 0x18] = a1\n  5251: a1 = t0\n  5253: u64 [s1 + 0xd8] = a1\n  5257: u64 [a0 + 0x10] = a1\n  5260: u64 [s1 + 0x108] = t2\n  5264: u64 [a0 + 0x8] = t2\n  5267: a1 = u64 [s1 + 0x118]\n  5271: u64 [a0] = a1\n  5273: fallthrough\n      : @149 (gas: 24)\n  5274: u64 [s1 + 0x100] = ra\n  5278: a0 = u64 [s1 + 0xc8]\n  5282: u64 [s1 + 0xf0] = a4\n  5286: a0 = a4 <u a0\n  5289: a4 = a0 ^ 0x1\n  5292: u64 [s1 + 0xe8] = a3\n  5296: a4 = 0x1 if a3 != 0\n  5299: u64 [s1 + 0x110] = t1\n  5303: u64 [s1 + 0xf8] = a2\n  5307: a0 = a2 | t1\n  5310: a4 = 0x1 if a0 != 0\n  5313: a0 = u64 [s1 + 0xa0]\n  5317: a1 = u64 [s1 + 0x138]\n  5321: a1 = a1 + a0\n  5324: a3 = u64 [s1 + 0x90]\n  5328: u64 [s1 + 0xe0] = a5\n  5332: t0 = a3 + a5\n  5335: t2 = u64 [s1 + 0x98]\n  5339: a2 = u64 [s1 + 0x128]\n  5343: a2 = a2 + t2\n  5346: t1 = u64 [s1 + 0x88]\n  5350: a5 = u64 [s1 + 0x130]\n  5354: t1 = t1 + a5\n  5357: jump @157 if a4 != 0\n      : @150 (gas: 6)\n  5361: ra = a1 <u a0\n  5364: a4 = t0 + ra\n  5367: t0 = a4 ^ a3\n  5370: a5 = a4 <u a3\n  5373: a5 = ra if t0 == 0\n  5376: t0 = 136, jump @1360\n      : @151 [@dyn 68] (gas: 1)\n  5382: jump @216 if a0 != 0\n      : @152 (gas: 2)\n  5386: a0 = s1 + 0x260\n  5390: ra = 138, jump @17\n      : @153 [@dyn 69] (gas: 15)\n  5396: a4 = s1 + 0x200\n  5400: a0 = u64 [a4 + 0x78]\n  5403: a1 = u64 [a4 + 0x70]\n  5406: a2 = u64 [a4 + 0x68]\n  5409: a3 = u64 [a4 + 0x60]\n  5412: a4 = s1 + 0x7ff\n  5416: a4 = a4 + 0xb9\n  5420: u64 [a4 + 0x100] = a0\n  5424: u64 [a4 + 0xf8] = a1\n  5428: u64 [a4 + 0xf0] = a2\n  5432: u64 [a4 + 0xe8] = a3\n  5436: a1 = s1 + 0x7ff\n  5440: a1 = a1 + 0x1a1\n  5444: a0 = u64 [s1 + 0x120]\n  5448: ra = 140, jump @24\n      : @154 [@dyn 70] (gas: 54)\n  5454: ra = u64 [s1 + 0x118]\n  5458: ra = ra + 0x1\n  5461: a0 = ra <u 0x1\n  5464: a3 = u64 [s1 + 0x108]\n  5468: a3 = a3 + a0\n  5471: a0 = ra | a3\n  5474: a0 = a0 <u 0x1\n  5477: a1 = u64 [s1 + 0xd8]\n  5481: a0 = a0 + a1\n  5484: a1 = a0 <u a1\n  5487: t0 = u64 [s1 + 0x100]\n  5491: t0 = t0 + a1\n  5494: a1 = u64 [s1 + 0x138]\n  5498: a2 = a1 + 0x20\n  5501: u64 [s1 + 0x100] = a2\n  5505: a1 = a2 <u a1\n  5508: a2 = u64 [s1 + 0xe0]\n  5512: a4 = a2 + a1\n  5515: u64 [s1 + 0xd0] = a4\n  5519: a4 = a4 <u a2\n  5522: a4 = a1 if a1 == 0\n  5525: a1 = u64 [s1 + 0x128]\n  5529: t2 = a1 + a4\n  5532: a4 = t2 <u a1\n  5535: a1 = u64 [s1 + 0x130]\n  5539: a1 = a1 + a4\n  5542: u64 [s1 + 0x130] = a1\n  5546: a1 = u64 [s1 + 0xf0]\n  5550: a4 = a1 + 0x20\n  5553: a5 = a4 <u a1\n  5556: a2 = u64 [s1 + 0xe8]\n  5560: a1 = a2 + a5\n  5563: a2 = a1 <u a2\n  5566: a2 = a5 if a5 == 0\n  5569: a5 = u64 [s1 + 0xf8]\n  5573: a2 = a2 + a5\n  5576: a5 = a2 <u a5\n  5579: t1 = u64 [s1 + 0x110]\n  5583: t1 = t1 + a5\n  5586: u64 [s1 + 0x108] = a3\n  5590: a5 = u64 [s1 + 0x120]\n  5594: u64 [a5 + 0x8] = a3\n  5597: u64 [s1 + 0x118] = ra\n  5601: u64 [a5] = ra\n  5603: u64 [a5 + 0x10] = a0\n  5606: ra = t0\n  5608: u64 [a5 + 0x18] = t0\n  5611: u64 [s1 + 0xd8] = a0\n  5615: a0 = u64 [s1 + 0x100]\n  5619: u64 [s1 + 0x138] = a0\n  5623: a5 = u64 [s1 + 0xd0]\n  5627: u64 [s1 + 0x128] = t2\n  5631: a3 = a1\n  5633: jump @149\n      : @155 (gas: 7)\n  5636: a3 = u64 [s1 + 0xc0]\n  5640: a4 = u64 [s1 + 0xb0]\n  5644: a0 = a3 | a4\n  5647: a5 = u64 [s1 + 0xa8]\n  5651: a1 = a2 | a5\n  5654: a0 = a0 | a1\n  5657: jump @171 if a0 != 0\n      : @156 (gas: 5)\n  5661: u64 [s1 + 288] = 0\n  5665: u64 [s1 + 280] = 0\n  5669: u64 [s1 + 296] = 0\n  5673: u64 [s1 + 304] = 0\n  5677: jump @173\n      : @157 (gas: 12)\n  5680: a4 = u64 [s1 + 0xc8]\n  5684: a5 = u64 [s1 + 0xc0]\n  5688: a4 = a4 ^ a5\n  5691: ra = u64 [s1 + 0xb0]\n  5695: a4 = a4 | ra\n  5698: u64 [s1 + 0x138] = a4\n  5702: a5 = u64 [s1 + 0xb8]\n  5706: a4 = u64 [s1 + 0xa8]\n  5710: a5 = a5 | a4\n  5713: a4 = u64 [s1 + 0x138]\n  5717: a4 = a4 | a5\n  5720: jump @170 if a4 == 0\n      : @158 (gas: 6)\n  5724: ra = a1 <u a0\n  5727: a4 = t0 + ra\n  5730: t0 = a4 ^ a3\n  5733: a5 = a4 <u a3\n  5736: a5 = ra if t0 == 0\n  5739: t0 = 142, jump @1360\n      : @159 [@dyn 71] (gas: 1)\n  5745: jump @216 if a0 != 0\n      : @160 (gas: 2)\n  5749: a0 = s1 + 0x540\n  5753: ra = 144, jump @17\n      : @161 [@dyn 72] (gas: 11)\n  5759: a1 = s1 + 0x500\n  5763: a0 = u64 [a1 + 0x58]\n  5766: u64 [s1 + 0x130] = a0\n  5770: a0 = u64 [a1 + 0x50]\n  5773: u64 [s1 + 0x128] = a0\n  5777: a0 = u64 [a1 + 0x48]\n  5780: u64 [s1 + 0x118] = a0\n  5784: a0 = u64 [a1 + 0x40]\n  5787: u64 [s1 + 0x110] = a0\n  5791: a0 = u64 [s1 + 0xc0]\n  5795: t0 = 146, jump @1388\n      : @162 [@dyn 73] (gas: 1)\n  5801: ra = 148, jump @1404\n      : @163 [@dyn 74] (gas: 6)\n  5807: u64 [s1 + 0x108] = a0\n  5811: u64 [s1 + 0xf0] = a1\n  5815: a0 = 0xffffffffffffffff\n  5818: a1 = 0xffffffffffffffff\n  5821: a2 = u64 [s1 + 0x138]\n  5825: ra = 150, jump @1399\n      : @164 [@dyn 75] (gas: 1)\n  5831: t0 = 152, jump @1379\n      : @165 [@dyn 76] (gas: 1)\n  5837: ra = 154, jump @1399\n      : @166 [@dyn 77] (gas: 1)\n  5843: t0 = 156, jump @1342\n      : @167 [@dyn 78] (gas: 2)\n  5849: a2 = u64 [s1 + 0x118]\n  5853: t0 = 158, jump @1371\n      : @168 [@dyn 79] (gas: 9)\n  5859: a5 = a4 + 0x100\n  5863: u64 [a5 + 0x20] = a3\n  5866: u64 [a5 + 0x18] = a2\n  5869: u64 [a5 + 0x10] = a1\n  5872: u64 [a5 + 0x8] = a0\n  5875: a1 = s1 + 0x7ff\n  5879: a1 = a1 + 0x1c1\n  5883: a0 = u64 [s1 + 0x120]\n  5887: ra = 160, jump @24\n      : @169 [@dyn 80] (gas: 2)\n  5893: ra = u64 [s1 + 0xb0]\n  5897: fallthrough\n      : @170 (gas: 31)\n  5898: a0 = ra >> 0x3f\n  5901: a1 = u64 [s1 + 0xa8]\n  5905: a1 = a1 << 0x1\n  5908: a0 = a0 | a1\n  5911: a3 = u64 [s1 + 0xb8]\n  5915: a1 = a3 >> 0x3f\n  5918: a2 = ra << 0x1\n  5921: a1 = a1 | a2\n  5924: a4 = u64 [s1 + 0xc0]\n  5928: a2 = a4 >> 0x3f\n  5931: a3 = a3 << 0x1\n  5934: a2 = a2 | a3\n  5937: a3 = a4 << 0x1\n  5940: a3 = a3 + 0x1\n  5943: a5 = s1 + 0x7ff\n  5947: a5 = a5 + 0xb9\n  5951: u64 [a5 + 320] = 0\n  5955: u64 [a5 + 312] = 0\n  5959: u64 [a5 + 304] = 0\n  5963: u64 [a5 + 296] = 0x4\n  5968: a4 = a5 + 0x100\n  5972: u64 [a4 + 0x48] = a3\n  5975: u64 [a4 + 0x50] = a2\n  5978: u64 [a4 + 0x58] = a1\n  5981: u64 [a4 + 0x60] = a0\n  5984: a0 = s1 + 0x7ff\n  5988: a0 = a0 + 0x1e1\n  5992: a1 = s1 + 0x7ff\n  5996: a1 = a1 + 0x201\n  6000: ra = 0xb0\n  6004: jump @24\n      : @171 (gas: 3)\n  6007: a0 = s1 + 0x580\n  6011: a1 = u64 [s1 + 0x18]\n  6014: ra = 162, jump @17\n      : @172 [@dyn 81] (gas: 14)\n  6020: a5 = u64 [s1 + 0xa8]\n  6024: a4 = u64 [s1 + 0xb0]\n  6028: a2 = u64 [s1 + 0xb8]\n  6032: a3 = u64 [s1 + 0xc0]\n  6036: a1 = s1 + 0x500\n  6040: a0 = u64 [a1 + 0x98]\n  6044: u64 [s1 + 0x130] = a0\n  6048: a0 = u64 [a1 + 0x90]\n  6052: u64 [s1 + 0x128] = a0\n  6056: a0 = u64 [a1 + 0x88]\n  6060: u64 [s1 + 0x118] = a0\n  6064: a0 = u64 [a1 + 0x80]\n  6068: u64 [s1 + 0x120] = a0\n  6072: fallthrough\n      : @173 (gas: 15)\n  6073: a0 = a2 >> 0x3f\n  6076: a1 = a4 << 0x1\n  6079: a0 = a0 | a1\n  6082: u64 [s1 + 0x110] = a0\n  6086: a0 = a4 >> 0x3f\n  6089: a1 = a5 << 0x1\n  6092: a0 = a0 | a1\n  6095: u64 [s1 + 0x108] = a0\n  6099: a0 = a3 >> 0x3f\n  6102: a1 = a2 << 0x1\n  6105: a0 = a0 | a1\n  6108: u64 [s1 + 0x100] = a0\n  6112: a0 = a3 << 0x1\n  6115: u64 [s1 + 0xf8] = a0\n  6119: t0 = 164, jump @1394\n      : @174 [@dyn 82] (gas: 1)\n  6125: ra = 166, jump @1404\n      : @175 [@dyn 83] (gas: 7)\n  6131: u64 [s1 + 0xd8] = a0\n  6135: u64 [s1 + 0xf0] = a1\n  6139: a0 = u64 [s1 + 0xc0]\n  6143: i32 a2 = a0 << 0x3\n  6146: a0 = 0xffffffffffffffff\n  6149: a1 = 0xffffffffffffffff\n  6152: ra = 168, jump @1399\n      : @176 [@dyn 84] (gas: 10)\n  6158: u64 [s1 + 0xe8] = a0\n  6162: u64 [s1 + 0xe0] = a1\n  6166: a1 = u64 [s1 + 0xd8]\n  6170: a0 = a0 | a1\n  6173: u64 [s1 + 0xd8] = a0\n  6177: a0 = u64 [s1 + 0x138]\n  6181: i32 a2 = a0 + 0xffffffffffffff80\n  6184: a0 = 0xffffffffffffffff\n  6187: a1 = 0xffffffffffffffff\n  6190: ra = 170, jump @1399\n      : @177 [@dyn 85] (gas: 7)\n  6196: a4 = u64 [s1 + 0x138]\n  6200: a2 = a4 <u 0x80\n  6204: a3 = u64 [s1 + 0xd8]\n  6208: a0 = a3 if a2 != 0\n  6211: a5 = u64 [s1 + 0xe0]\n  6215: a3 = u64 [s1 + 0xf0]\n  6219: t0 = 172, jump @1396\n      : @178 [@dyn 86] (gas: 2)\n  6225: a4 = u64 [s1 + 0xe8]\n  6229: t0 = 174, jump @1356\n      : @179 [@dyn 87] (gas: 25)\n  6235: a4 = u64 [s1 + 0xf8]\n  6239: a0 = a0 | a4\n  6242: a5 = s1 + 0x100\n  6246: a4 = u64 [a5]\n  6248: a1 = a1 | a4\n  6251: a4 = u64 [a5 + 0x8]\n  6254: a3 = a3 | a4\n  6257: a4 = u64 [a5 + 0x10]\n  6260: a2 = a2 | a4\n  6263: a5 = s1 + 0x7ff\n  6267: a5 = a5 + 0xb9\n  6271: u64 [a5 + 360] = 0x4\n  6276: a4 = a5 + 0x100\n  6280: u64 [a4 + 0x98] = a2\n  6284: u64 [a4 + 0xa0] = a3\n  6288: u64 [a4 + 0x90] = a1\n  6292: u64 [a4 + 0x88] = a0\n  6296: u64 [a5 + 384] = 0\n  6300: u64 [a5 + 376] = 0\n  6304: u64 [a5 + 368] = 0\n  6308: a0 = s1 + 0x7ff\n  6312: a0 = a0 + 0x221\n  6316: a1 = s1 + 0x7ff\n  6320: a1 = a1 + 0x241\n  6324: ra = 176, jump @24\n      : @180 [@dyn 88] (gas: 8)\n  6330: a0 = 0x30280\n  6335: u64 [s1 + 0x138] = a0\n  6339: i32 a0 = a0 + 0\n  6341: u64 [s1 + 0x130] = a0\n  6345: ra = 0xb2\n  6349: ecalli 3 // 'caller'\n  6351: t0 = 0xb4\n  6355: jump @1324\n      : @181 [@dyn 89] (gas: 1)\n  6358: t0 = 180, jump @1324\n      : @182 [@dyn 90] (gas: 8)\n  6364: u64 [s1 + 1304] = 0\n  6368: a2 = s1 + 0x500\n  6372: u64 [a2 + 0x10] = a1\n  6375: u64 [a2 + 0x8] = a0\n  6378: a0 = s1 + 0x520\n  6382: a1 = s1 + 0x500\n  6386: u64 [a2] = a3\n  6388: ra = 182, jump @868\n      : @183 [@dyn 91] (gas: 5)\n  6394: a0 = u64 [s1 + 0x130]\n  6398: ra = 0xb8\n  6402: ecalli 3 // 'caller'\n  6404: t0 = 0xba\n  6408: jump @1324\n      : @184 [@dyn 92] (gas: 1)\n  6411: t0 = 186, jump @1324\n      : @185 [@dyn 93] (gas: 9)\n  6417: u64 [s1 + 1240] = 0\n  6421: u64 [s1 + 0x4d0] = a1\n  6425: u64 [s1 + 0x4c8] = a0\n  6429: a0 = s1 + 0x4e0\n  6433: a1 = s1 + 0x4c0\n  6437: u64 [s1 + 0x4c0] = a3\n  6441: ra = 0xbc\n  6445: t0 = 0x358\n  6449: jump @1358\n      : @186 [@dyn 94] (gas: 5)\n  6452: a0 = u64 [s1 + 0x130]\n  6456: ra = 0xbe\n  6460: ecalli 3 // 'caller'\n  6462: t0 = 0xc0\n  6466: jump @1324\n      : @187 [@dyn 95] (gas: 1)\n  6469: t0 = 192, jump @1324\n      : @188 [@dyn 96] (gas: 10)\n  6475: u64 [s1 + 1176] = 0\n  6479: a2 = s1 + 0x400\n  6483: u64 [a2 + 0x90] = a1\n  6487: u64 [a2 + 0x88] = a0\n  6491: a0 = s1 + 0x4a0\n  6495: a1 = s1 + 0x480\n  6499: u64 [a2 + 0x80] = a3\n  6503: ra = 0xc2\n  6507: t0 = 0x39e\n  6511: jump @1358\n      : @189 [@dyn 97] (gas: 3)\n  6514: a0 = u64 [s1 + 0x130]\n  6518: ecalli 3 // 'caller'\n  6520: fallthrough\n      : @190 (gas: 7)\n  6521: a2 = u64 [s1 + 0x138]\n  6525: a0 = u32 [a2 + 0x10]\n  6528: a1 = u64 [a2]\n  6530: a2 = u64 [a2 + 0x8]\n  6533: a0 = a0 | a1\n  6536: a0 = a0 | a2\n  6539: jump @243 if a0 == 0\n      : @191 (gas: 10)\n  6543: a1 = s1 + 0x7ff\n  6547: a1 = a1 + 0xb9\n  6551: u64 [a1 + 448] = 0\n  6555: u64 [a1 + 440] = 0\n  6559: u64 [a1 + 432] = 0\n  6563: u64 [a1 + 424] = 0x5\n  6568: a0 = s1 + 0x460\n  6572: a1 = s1 + 0x7ff\n  6576: a1 = a1 + 0x261\n  6580: ra = 196, jump @21\n      : @192 [@dyn 98] (gas: 2)\n  6586: a0 = u8 [s1 + 0x460]\n  6590: jump @248 if a0 != 0\n      : @193 (gas: 10)\n  6594: a0 = s1 + 0x7ff\n  6598: a0 = a0 + 0xb9\n  6602: u64 [a0 + 480] = 0\n  6606: u64 [a0 + 472] = 0\n  6610: u64 [a0 + 464] = 0\n  6614: u64 [a0 + 456] = 0x2\n  6619: a0 = s1 + 0x420\n  6623: a1 = s1 + 0x7ff\n  6627: a1 = a1 + 0x281\n  6631: ra = 198, jump @21\n      : @194 [@dyn 99] (gas: 43)\n  6637: t2 = u64 [s1 + 0x438]\n  6641: t1 = u64 [s1 + 0x430]\n  6645: ra = u64 [s1 + 0x420]\n  6649: u64 [s1 + 0x128] = ra\n  6653: a5 = u64 [s1 + 0x428]\n  6657: a1 = sp + 0xffffffffffffffe0\n  6660: a1 = a1 & 0xffffffffffffffe0\n  6663: sp = a1\n  6665: a2 = u64 [s1 + 0x70]\n  6668: a4 = a2 + a5\n  6671: a0 = u64 [s1 + 0x68]\n  6674: ra = ra + a0\n  6677: a0 = ra <u a0\n  6680: a4 = a4 + a0\n  6683: a3 = a4 ^ a2\n  6686: a2 = a4 <u a2\n  6689: a2 = a0 if a3 == 0\n  6692: t0 = u64 [s1 + 0x78]\n  6695: a0 = t0 + t1\n  6698: a3 = u64 [s1 + 0x80]\n  6702: a3 = a3 + t2\n  6705: t0 = a0 <u t0\n  6708: a3 = a3 + t0\n  6711: a2 = a2 + a0\n  6714: a0 = a2 <u a0\n  6717: t0 = a3 + a0\n  6720: a0 = a5 ^ a4\n  6723: a5 = a4 <u a5\n  6726: a3 = u64 [s1 + 0x128]\n  6730: a3 = ra <u a3\n  6733: a3 = a5 if a0 != 0\n  6736: a0 = a2 <u t1\n  6739: a5 = t2 ^ t0\n  6742: t2 = t0 <u t2\n  6745: t2 = a0 if a5 == 0\n  6748: a0 = t1 ^ a2\n  6751: a0 = a0 | a5\n  6754: a3 = t2 if a0 != 0\n  6757: u64 [a1 + 0x10] = a2\n  6760: u64 [a1 + 0x8] = a4\n  6763: u64 [a1] = ra\n  6765: u64 [a1 + 0x18] = t0\n  6768: jump @252 if a3 != 0\n      : @195 (gas: 9)\n  6772: a0 = s1 + 0x7ff\n  6776: a0 = a0 + 0xb9\n  6780: u64 [a0 + 512] = 0\n  6784: u64 [a0 + 504] = 0\n  6788: u64 [a0 + 496] = 0\n  6792: u64 [a0 + 488] = 0x2\n  6797: a0 = s1 + 0x7ff\n  6801: a0 = a0 + 0x2a1\n  6805: ra = 200, jump @24\n      : @196 [@dyn 100] (gas: 5)\n  6811: a0 = u64 [s1 + 0x130]\n  6815: ra = 0xca\n  6819: ecalli 3 // 'caller'\n  6821: t0 = 0xcc\n  6825: jump @1324\n      : @197 [@dyn 101] (gas: 1)\n  6828: t0 = 204, jump @1324\n      : @198 [@dyn 102] (gas: 8)\n  6834: u64 [s1 + 1048] = 0\n  6838: a2 = s1 + 0x400\n  6842: u64 [a2 + 0x10] = a1\n  6845: u64 [a2 + 0x8] = a0\n  6848: a1 = s1 + 0x400\n  6852: u64 [a2] = a3\n  6854: a0 = 0\n  6856: ra = 206, jump @19\n      : @199 [@dyn 103] (gas: 7)\n  6862: u64 [s1 + 1016] = 0\n  6866: u64 [s1 + 1008] = 0\n  6870: u64 [s1 + 1000] = 0\n  6874: a0 = 0x20\n  6877: a1 = s1 + 0x3e0\n  6881: u64 [s1 + 992] = 0\n  6885: ra = 208, jump @19\n      : @200 [@dyn 104] (gas: 6)\n  6891: a0 = sp + 0xffffffffffffffe0\n  6894: a0 = a0 & 0xffffffffffffffe0\n  6897: u64 [s1 + 0x128] = a0\n  6901: sp = a0\n  6903: a1 = i32 [0x2026c]\n  6908: jump @202 if a1 >u 63\n      : @201 (gas: 2)\n  6912: u32 [0x2026c] = 0x40\n  6918: fallthrough\n      : @202 (gas: 13)\n  6919: a0 = sp + 0xffffffffffffffe0\n  6922: a2 = a0 & 0xffffffffffffffe0\n  6925: u64 [s1 + 0x120] = a2\n  6929: sp = a2\n  6931: a0 = 0x20280\n  6936: i32 a0 = a0 + 0\n  6938: i32 a2 = a2 + 0\n  6940: a1 = 0x40\n  6943: ra = 0xd2\n  6947: ecalli 6 // 'hash_keccak_256'\n  6949: a3 = u64 [s1 + 0x120]\n  6953: t0 = 0xd4\n  6957: jump @1330\n      : @203 [@dyn 105] (gas: 2)\n  6960: a3 = u64 [s1 + 0x120]\n  6964: t0 = 212, jump @1330\n      : @204 [@dyn 106] (gas: 7)\n  6970: a1 = u64 [s1 + 0x128]\n  6974: u64 [a1 + 0x18] = a3\n  6977: u64 [a1 + 0x10] = a2\n  6980: u64 [a1 + 0x8] = a4\n  6983: u64 [a1] = a0\n  6985: a0 = s1 + 0x3c0\n  6989: ra = 214, jump @21\n      : @205 [@dyn 107] (gas: 33)\n  6995: a0 = u64 [s1 + 0x3c8]\n  6999: a1 = u64 [s1 + 0x3c0]\n  7003: t0 = u64 [s1 + 0x3d8]\n  7007: a3 = u64 [s1 + 0x3d0]\n  7011: a4 = u64 [s1 + 0x70]\n  7014: a4 = a4 + a0\n  7017: a5 = u64 [s1 + 0x68]\n  7020: a5 = a5 + a1\n  7023: a1 = a5 <u a1\n  7026: a4 = a4 + a1\n  7029: a2 = a4 ^ a0\n  7032: a0 = a4 <u a0\n  7035: a0 = a1 if a2 == 0\n  7038: a1 = u64 [s1 + 0x78]\n  7041: a1 = a1 + a3\n  7044: a2 = u64 [s1 + 0x80]\n  7048: t0 = t0 + a2\n  7051: a2 = a1 <u a3\n  7054: a2 = a2 + t0\n  7057: a0 = a0 + a1\n  7060: a1 = a0 <u a1\n  7063: a1 = a1 + a2\n  7066: a2 = s1 + 0x7ff\n  7070: a2 = a2 + 0xb9\n  7074: a3 = a2 + 0x200\n  7078: u64 [a3 + 0x8] = a5\n  7081: u64 [a3 + 0x10] = a4\n  7084: u64 [a3 + 0x18] = a0\n  7087: u64 [a3 + 0x20] = a1\n  7090: a1 = s1 + 0x7ff\n  7094: a1 = a1 + 0x2c1\n  7098: a0 = u64 [s1 + 0x128]\n  7102: ra = 216, jump @24\n      : @206 [@dyn 108] (gas: 3)\n  7108: a0 = s1 + 0x3a0\n  7112: a1 = 0x40\n  7115: ra = 218, jump @17\n      : @207 [@dyn 109] (gas: 6)\n  7121: a4 = s1 + 0x300\n  7125: a3 = u64 [a4 + 0xb8]\n  7129: a1 = u64 [a4 + 0xb0]\n  7133: a2 = u64 [a4 + 0xa8]\n  7137: a0 = u64 [a4 + 0xa0]\n  7141: t0 = 220, jump @1332\n      : @208 [@dyn 110] (gas: 1)\n  7147: jump @216 if a1 != 0\n      : @209 (gas: 11)\n  7151: a1 = u64 [s1 + 0x68]\n  7154: u64 [s1 + 0x380] = a1\n  7158: a1 = u64 [s1 + 0x70]\n  7161: u64 [s1 + 0x388] = a1\n  7165: a1 = u64 [s1 + 0x78]\n  7168: u64 [s1 + 0x390] = a1\n  7172: a1 = s1 + 0x380\n  7176: a2 = u64 [s1 + 0x80]\n  7180: u64 [s1 + 0x398] = a2\n  7184: u64 [s1 + 0x128] = a0\n  7188: ra = 222, jump @19\n      : @210 [@dyn 111] (gas: 6)\n  7194: a0 = u64 [s1 + 0x130]\n  7198: ra = 0xe0\n  7202: ecalli 3 // 'caller'\n  7204: a2 = u64 [s1 + 0x138]\n  7208: t0 = 0xe2\n  7212: jump @1325\n      : @211 [@dyn 112] (gas: 2)\n  7215: a2 = u64 [s1 + 0x138]\n  7219: t0 = 226, jump @1325\n      : @212 [@dyn 113] (gas: 28)\n  7225: t0 = a1 | a0\n  7228: a3 = a3 >> 0x20\n  7231: a2 = reverse a2\n  7233: a1 = a2 << 0x20\n  7236: a1 = a1 | a3\n  7239: a2 = a2 >> 0x20\n  7242: u64 [s1 + 824] = 0\n  7246: u64 [s1 + 856] = 0\n  7250: u64 [s1 + 848] = 0\n  7254: u64 [s1 + 840] = 0\n  7258: u64 [s1 + 832] = 0\n  7262: a3 = u64 [0x20008]\n  7267: a4 = u64 [0x20010]\n  7272: a5 = u64 [0x20018]\n  7277: a0 = u64 [0x20020]\n  7282: u64 [s1 + 0x378] = a3\n  7286: u64 [s1 + 0x370] = a4\n  7290: u64 [s1 + 0x368] = a5\n  7294: u64 [s1 + 0x360] = a0\n  7298: u64 [s1 + 0x330] = a2\n  7302: u64 [s1 + 0x328] = a1\n  7306: a1 = 0x20\n  7309: a2 = s1 + 0x360\n  7313: a3 = s1 + 0x340\n  7317: a4 = s1 + 0x320\n  7321: u64 [s1 + 0x320] = t0\n  7325: a0 = u64 [s1 + 0x128]\n  7329: ra = 228, jump @27\n      : @213 [@dyn 114] (gas: 3)\n  7335: a0 = s1 + 0x300\n  7339: a1 = 0x40\n  7342: ra = 230, jump @17\n      : @214 [@dyn 115] (gas: 6)\n  7348: a4 = s1 + 0x300\n  7352: a3 = u64 [a4 + 0x18]\n  7355: a1 = u64 [a4 + 0x10]\n  7358: a2 = u64 [a4 + 0x8]\n  7361: a0 = u64 [a4]\n  7363: t0 = 232, jump @1332\n      : @215 [@dyn 116] (gas: 1)\n  7369: jump @259 if a1 == 0\n      : @216 (gas: 1)\n  7373: trap\n      : @217 (gas: 6)\n  7374: a1 = 0x20280\n  7379: i32 a1 = a1 + 0\n  7381: a0 = 0x1\n  7384: a2 = 0\n  7386: ecalli 7 // 'seal_return'\n  7388: jump @219\n      : @218 (gas: 6)\n  7390: a1 = 0x20280\n  7395: i32 a1 = a1 + 0\n  7397: a0 = 0x1\n  7400: a2 = 0\n  7402: ecalli 7 // 'seal_return'\n  7404: fallthrough\n      : @219 (gas: 6)\n  7405: u64 [s1 + 368] = 0\n  7409: u64 [s1 + 360] = 0\n  7413: u64 [s1 + 352] = 0\n  7417: t0 = 0xea\n  7421: a0 = 0x4e487b7100000000\n  7431: fallthrough\n      : @220 [@dyn 117] (gas: 4)\n  7432: a1 = s1 + 0x160\n  7436: u64 [s1 + 0x178] = a0\n  7440: a0 = 0\n  7442: ra = 236, jump @19\n      : @221 [@dyn 118] (gas: 7)\n  7448: u64 [s1 + 344] = 0\n  7452: u64 [s1 + 336] = 0\n  7456: u64 [s1 + 320] = 0x41\n  7461: a0 = 0x4\n  7464: a1 = s1 + 0x140\n  7468: u64 [s1 + 328] = 0\n  7472: ra = 238, jump @19\n      : @222 [@dyn 119] (gas: 2)\n  7478: a1 = i32 [0x2026c]\n  7483: jump @224 if a1 >u 63\n      : @223 (gas: 3)\n  7487: u32 [0x2026c] = 0x40\n  7493: a1 = 0x20280\n  7498: jump @258\n      : @224 (gas: 2)\n  7501: a1 = 0x20280\n  7506: jump @258\n      : @225 (gas: 6)\n  7509: u64 [s1 + 432] = 0\n  7513: u64 [s1 + 424] = 0\n  7517: u64 [s1 + 416] = 0\n  7521: t0 = 0xf0\n  7525: a0 = 0x4e487b7100000000\n  7535: fallthrough\n      : @226 [@dyn 120] (gas: 4)\n  7536: a1 = s1 + 0x1a0\n  7540: u64 [s1 + 0x1b8] = a0\n  7544: a0 = 0\n  7546: ra = 242, jump @19\n      : @227 [@dyn 121] (gas: 7)\n  7552: u64 [s1 + 408] = 0\n  7556: u64 [s1 + 400] = 0\n  7560: u64 [s1 + 384] = 0x22\n  7565: a0 = 0x4\n  7568: a1 = s1 + 0x180\n  7572: u64 [s1 + 392] = 0\n  7576: ra = 244, jump @19\n      : @228 [@dyn 122] (gas: 2)\n  7582: a1 = i32 [0x2026c]\n  7587: jump @230 if a1 >u 63\n      : @229 (gas: 3)\n  7591: u32 [0x2026c] = 0x40\n  7597: a1 = 0x20280\n  7602: jump @258\n      : @230 (gas: 2)\n  7605: a1 = 0x20280\n  7610: jump @258\n      : @231 (gas: 6)\n  7613: u64 [s1 + 528] = 0\n  7617: u64 [s1 + 520] = 0\n  7621: u64 [s1 + 512] = 0\n  7625: t0 = 0xf6\n  7629: a0 = 0x4e487b7100000000\n  7639: fallthrough\n      : @232 [@dyn 123] (gas: 4)\n  7640: a1 = s1 + 0x200\n  7644: u64 [s1 + 0x218] = a0\n  7648: a0 = 0\n  7650: ra = 248, jump @19\n      : @233 [@dyn 124] (gas: 7)\n  7656: u64 [s1 + 504] = 0\n  7660: u64 [s1 + 496] = 0\n  7664: u64 [s1 + 480] = 0x41\n  7669: a0 = 0x4\n  7672: a1 = s1 + 0x1e0\n  7676: u64 [s1 + 488] = 0\n  7680: ra = 250, jump @19\n      : @234 [@dyn 125] (gas: 2)\n  7686: a1 = i32 [0x2026c]\n  7691: jump @236 if a1 >u 63\n      : @235 (gas: 3)\n  7695: u32 [0x2026c] = 0x40\n  7701: a1 = 0x20280\n  7706: jump @258\n      : @236 (gas: 2)\n  7709: a1 = 0x20280\n  7714: jump @258\n      : @237 (gas: 6)\n  7717: u64 [s1 + 592] = 0\n  7721: u64 [s1 + 584] = 0\n  7725: u64 [s1 + 576] = 0\n  7729: t0 = 0xfc\n  7733: a0 = 0x4e487b7100000000\n  7743: fallthrough\n      : @238 [@dyn 126] (gas: 4)\n  7744: a1 = s1 + 0x240\n  7748: u64 [s1 + 0x258] = a0\n  7752: a0 = 0\n  7754: ra = 254, jump @19\n      : @239 [@dyn 127] (gas: 7)\n  7760: u64 [s1 + 568] = 0\n  7764: u64 [s1 + 560] = 0\n  7768: u64 [s1 + 544] = 0x22\n  7773: a0 = 0x4\n  7776: a1 = s1 + 0x220\n  7780: u64 [s1 + 552] = 0\n  7784: ra = 256, jump @19\n      : @240 [@dyn 128] (gas: 2)\n  7790: a1 = i32 [0x2026c]\n  7795: jump @242 if a1 >u 63\n      : @241 (gas: 3)\n  7799: u32 [0x2026c] = 0x40\n  7805: a1 = 0x20280\n  7810: jump @258\n      : @242 (gas: 2)\n  7813: a1 = 0x20280\n  7818: jump @258\n      : @243 (gas: 8)\n  7821: u64 [s1 + 688] = 0\n  7825: u64 [s1 + 680] = 0\n  7829: u64 [s1 + 672] = 0\n  7833: a0 = 0xec442f0500000000\n  7843: a1 = s1 + 0x2a0\n  7847: u64 [s1 + 0x2b8] = a0\n  7851: a0 = 0\n  7853: ra = 258, jump @19\n      : @244 [@dyn 129] (gas: 7)\n  7859: u64 [s1 + 664] = 0\n  7863: u64 [s1 + 656] = 0\n  7867: u64 [s1 + 648] = 0\n  7871: a0 = 0x4\n  7874: a1 = s1 + 0x280\n  7878: u64 [s1 + 640] = 0\n  7882: ra = 260, jump @19\n      : @245 [@dyn 130] (gas: 2)\n  7888: a1 = i32 [0x2026c]\n  7893: jump @247 if a1 >u 63\n      : @246 (gas: 3)\n  7897: u32 [0x2026c] = 0x40\n  7903: a1 = 0x20280\n  7908: jump @258\n      : @247 (gas: 2)\n  7911: a1 = 0x20280\n  7916: jump @258\n      : @248 (gas: 8)\n  7919: u64 [s1 + 1104] = 0\n  7923: u64 [s1 + 1096] = 0\n  7927: u64 [s1 + 1088] = 0\n  7931: a0 = 0xd93c066500000000\n  7941: a1 = s1 + 0x440\n  7945: u64 [s1 + 0x458] = a0\n  7949: a0 = 0\n  7951: ra = 262, jump @19\n      : @249 [@dyn 131] (gas: 2)\n  7957: a1 = i32 [0x2026c]\n  7962: jump @251 if a1 >u 31\n      : @250 (gas: 2)\n  7966: u32 [0x2026c] = 0x20\n  7972: fallthrough\n      : @251 (gas: 6)\n  7973: a1 = 0x20280\n  7978: i32 a1 = a1 + 0\n  7980: a0 = 0x1\n  7983: a2 = 0x4\n  7986: ecalli 7 // 'seal_return'\n  7988: fallthrough\n      : @252 (gas: 6)\n  7989: u64 [s1 + 752] = 0\n  7993: u64 [s1 + 744] = 0\n  7997: u64 [s1 + 736] = 0\n  8001: t0 = 0x108\n  8005: a0 = 0x4e487b7100000000\n  8015: fallthrough\n      : @253 [@dyn 132] (gas: 4)\n  8016: a1 = s1 + 0x2e0\n  8020: u64 [s1 + 0x2f8] = a0\n  8024: a0 = 0\n  8026: ra = 266, jump @19\n      : @254 [@dyn 133] (gas: 7)\n  8032: u64 [s1 + 728] = 0\n  8036: u64 [s1 + 720] = 0\n  8040: u64 [s1 + 704] = 0x11\n  8045: a0 = 0x4\n  8048: a1 = s1 + 0x2c0\n  8052: u64 [s1 + 712] = 0\n  8056: ra = 268, jump @19\n      : @255 [@dyn 134] (gas: 2)\n  8062: a1 = i32 [0x2026c]\n  8067: jump @257 if a1 >u 63\n      : @256 (gas: 3)\n  8071: u32 [0x2026c] = 0x40\n  8077: a1 = 0x20280\n  8082: jump @258\n      : @257 (gas: 2)\n  8084: a1 = 0x20280\n  8089: fallthrough\n      : @258 (gas: 7)\n  8090: i32 a1 = a1 + 0\n  8092: a0 = 0x1\n  8095: a2 = 0x24\n  8098: ecalli 7 // 'seal_return'\n  8100: u64 [s1 + 0x138] = a0\n  8104: ra = 0x10e\n  8108: jump @33\n      : @259 (gas: 2)\n  8111: u64 [s1 + 0x138] = a0\n  8115: ra = 270, jump @33\n      : @260 [@dyn 135] (gas: 5)\n  8121: i32 a0 = a0 + 0\n  8123: a1 = 0\n  8125: a2 = 0\n  8127: ecalli 0 // 'call_data_copy'\n  8128: jump @15\n      : @261 (gas: 3)\n  8131: a0 = u64 [s1 + 0x138]\n  8135: a1 = 0\n  8137: ra = 272, jump @33\n      : @262 [@dyn 136] (gas: 5)\n  8143: i32 a1 = a0 + 0\n  8145: a0 = 0\n  8147: a2 = 0\n  8149: ecalli 7 // 'seal_return'\n  8151: jump @219\n      : @263 [@dyn 137] (gas: 4)\n  8154: a0 = 0x20268\n  8159: u64 [s1 + 0xb8] = a0\n  8163: a0 = i32 [0x20268]\n  8168: jump @265 if a0 >=u 4\n      : @264 (gas: 1)\n  8172: jump @823\n      : @265 (gas: 6)\n  8175: a0 = s1 + 0x1000\n  8179: i32 a0 = a0 + 0x520\n  8183: a1 = 0\n  8185: ra = 0x114\n  8189: ecalli 1 // 'call_data_load'\n  8191: fallthrough\n      : @266 [@dyn 138] (gas: 3)\n  8192: a2 = s1 + 0x1038\n  8196: a0 = i32 [a2 + 0x504]\n  8200: jump @268 if a0 != 2220280665\n      : @267 (gas: 1)\n  8207: jump @557\n      : @268 (gas: 1)\n  8210: jump @304 if a0 == 2446411860\n      : @269 (gas: 1)\n  8218: jump @271 if a0 != 2514000705\n      : @270 (gas: 1)\n  8225: jump @474\n      : @271 (gas: 1)\n  8228: jump @332 if a0 == 2719481311\n      : @272 (gas: 1)\n  8236: jump @274 if a0 != 2835717307\n      : @273 (gas: 1)\n  8243: jump @591\n      : @274 (gas: 1)\n  8246: jump @384 if a0 == 3577287571\n      : @275 (gas: 1)\n  8254: jump @344 if a0 == 3714247998\n      : @276 (gas: 1)\n  8262: jump @278 if a0 != 3862606313\n      : @277 (gas: 1)\n  8269: jump @618\n      : @278 (gas: 1)\n  8272: jump @395 if a0 == 117300739\n      : @279 (gas: 1)\n  8280: jump @281 if a0 != 157198259\n      : @280 (gas: 1)\n  8287: jump @625\n      : @281 (gas: 1)\n  8290: jump @283 if a0 != 404098525\n      : @282 (gas: 1)\n  8297: jump @528\n      : @283 (gas: 1)\n  8300: jump @285 if a0 != 599290589\n      : @284 (gas: 1)\n  8307: jump @605\n      : @285 (gas: 1)\n  8310: jump @287 if a0 != 613063843\n      : @286 (gas: 1)\n  8317: jump @577\n      : @287 (gas: 1)\n  8320: jump @372 if a0 == 826074471\n      : @288 (gas: 1)\n  8328: jump @290 if a0 != 1061922874\n      : @289 (gas: 1)\n  8335: jump @510\n      : @290 (gas: 1)\n  8338: jump @427 if a0 == 1086394137\n      : @291 (gas: 1)\n  8346: jump @293 if a0 == 1553423035\n      : @292 (gas: 1)\n  8353: jump @538\n      : @293 (gas: 9)\n  8356: a0 = s1 + 0x1838\n  8360: u64 [a0 + 160] = 0\n  8364: u64 [a0 + 152] = 0\n  8368: u64 [a0 + 144] = 0\n  8372: u64 [a0 + 136] = 0\n  8376: a0 = s1 + 0x2000\n  8380: i32 a0 = a0 + 0xfffffffffffff8c0\n  8384: ecalli 10 // 'value_transferred'\n  8386: fallthrough\n      : @294 (gas: 9)\n  8387: a3 = s1 + 0x1838\n  8391: a0 = u64 [a3 + 0x98]\n  8395: a1 = u64 [a3 + 0xa0]\n  8399: a2 = u64 [a3 + 0x90]\n  8403: a3 = u64 [a3 + 0x88]\n  8407: a1 = a1 | a2\n  8410: a0 = a0 | a3\n  8413: a0 = a0 | a1\n  8416: jump @296 if a0 == 0\n      : @295 (gas: 1)\n  8419: jump @681\n      : @296 (gas: 3)\n  8422: a0 = u64 [s1 + 0xb8]\n  8426: a0 = i32 [a0]\n  8428: jump @298 if a0 >u 3\n      : @297 (gas: 1)\n  8432: jump @682\n      : @298 (gas: 9)\n  8435: a1 = s1 + 0x1838\n  8439: u64 [a1 + 192] = 0\n  8443: u64 [a1 + 184] = 0\n  8447: u64 [a1 + 176] = 0\n  8451: u64 [a1 + 168] = 0x5\n  8456: a0 = s1 + 0x7ff\n  8460: a0 = a0 + 0x481\n  8464: a1 = s1 + 0x18e0\n  8468: ra = 278, jump @21\n      : @299 [@dyn 139] (gas: 8)\n  8474: a0 = s1 + 0x7ff\n  8478: a0 = a0 + 0x39\n  8481: a0 = u64 [a0 + 0x448]\n  8485: u64 [s1 + 0xb8] = a0\n  8489: a0 = s1 + 0x7ff\n  8493: a0 = a0 + 0x461\n  8497: a1 = 0x40\n  8500: ra = 280, jump @17\n      : @300 [@dyn 140] (gas: 8)\n  8506: a3 = s1 + 0x7ff\n  8510: a3 = a3 + 0x39\n  8513: a5 = a3 + 0x400\n  8517: a4 = u64 [a5 + 0x40]\n  8520: a1 = u64 [a5 + 0x38]\n  8523: a2 = u64 [a5 + 0x30]\n  8526: a0 = u64 [a5 + 0x28]\n  8529: t0 = 282, jump @1341\n      : @301 [@dyn 141] (gas: 1)\n  8535: jump @303 if a1 == 0\n      : @302 (gas: 1)\n  8538: jump @654\n      : @303 (gas: 11)\n  8541: a1 = u8 [s1 + 0xb8]\n  8545: a1 = a1 >u 0\n  8547: u64 [a3 + 1056] = 0\n  8551: u64 [a3 + 1048] = 0\n  8555: u64 [a3 + 0x408] = a1\n  8559: a1 = s1 + 0x7ff\n  8563: a1 = a1 + 0x441\n  8567: u64 [a3 + 1040] = 0\n  8571: u64 [s1 + 0xb8] = a0\n  8575: ra = 0x2d6\n  8579: jump @19\n      : @304 (gas: 11)\n  8582: a0 = s1 + 0x1838\n  8586: u64 [a0 + 480] = 0\n  8590: u64 [a0 + 472] = 0\n  8594: u64 [a0 + 464] = 0\n  8598: u64 [a0 + 456] = 0\n  8602: a0 = s1 + 0x2000\n  8606: i32 a0 = a0 + 0xfffffffffffffa00\n  8610: ra = 0x11c\n  8614: ecalli 10 // 'value_transferred'\n  8616: t0 = 0x11e\n  8620: jump @1376\n      : @305 [@dyn 142] (gas: 1)\n  8623: t0 = 286, jump @1376\n      : @306 [@dyn 143] (gas: 1)\n  8629: t0 = 288, jump @1392\n      : @307 [@dyn 144] (gas: 1)\n  8635: jump @309 if a0 == 0\n      : @308 (gas: 1)\n  8638: jump @683\n      : @309 (gas: 4)\n  8641: a0 = u64 [s1 + 0xb8]\n  8645: a0 = i32 [a0]\n  8647: a1 = 0x43\n  8650: jump @311 if a1 <u a0\n      : @310 (gas: 1)\n  8653: jump @684\n      : @311 (gas: 5)\n  8656: a0 = s1 + 0x7ff\n  8660: a0 = a0 + 0x781\n  8664: ra = 0x122\n  8668: t0 = 0x3fc\n  8672: jump @1397\n      : @312 [@dyn 145] (gas: 16)\n  8675: a1 = s1 + 0x7ff\n  8679: a1 = a1 + 0x39\n  8682: a2 = a1 + 0x700\n  8686: a0 = u64 [a2 + 0x58]\n  8689: u64 [s1 + 0xa8] = a0\n  8693: a0 = u64 [a2 + 0x50]\n  8696: u64 [s1 + 0xb0] = a0\n  8700: a0 = u64 [a2 + 0x48]\n  8703: u64 [s1 + 0xb8] = a0\n  8707: a0 = s1 + 0x2000\n  8711: i32 a0 = a0 + 0xfffffffffffffa20\n  8715: a1 = 0x4\n  8718: ra = 0x124\n  8722: ecalli 1 // 'call_data_load'\n  8724: t0 = 0x126\n  8728: jump @1376\n      : @313 [@dyn 146] (gas: 1)\n  8731: t0 = 294, jump @1376\n      : @314 [@dyn 147] (gas: 15)\n  8737: a0 = u64 [a4 + 0xe8]\n  8741: a1 = u64 [a4 + 0xf0]\n  8745: a2 = u64 [a4 + 0xf8]\n  8749: a3 = u64 [a3 + 0x200]\n  8753: a4 = s1 + 0x7ff\n  8757: a4 = a4 + 0x39\n  8760: a5 = a4 + 0x700\n  8764: u64 [a5 + 0x40] = a3\n  8767: u64 [a5 + 0x38] = a2\n  8770: u64 [a5 + 0x30] = a1\n  8773: a1 = s1 + 0x7ff\n  8777: a1 = a1 + 0x761\n  8781: u64 [a5 + 0x28] = a0\n  8784: a0 = 0\n  8786: ra = 296, jump @19\n      : @315 [@dyn 148] (gas: 11)\n  8792: a1 = s1 + 0x7ff\n  8796: a1 = a1 + 0x39\n  8799: u64 [a1 + 1824] = 0\n  8803: u64 [a1 + 1816] = 0\n  8807: u64 [a1 + 1800] = 0x6\n  8812: a2 = a1\n  8814: a0 = 0x20\n  8817: a1 = s1 + 0x7ff\n  8821: a1 = a1 + 0x741\n  8825: u64 [a2 + 1808] = 0\n  8829: ra = 298, jump @19\n      : @316 [@dyn 149] (gas: 3)\n  8835: a1 = 0x2026c\n  8840: a0 = i32 [0x2026c]\n  8845: jump @318 if a0 >u 63\n      : @317 (gas: 2)\n  8849: u32 [0x2026c] = 0x40\n  8855: fallthrough\n      : @318 (gas: 15)\n  8856: a0 = sp + 0xffffffffffffffe0\n  8859: a2 = a0 & 0xffffffffffffffe0\n  8862: u64 [s1 + 0x90] = a2\n  8866: sp = a2\n  8868: a0 = 0x20280\n  8873: i32 a0 = a0 + 0\n  8875: i32 a2 = a2 + 0\n  8877: u64 [s1 + 0xa0] = a1\n  8881: a1 = 0x40\n  8884: u64 [s1 + 0x98] = a0\n  8888: ra = 0x12c\n  8892: ecalli 6 // 'hash_keccak_256'\n  8894: a3 = u64 [s1 + 0x90]\n  8898: t0 = 0x12e\n  8902: jump @1383\n      : @319 [@dyn 150] (gas: 2)\n  8905: a3 = u64 [s1 + 0x90]\n  8909: t0 = 302, jump @1383\n      : @320 [@dyn 151] (gas: 27)\n  8915: u64 [s1 + 0x88] = a0\n  8919: a0 = reverse a1\n  8921: u64 [s1 + 0x80] = a0\n  8925: a0 = reverse a2\n  8927: u64 [s1 + 0x78] = a0\n  8930: a0 = reverse a3\n  8932: u64 [s1 + 0x70] = a0\n  8935: a0 = sp + 0xffffffffffffffe0\n  8938: a0 = a0 & 0xffffffffffffffe0\n  8941: u64 [s1 + 0x90] = a0\n  8945: sp = a0\n  8947: a0 = u64 [s1 + 0xa8]\n  8951: a0 = a0 << 0x20\n  8954: a0 = a0 >> 0x20\n  8957: a2 = s1 + 0x7ff\n  8961: a2 = a2 + 0x39\n  8964: u64 [a2 + 1792] = 0\n  8968: a3 = a2 + 0x600\n  8972: u64 [a3 + 0xf8] = a0\n  8976: a0 = u64 [s1 + 0xb0]\n  8980: u64 [a3 + 0xf0] = a0\n  8984: a1 = s1 + 0x7ff\n  8988: a1 = a1 + 0x721\n  8992: a0 = u64 [s1 + 0xb8]\n  8996: u64 [a3 + 0xe8] = a0\n  9000: a0 = 0\n  9002: ra = 304, jump @19\n      : @321 [@dyn 152] (gas: 16)\n  9008: a0 = u64 [s1 + 0x70]\n  9011: a1 = s1 + 0x7ff\n  9015: a1 = a1 + 0x39\n  9018: a2 = a1 + 0x600\n  9022: u64 [a2 + 0xe0] = a0\n  9026: a0 = u64 [s1 + 0x78]\n  9029: u64 [a2 + 0xd8] = a0\n  9033: a0 = u64 [s1 + 0x80]\n  9037: u64 [a2 + 0xd0] = a0\n  9041: a3 = a1\n  9043: a0 = 0x20\n  9046: a1 = s1 + 0x7ff\n  9050: a1 = a1 + 0x701\n  9054: a2 = u64 [s1 + 0x88]\n  9058: u64 [a3 + 0x6c8] = a2\n  9062: ra = 306, jump @19\n      : @322 [@dyn 153] (gas: 3)\n  9068: a1 = u64 [s1 + 0xa0]\n  9072: a0 = i32 [a1]\n  9074: jump @324 if a0 >u 63\n      : @323 (gas: 2)\n  9078: u32 [a1 + 0] = 0x40\n  9081: fallthrough\n      : @324 (gas: 12)\n  9082: a0 = sp + 0xffffffffffffffe0\n  9085: a0 = a0 & 0xffffffffffffffe0\n  9088: u64 [s1 + 0xb8] = a0\n  9092: sp = a0\n  9094: i32 a2 = a0 + 0\n  9096: a1 = 0x40\n  9099: a0 = u64 [s1 + 0x98]\n  9103: ra = 0x134\n  9107: ecalli 6 // 'hash_keccak_256'\n  9109: a3 = u64 [s1 + 0xb8]\n  9113: t0 = 0x136\n  9117: jump @1330\n      : @325 [@dyn 154] (gas: 2)\n  9120: a3 = u64 [s1 + 0xb8]\n  9124: t0 = 310, jump @1330\n      : @326 [@dyn 155] (gas: 8)\n  9130: a1 = u64 [s1 + 0x90]\n  9134: u64 [a1 + 0x18] = a3\n  9137: u64 [a1 + 0x10] = a2\n  9140: u64 [a1 + 0x8] = a4\n  9143: u64 [a1] = a0\n  9145: a0 = s1 + 0x7ff\n  9149: a0 = a0 + 0x6e1\n  9153: ra = 312, jump @21\n      : @327 [@dyn 156] (gas: 8)\n  9159: a0 = s1 + 0x7ff\n  9163: a0 = a0 + 0x39\n  9166: a0 = u64 [a0 + 0x6a8]\n  9170: u64 [s1 + 0xb8] = a0\n  9174: a0 = s1 + 0x7ff\n  9178: a0 = a0 + 0x6c1\n  9182: a1 = 0x40\n  9185: ra = 314, jump @17\n      : @328 [@dyn 157] (gas: 8)\n  9191: a3 = s1 + 0x7ff\n  9195: a3 = a3 + 0x39\n  9198: a5 = a3 + 0x600\n  9202: a4 = u64 [a5 + 0xa0]\n  9206: a1 = u64 [a5 + 0x98]\n  9210: a2 = u64 [a5 + 0x90]\n  9214: a0 = u64 [a5 + 0x88]\n  9218: t0 = 316, jump @1341\n      : @329 [@dyn 158] (gas: 1)\n  9224: jump @331 if a1 == 0\n      : @330 (gas: 1)\n  9227: jump @654\n      : @331 (gas: 11)\n  9230: a1 = u8 [s1 + 0xb8]\n  9234: a1 = a1 >u 0\n  9236: u64 [a3 + 1664] = 0\n  9240: u64 [a3 + 1656] = 0\n  9244: u64 [a3 + 0x668] = a1\n  9248: a1 = s1 + 0x7ff\n  9252: a1 = a1 + 0x6a1\n  9256: u64 [a3 + 1648] = 0\n  9260: u64 [s1 + 0xb8] = a0\n  9264: ra = 0x2d6\n  9268: jump @19\n      : @332 (gas: 11)\n  9271: a0 = s1 + 0x1838\n  9275: u64 [a0 + 608] = 0\n  9279: u64 [a0 + 600] = 0\n  9283: u64 [a0 + 592] = 0\n  9287: u64 [a0 + 584] = 0\n  9291: a0 = s1 + 0x2000\n  9295: i32 a0 = a0 + 0xfffffffffffffa80\n  9299: ra = 0x13e\n  9303: ecalli 10 // 'value_transferred'\n  9305: t0 = 0x140\n  9309: jump @1361\n      : @333 [@dyn 159] (gas: 1)\n  9312: t0 = 320, jump @1361\n      : @334 [@dyn 160] (gas: 1)\n  9318: t0 = 322, jump @1374\n      : @335 [@dyn 161] (gas: 1)\n  9324: jump @337 if a0 == 0\n      : @336 (gas: 1)\n  9327: jump @685\n      : @337 (gas: 3)\n  9330: a0 = u64 [s1 + 0xb8]\n  9334: a0 = i32 [a0]\n  9336: jump @339 if a0 >u 3\n      : @338 (gas: 1)\n  9340: jump @686\n      : @339 (gas: 3)\n  9343: a0 = s1 + 0x11a0\n  9347: a1 = 0x40\n  9350: ra = 324, jump @17\n      : @340 [@dyn 162] (gas: 7)\n  9356: a3 = s1 + 0x1038\n  9360: a5 = a3 + 0x100\n  9364: a4 = u64 [a5 + 0x80]\n  9368: a1 = u64 [a5 + 0x78]\n  9371: a2 = u64 [a5 + 0x70]\n  9374: a0 = u64 [a5 + 0x68]\n  9377: t0 = 326, jump @1341\n      : @341 [@dyn 163] (gas: 1)\n  9383: jump @343 if a1 == 0\n      : @342 (gas: 1)\n  9386: jump @654\n      : @343 (gas: 8)\n  9389: u64 [a3 + 352] = 0\n  9393: u64 [a3 + 344] = 0\n  9397: u64 [a3 + 336] = 0\n  9401: a1 = s1 + 0x1180\n  9405: u64 [a3 + 328] = 0\n  9409: u64 [s1 + 0xb8] = a0\n  9413: ra = 0x2d6\n  9417: jump @19\n      : @344 (gas: 10)\n  9420: a0 = s1 + 0x1838\n  9424: u64 [a0 + 800] = 0\n  9428: u64 [a0 + 792] = 0\n  9432: u64 [a0 + 784] = 0\n  9436: u64 [a0 + 776] = 0\n  9440: a0 = s1 + 0x2000\n  9444: i32 a0 = a0 + 0xfffffffffffffb40\n  9448: ra = 0x148\n  9452: ecalli 10 // 'value_transferred'\n  9454: fallthrough\n      : @345 [@dyn 164] (gas: 3)\n  9455: a3 = s1 + 0x1838\n  9459: a4 = a3 + 0x300\n  9463: t0 = 330, jump @1362\n      : @346 [@dyn 165] (gas: 1)\n  9469: jump @348 if a0 == 0\n      : @347 (gas: 1)\n  9472: jump @687\n      : @348 (gas: 4)\n  9475: a0 = u64 [s1 + 0xb8]\n  9479: a0 = i32 [a0]\n  9481: a1 = 0x43\n  9484: jump @350 if a1 <u a0\n      : @349 (gas: 1)\n  9487: jump @688\n      : @350 (gas: 6)\n  9490: a0 = 0xffffffff\n  9500: u64 [s1 + 0xb8] = a0\n  9504: a0 = s1 + 0x14a0\n  9508: ra = 0x14c\n  9512: t0 = 0x3f2\n  9516: jump @1397\n      : @351 [@dyn 166] (gas: 11)\n  9519: a1 = s1 + 0x1038\n  9523: a0 = u64 [a1 + 0x468]\n  9527: u64 [s1 + 0xb0] = a0\n  9531: a0 = u64 [a1 + 0x470]\n  9535: u64 [s1 + 0x90] = a0\n  9539: a0 = u32 [a1 + 0x478]\n  9543: u64 [s1 + 0x88] = a0\n  9547: a0 = s1 + 0x1480\n  9551: ra = 0x14e\n  9555: t0 = 0x3fc\n  9559: jump @1397\n      : @352 [@dyn 167] (gas: 3)\n  9562: t0 = 0x150\n  9566: a1 = s1 + 0x1038\n  9570: fallthrough\n      : @353 [@dyn 168] (gas: 18)\n  9571: a2 = a1 + 0x400\n  9575: a0 = u64 [a2 + 0x58]\n  9578: u64 [s1 + 0xa8] = a0\n  9582: a0 = u64 [a2 + 0x50]\n  9585: u64 [s1 + 0xa0] = a0\n  9589: a0 = u64 [a2 + 0x48]\n  9592: u64 [s1 + 0x98] = a0\n  9596: u64 [a1 + 1088] = 0\n  9600: a0 = u64 [s1 + 0x88]\n  9604: u64 [a2 + 0x38] = a0\n  9607: a0 = u64 [s1 + 0x90]\n  9611: u64 [a2 + 0x30] = a0\n  9614: a2 = a1\n  9616: a1 = s1 + 0x1460\n  9620: a0 = u64 [s1 + 0xb0]\n  9624: u64 [a2 + 0x428] = a0\n  9628: a0 = 0\n  9630: ra = 338, jump @19\n      : @354 [@dyn 169] (gas: 3)\n  9636: t0 = 0x154\n  9640: a1 = s1 + 0x1038\n  9644: fallthrough\n      : @355 [@dyn 170] (gas: 8)\n  9645: u64 [a1 + 1056] = 0\n  9649: u64 [a1 + 1048] = 0\n  9653: u64 [a1 + 1032] = 0x1\n  9658: a2 = a1\n  9660: a0 = 0x20\n  9663: a1 = s1 + 0x1440\n  9667: u64 [a2 + 1040] = 0\n  9671: ra = 342, jump @19\n      : @356 [@dyn 171] (gas: 3)\n  9677: a1 = 0x2026c\n  9682: a0 = i32 [0x2026c]\n  9687: jump @358 if a0 >u 63\n      : @357 (gas: 2)\n  9691: u32 [0x2026c] = 0x40\n  9697: fallthrough\n      : @358 (gas: 15)\n  9698: a0 = sp + 0xffffffffffffffe0\n  9701: a2 = a0 & 0xffffffffffffffe0\n  9704: u64 [s1 + 0x88] = a2\n  9708: sp = a2\n  9710: a0 = 0x20280\n  9715: i32 a0 = a0 + 0\n  9717: i32 a2 = a2 + 0\n  9719: u64 [s1 + 0xb0] = a1\n  9723: a1 = 0x40\n  9726: u64 [s1 + 0x90] = a0\n  9730: ra = 0x158\n  9734: ecalli 6 // 'hash_keccak_256'\n  9736: a3 = u64 [s1 + 0x88]\n  9740: t0 = 0x15a\n  9744: jump @1383\n      : @359 [@dyn 172] (gas: 2)\n  9747: a3 = u64 [s1 + 0x88]\n  9751: t0 = 346, jump @1383\n      : @360 [@dyn 173] (gas: 27)\n  9757: u64 [s1 + 0x80] = a0\n  9761: a0 = reverse a1\n  9763: u64 [s1 + 0x78] = a0\n  9766: a0 = reverse a2\n  9768: u64 [s1 + 0x70] = a0\n  9771: a0 = reverse a3\n  9773: u64 [s1 + 0x68] = a0\n  9776: a0 = sp + 0xffffffffffffffe0\n  9779: a0 = a0 & 0xffffffffffffffe0\n  9782: u64 [s1 + 0x88] = a0\n  9786: sp = a0\n  9788: a0 = u64 [s1 + 0x98]\n  9792: a0 = a0 & 0xffffffffffffffff\n  9795: a2 = u64 [s1 + 0xa0]\n  9799: a1 = a2 & 0xffffffffffffffff\n  9802: a2 = u64 [s1 + 0xb8]\n  9806: a3 = u64 [s1 + 0xa8]\n  9810: a2 = a2 & a3\n  9813: a3 = s1 + 0x1038\n  9817: u64 [a3 + 1024] = 0\n  9821: a4 = a3 + 0x300\n  9825: u64 [a4 + 0xf8] = a2\n  9829: u64 [a4 + 0xf0] = a1\n  9833: a1 = s1 + 0x1420\n  9837: u64 [a4 + 0xe8] = a0\n  9841: a0 = 0\n  9843: ra = 348, jump @19\n      : @361 [@dyn 174] (gas: 14)\n  9849: a0 = u64 [s1 + 0x68]\n  9852: a1 = s1 + 0x1038\n  9856: a2 = a1 + 0x300\n  9860: u64 [a2 + 0xe0] = a0\n  9864: a0 = u64 [s1 + 0x70]\n  9867: u64 [a2 + 0xd8] = a0\n  9871: a0 = u64 [s1 + 0x78]\n  9874: u64 [a2 + 0xd0] = a0\n  9878: a3 = a1\n  9880: a0 = 0x20\n  9883: a1 = s1 + 0x1400\n  9887: a2 = u64 [s1 + 0x80]\n  9891: u64 [a3 + 0x3c8] = a2\n  9895: ra = 350, jump @19\n      : @362 [@dyn 175] (gas: 3)\n  9901: a1 = u64 [s1 + 0xb0]\n  9905: a0 = i32 [a1]\n  9907: jump @364 if a0 >u 63\n      : @363 (gas: 2)\n  9911: u32 [a1 + 0] = 0x40\n  9914: fallthrough\n      : @364 (gas: 12)\n  9915: a0 = sp + 0xffffffffffffffe0\n  9918: a0 = a0 & 0xffffffffffffffe0\n  9921: u64 [s1 + 0xb8] = a0\n  9925: sp = a0\n  9927: i32 a2 = a0 + 0\n  9929: a1 = 0x40\n  9932: a0 = u64 [s1 + 0x90]\n  9936: ra = 0x160\n  9940: ecalli 6 // 'hash_keccak_256'\n  9942: a3 = u64 [s1 + 0xb8]\n  9946: t0 = 0x162\n  9950: jump @1330\n      : @365 [@dyn 176] (gas: 2)\n  9953: a3 = u64 [s1 + 0xb8]\n  9957: t0 = 354, jump @1330\n      : @366 [@dyn 177] (gas: 7)\n  9963: a1 = u64 [s1 + 0x88]\n  9967: u64 [a1 + 0x18] = a3\n  9970: u64 [a1 + 0x10] = a2\n  9973: u64 [a1 + 0x8] = a4\n  9976: u64 [a1] = a0\n  9978: a0 = s1 + 0x13e0\n  9982: ra = 356, jump @21\n      : @367 [@dyn 178] (gas: 13)\n  9988: a1 = s1 + 0x1038\n  9992: a2 = a1 + 0x300\n  9996: a0 = u64 [a2 + 0xc0]\n 10000: u64 [s1 + 0xb8] = a0\n 10004: a0 = u64 [a2 + 0xb8]\n 10008: u64 [s1 + 0xb0] = a0\n 10012: a0 = u64 [a2 + 0xb0]\n 10016: u64 [s1 + 0xa8] = a0\n 10020: a0 = u64 [a2 + 0xa8]\n 10024: u64 [s1 + 0xa0] = a0\n 10028: a0 = s1 + 0x13c0\n 10032: a1 = 0x40\n 10035: ra = 358, jump @17\n      : @368 [@dyn 179] (gas: 3)\n 10041: a3 = s1 + 0x1038\n 10045: a5 = a3 + 0x300\n 10049: t0 = 360, jump @1386\n      : @369 [@dyn 180] (gas: 1)\n 10055: jump @371 if a0 == 0\n      : @370 (gas: 1)\n 10058: jump @654\n      : @371 (gas: 14)\n 10061: a0 = u64 [s1 + 0xa0]\n 10065: a2 = a3 + 0x300\n 10069: u64 [a2 + 0x68] = a0\n 10072: a0 = u64 [s1 + 0xa8]\n 10076: u64 [a2 + 0x70] = a0\n 10079: a0 = u64 [s1 + 0xb0]\n 10083: u64 [a2 + 0x78] = a0\n 10086: a1 = s1 + 0x13a0\n 10090: a0 = u64 [s1 + 0xb8]\n 10094: u64 [a2 + 0x80] = a0\n 10098: a0 = a4\n 10100: u64 [s1 + 0xb8] = a4\n 10104: ra = 0x2d6\n 10108: jump @19\n      : @372 (gas: 10)\n 10111: u64 [a2 + 1760] = 0\n 10115: u64 [a2 + 1752] = 0\n 10119: u64 [a2 + 1744] = 0\n 10123: u64 [a2 + 1736] = 0\n 10127: a0 = s1 + 0x1000\n 10131: i32 a0 = a0 + 0x700\n 10135: ra = 0x16a\n 10139: ecalli 10 // 'value_transferred'\n 10141: t0 = 0x16c\n 10145: jump @1354\n      : @373 [@dyn 181] (gas: 1)\n 10148: t0 = 364, jump @1354\n      : @374 [@dyn 182] (gas: 1)\n 10154: t0 = 366, jump @1392\n      : @375 [@dyn 183] (gas: 1)\n 10160: jump @377 if a0 == 0\n      : @376 (gas: 1)\n 10163: jump @689\n      : @377 (gas: 3)\n 10166: a0 = u64 [s1 + 0xb8]\n 10170: a0 = i32 [a0]\n 10172: jump @379 if a0 >u 3\n      : @378 (gas: 1)\n 10176: jump @690\n      : @379 (gas: 3)\n 10179: a0 = s1 + 0x7e0\n 10183: a1 = 0x40\n 10186: ra = 368, jump @17\n      : @380 [@dyn 184] (gas: 6)\n 10192: a4 = s1 + 0x700\n 10196: a3 = u64 [a4 + 0xf8]\n 10200: a1 = u64 [a4 + 0xf0]\n 10204: a2 = u64 [a4 + 0xe8]\n 10208: a0 = u64 [a4 + 0xe0]\n 10212: t0 = 370, jump @1332\n      : @381 [@dyn 185] (gas: 1)\n 10218: jump @383 if a1 == 0\n      : @382 (gas: 1)\n 10221: jump @654\n      : @383 (gas: 8)\n 10224: u64 [s1 + 2008] = 0\n 10228: u64 [s1 + 2000] = 0\n 10232: u64 [s1 + 1992] = 0\n 10236: a1 = s1 + 0x7c0\n 10240: u64 [s1 + 1984] = 0x12\n 10245: u64 [s1 + 0xb8] = a0\n 10249: ra = 0x2d6\n 10253: jump @19\n      : @384 (gas: 11)\n 10256: a0 = s1 + 0x1838\n 10260: u64 [a0 + 704] = 0\n 10264: u64 [a0 + 696] = 0\n 10268: u64 [a0 + 688] = 0\n 10272: u64 [a0 + 680] = 0\n 10276: a0 = s1 + 0x2000\n 10280: i32 a0 = a0 + 0xfffffffffffffae0\n 10284: ra = 0x174\n 10288: ecalli 10 // 'value_transferred'\n 10290: t0 = 0x176\n 10294: jump @1361\n      : @385 [@dyn 186] (gas: 1)\n 10297: t0 = 374, jump @1361\n      : @386 [@dyn 187] (gas: 8)\n 10303: a0 = u64 [a4 + 0xb8]\n 10307: a1 = u64 [a4 + 0xc0]\n 10311: a2 = u64 [a4 + 0xb0]\n 10315: a3 = u64 [a4 + 0xa8]\n 10319: a1 = a1 | a2\n 10322: a0 = a0 | a3\n 10325: a0 = a0 | a1\n 10328: jump @388 if a0 == 0\n      : @387 (gas: 1)\n 10331: jump @691\n      : @388 (gas: 3)\n 10334: a0 = u64 [s1 + 0xb8]\n 10338: a0 = i32 [a0]\n 10340: jump @390 if a0 >u 3\n      : @389 (gas: 1)\n 10344: jump @692\n      : @390 (gas: 3)\n 10347: a0 = s1 + 0x12a0\n 10351: a1 = 0x40\n 10354: ra = 376, jump @17\n      : @391 [@dyn 188] (gas: 7)\n 10360: a3 = s1 + 0x1038\n 10364: a5 = a3 + 0x200\n 10368: a4 = u64 [a5 + 0x80]\n 10372: a1 = u64 [a5 + 0x78]\n 10375: a2 = u64 [a5 + 0x70]\n 10378: a0 = u64 [a5 + 0x68]\n 10381: t0 = 378, jump @1341\n      : @392 [@dyn 189] (gas: 1)\n 10387: jump @394 if a1 == 0\n      : @393 (gas: 1)\n 10390: jump @654\n      : @394 (gas: 13)\n 10393: a1 = u64 [0x20048]\n 10398: a5 = a3 + 0x200\n 10402: u64 [a5 + 0x60] = a1\n 10405: a4 = u64 [0x20050]\n 10410: a1 = u64 [0x20058]\n 10415: a2 = u64 [0x20060]\n 10420: u64 [a5 + 0x58] = a4\n 10423: u64 [a5 + 0x50] = a1\n 10426: a1 = s1 + 0x1280\n 10430: u64 [a5 + 0x48] = a2\n 10433: u64 [s1 + 0xb8] = a0\n 10437: ra = 0x2d6\n 10441: jump @19\n      : @395 (gas: 10)\n 10444: u64 [a2 + 1376] = 0\n 10448: u64 [a2 + 1368] = 0\n 10452: u64 [a2 + 1360] = 0\n 10456: u64 [a2 + 1352] = 0\n 10460: a0 = s1 + 0x1000\n 10464: i32 a0 = a0 + 0x580\n 10468: ra = 0x17c\n 10472: ecalli 10 // 'value_transferred'\n 10474: t0 = 0x17e\n 10478: jump @1398\n      : @396 [@dyn 190] (gas: 1)\n 10481: t0 = 382, jump @1398\n      : @397 [@dyn 191] (gas: 1)\n 10487: t0 = 384, jump @1374\n      : @398 [@dyn 192] (gas: 1)\n 10493: jump @400 if a0 == 0\n      : @399 (gas: 1)\n 10496: jump @693\n      : @400 (gas: 3)\n 10499: a0 = u64 [s1 + 0xb8]\n 10503: a0 = i32 [a0]\n 10505: jump @402 if a0 >u 3\n      : @401 (gas: 1)\n 10509: jump @694\n      : @402 (gas: 3)\n 10512: a0 = s1 + 0x2a0\n 10516: a1 = 0x40\n 10519: ra = 386, jump @17\n      : @403 [@dyn 193] (gas: 16)\n 10525: a0 = u64 [s1 + 0x2b8]\n 10529: u64 [s1 + 0x18] = a0\n 10532: a0 = u64 [s1 + 0x2b0]\n 10536: u64 [s1 + 0x28] = a0\n 10539: a0 = u64 [s1 + 0x2a8]\n 10543: u64 [s1 + 0x20] = a0\n 10546: a0 = u64 [s1 + 0x2a0]\n 10550: u64 [s1 + 0x30] = a0\n 10553: a0 = s1 + 0x1038\n 10557: u64 [a0 + 1408] = 0\n 10561: u64 [a0 + 1400] = 0\n 10565: u64 [a0 + 1392] = 0\n 10569: u64 [a0 + 1384] = 0x3\n 10574: a0 = s1 + 0x280\n 10578: a1 = s1 + 0x15a0\n 10582: ra = 388, jump @21\n      : @404 [@dyn 194] (gas: 34)\n 10588: a2 = u64 [s1 + 0x290]\n 10592: t2 = u64 [s1 + 0x288]\n 10596: t0 = u64 [s1 + 0x298]\n 10600: a5 = u64 [s1 + 0x280]\n 10604: a0 = a2 << 0x3f\n 10607: a1 = t2 >> 0x1\n 10610: a0 = a0 | a1\n 10613: a1 = t0 << 0x3f\n 10616: u64 [s1 + 0xb0] = a2\n 10620: a2 = a2 >> 0x1\n 10623: a1 = a1 | a2\n 10626: a2 = t2 << 0x3f\n 10629: a3 = a5 >> 0x1\n 10632: a4 = a3 | a2\n 10635: a2 = t0 >> 0x1\n 10638: u64 [s1 + 0xa8] = a5\n 10642: a5 = a5 & 0x1\n 10645: a3 = -a5\n 10647: a1 = a1 & a3\n 10650: t1 = a3 & a0\n 10653: a2 = a2 & a3\n 10656: ra = a4 & 0x7f\n 10659: a4 = ra if a5 == 0\n 10662: u64 [s1 + 0x70] = a4\n 10665: a0 = a4 <u 0x20\n 10668: u64 [s1 + 0x60] = t1\n 10671: a0 = 0 if t1 != 0\n 10673: u64 [s1 + 0x68] = a1\n 10676: u64 [s1 + 0x58] = a2\n 10679: a1 = a1 | a2\n 10682: a0 = 0 if a1 != 0\n 10684: u64 [s1 + 0xb8] = a5\n 10688: a1 = a5 <u 0x1\n 10691: jump @406 if a1 == a0\n      : @405 (gas: 1)\n 10694: jump @695\n      : @406 (gas: 12)\n 10697: a2 = u64 [s1 + 0x28]\n 10700: a4 = u64 [s1 + 0x30]\n 10703: a0 = a4 | a2\n 10706: a1 = u64 [s1 + 0x18]\n 10709: a3 = u64 [s1 + 0x20]\n 10712: a1 = a1 | a3\n 10715: a0 = a0 | a1\n 10718: a0 = a0 >> 0x20\n 10721: a1 = a1 | a2\n 10724: a1 = a1 << 0x20\n 10727: a1 = a1 | a0\n 10730: jump @408 if a1 == 0\n      : @407 (gas: 1)\n 10733: jump @654\n      : @408 (gas: 15)\n 10736: a0 = a4\n 10738: u64 [s1 + 0x90] = ra\n 10742: u64 [s1 + 0x98] = t2\n 10746: u64 [s1 + 0xa0] = t0\n 10750: a1 = u64 [s1 + 0x70]\n 10753: a3 = s1 + 0x200\n 10757: u64 [a3 + 0x60] = a1\n 10760: a1 = u64 [s1 + 0x60]\n 10763: u64 [a3 + 0x68] = a1\n 10766: a1 = u64 [s1 + 0x68]\n 10769: u64 [a3 + 0x70] = a1\n 10772: a1 = s1 + 0x260\n 10776: a2 = u64 [s1 + 0x58]\n 10779: u64 [a3 + 0x78] = a2\n 10782: ra = 390, jump @19\n      : @409 [@dyn 195] (gas: 2)\n 10788: a0 = u64 [s1 + 0xb8]\n 10792: jump @411 if a0 == 0\n      : @410 (gas: 1)\n 10795: jump @655\n      : @411 (gas: 1)\n 10798: t0 = 392, jump @1372\n      : @412 [@dyn 196] (gas: 1)\n 10804: jump @414 if a1 != 0\n      : @413 (gas: 1)\n 10807: jump @654\n      : @414 (gas: 13)\n 10810: a1 = u64 [s1 + 0xa8]\n 10814: a1 = a1 & 0xffffffffffffff00\n 10818: i32 a0 = a3 + 0x20\n 10821: a3 = u64 [s1 + 0x98]\n 10825: a2 = s1 + 0x100\n 10829: u64 [a2 + 0xe8] = a3\n 10833: u64 [a2 + 0xe0] = a1\n 10837: a1 = u64 [s1 + 0xb0]\n 10841: u64 [a2 + 0xf0] = a1\n 10845: a1 = s1 + 0x1e0\n 10849: a3 = u64 [s1 + 0xa0]\n 10853: u64 [a2 + 0xf8] = a3\n 10857: ra = 394, jump @19\n      : @415 [@dyn 197] (gas: 9)\n 10863: t2 = 0\n 10865: t1 = 0\n 10867: u64 [s1 + 176] = 0\n 10871: a0 = u64 [s1 + 0x90]\n 10875: a0 = a0 >u 0\n 10877: a0 = a0 << 0x5\n 10880: u64 [s1 + 0xb8] = a0\n 10884: t0 = 0x18c\n 10888: jump @1366\n      : @416 (gas: 1)\n 10891: t0 = 396, jump @1366\n      : @417 [@dyn 198] (gas: 28)\n 10897: t0 = u64 [s1 + 0x20]\n 10900: a3 = a2 + t0\n 10903: ra = a3 + a0\n 10906: a3 = ra ^ a2\n 10909: a4 = ra <u a2\n 10912: a4 = a0 if a3 == 0\n 10915: a0 = a2 <u t2\n 10918: a0 = a1 if a1 == 0\n 10921: a0 = a0 + t1\n 10924: a1 = a0 <u t1\n 10927: a2 = u64 [s1 + 0x28]\n 10930: a2 = a2 + a0\n 10933: a4 = a4 + a2\n 10936: a0 = a2 <u a0\n 10939: a2 = a4 <u a2\n 10942: t1 = u64 [s1 + 0x18]\n 10945: a3 = u64 [s1 + 0xb0]\n 10949: a3 = a3 + t1\n 10952: a1 = a1 + a3\n 10955: a0 = a0 + a1\n 10958: a5 = a0 + a2\n 10961: a0 = a5 >u 0\n 10963: a1 = a4 >u 0\n 10965: a1 = a0 if a5 != 0\n 10968: a0 = a4 | a5\n 10971: a2 = ra >u 0\n 10973: a2 = a1 if a0 != 0\n 10976: jump @419 if a2 == 0\n      : @418 (gas: 1)\n 10979: jump @764\n      : @419 (gas: 6)\n 10982: a0 = u64 [s1 + 0x30]\n 10985: a1 = u64 [s1 + 0xb8]\n 10989: a0 = a1 <u a0\n 10992: a1 = ra ^ t0\n 10995: a2 = ra <u t0\n 10998: t0 = 398, jump @1364\n      : @420 [@dyn 199] (gas: 1)\n 11004: jump @422 if a3 == 0\n      : @421 (gas: 1)\n 11007: jump @764\n      : @422 (gas: 11)\n 11010: a0 = u64 [s1 + 0xb8]\n 11014: u64 [s1 + 0x1c0] = a0\n 11018: u64 [s1 + 0x1c8] = ra\n 11022: u64 [s1 + 0x1d0] = a4\n 11026: a0 = 0x40\n 11029: a1 = s1 + 0x1c0\n 11033: u64 [s1 + 0x1d8] = a5\n 11037: u64 [s1 + 0xa8] = ra\n 11041: u64 [s1 + 0xa0] = a4\n 11045: u64 [s1 + 0xb0] = a5\n 11049: ra = 400, jump @19\n      : @423 [@dyn 200] (gas: 21)\n 11055: a0 = u64 [s1 + 0x18]\n 11058: a4 = s1 + 0x100\n 11062: u64 [a4 + 0x78] = a0\n 11065: a0 = u64 [s1 + 0x28]\n 11068: u64 [a4 + 0x70] = a0\n 11071: a0 = u64 [s1 + 0x20]\n 11074: u64 [a4 + 0x68] = a0\n 11077: a0 = u64 [s1 + 0x30]\n 11080: u64 [a4 + 0x60] = a0\n 11083: a0 = u64 [s1 + 0xb0]\n 11087: u64 [a4 + 0x98] = a0\n 11091: a0 = u64 [s1 + 0xa0]\n 11095: u64 [a4 + 0x90] = a0\n 11099: a0 = u64 [s1 + 0xa8]\n 11103: u64 [a4 + 0x88] = a0\n 11107: a0 = s1 + 0x1a0\n 11111: a1 = s1 + 0x180\n 11115: a2 = s1 + 0x160\n 11119: a3 = u64 [s1 + 0xb8]\n 11123: u64 [a4 + 0x80] = a3\n 11127: ra = 402, jump @995\n      : @424 [@dyn 201] (gas: 12)\n 11133: a2 = u64 [s1 + 0xa0]\n 11137: a4 = u64 [s1 + 0xa8]\n 11141: t0 = u64 [s1 + 0xb8]\n 11145: a0 = t0 | a2\n 11148: a1 = u64 [s1 + 0xb0]\n 11152: a1 = a1 | a4\n 11155: a0 = a0 | a1\n 11158: a0 = a0 >> 0x20\n 11161: a1 = a1 | a2\n 11164: a1 = a1 << 0x20\n 11167: a0 = a0 | a1\n 11170: jump @426 if a0 == 0\n      : @425 (gas: 1)\n 11173: jump @654\n      : @426 (gas: 7)\n 11176: a5 = s1 + 0x100\n 11180: a0 = u64 [a5 + 0xa8]\n 11184: a1 = u64 [a5 + 0xb8]\n 11188: u64 [s1 + 0x98] = a1\n 11192: t1 = u64 [s1 + 0x1a0]\n 11196: a3 = u64 [a5 + 0xb0]\n 11200: jump @506\n      : @427 (gas: 8)\n 11203: u64 [a2 + 1984] = 0\n 11207: u64 [a2 + 1976] = 0\n 11211: u64 [a2 + 1968] = 0\n 11215: u64 [a2 + 1960] = 0\n 11219: a0 = s1 + 0x1000\n 11223: i32 a0 = a0 + 0x7e0\n 11227: ecalli 10 // 'value_transferred'\n 11229: fallthrough\n      : @428 (gas: 10)\n 11230: a3 = s1 + 0x1038\n 11234: a4 = a3 + 0x700\n 11238: a0 = u64 [a4 + 0xb8]\n 11242: a1 = u64 [a4 + 0xc0]\n 11246: a2 = u64 [a4 + 0xb0]\n 11250: a3 = u64 [a4 + 0xa8]\n 11254: a1 = a1 | a2\n 11257: a0 = a0 | a3\n 11260: a0 = a0 | a1\n 11263: jump @430 if a0 == 0\n      : @429 (gas: 1)\n 11266: jump @701\n      : @430 (gas: 4)\n 11269: a0 = u64 [s1 + 0xb8]\n 11273: a0 = i32 [a0]\n 11275: a1 = 0x43\n 11278: jump @432 if a1 <u a0\n      : @431 (gas: 1)\n 11281: jump @702\n      : @432 (gas: 5)\n 11284: a0 = s1 + 0x7ff\n 11288: a0 = a0 + 0x3e1\n 11292: ra = 0x194\n 11296: t0 = 0x3f2\n 11300: jump @1397\n      : @433 [@dyn 202] (gas: 42)\n 11303: a1 = s1 + 0x7ff\n 11307: a1 = a1 + 0x39\n 11310: a2 = a1 + 0x300\n 11314: a0 = u64 [a2 + 0xb8]\n 11318: u64 [s1 + 0x78] = a0\n 11321: a0 = u64 [a2 + 0xb0]\n 11325: u64 [s1 + 0xa8] = a0\n 11329: a0 = u64 [a2 + 0xa8]\n 11333: u64 [s1 + 0xb0] = a0\n 11337: a0 = s1 + 0x2000\n 11341: i32 a0 = a0 + 0xfffffffffffff800\n 11345: a1 = 0x24\n 11348: ecalli 1 // 'call_data_load'\n 11350: a0 = s1 + 0x1038\n 11354: a2 = a0 + 0x700\n 11358: a1 = u64 [a2 + 0xe0]\n 11362: u64 [s1 + 0xa0] = a1\n 11366: a1 = u64 [a2 + 0xd8]\n 11370: u64 [s1 + 0x90] = a1\n 11374: a1 = u64 [a2 + 0xd0]\n 11378: u64 [s1 + 0x88] = a1\n 11382: a0 = u64 [a2 + 0xc8]\n 11386: u64 [s1 + 0x80] = a0\n 11390: a0 = u64 [0x20048]\n 11395: u64 [s1 + 0x40] = a0\n 11398: a3 = s1 + 0x7ff\n 11402: a3 = a3 + 0x39\n 11405: a4 = a3 + 0x300\n 11409: u64 [a4 + 0xa0] = a0\n 11413: a1 = u64 [0x20050]\n 11418: a2 = u64 [0x20058]\n 11423: a0 = u64 [0x20060]\n 11428: u64 [s1 + 0x30] = a1\n 11431: u64 [a4 + 0x98] = a1\n 11435: u64 [s1 + 0x28] = a2\n 11438: u64 [a4 + 0x90] = a2\n 11442: a1 = s1 + 0x7ff\n 11446: a1 = a1 + 0x3c1\n 11450: u64 [s1 + 0x38] = a0\n 11453: u64 [a4 + 0x88] = a0\n 11457: a0 = 0\n 11459: ra = 406, jump @19\n      : @434 [@dyn 203] (gas: 11)\n 11465: a1 = s1 + 0x7ff\n 11469: a1 = a1 + 0x39\n 11472: u64 [a1 + 896] = 0\n 11476: u64 [a1 + 888] = 0\n 11480: u64 [a1 + 872] = 0x6\n 11485: a2 = a1\n 11487: a0 = 0x20\n 11490: a1 = s1 + 0x7ff\n 11494: a1 = a1 + 0x3a1\n 11498: u64 [a2 + 880] = 0\n 11502: ra = 408, jump @19\n      : @435 [@dyn 204] (gas: 3)\n 11508: a1 = 0x2026c\n 11513: a0 = i32 [0x2026c]\n 11518: jump @437 if a0 >u 63\n      : @436 (gas: 2)\n 11522: u32 [0x2026c] = 0x40\n 11528: fallthrough\n      : @437 (gas: 15)\n 11529: a0 = sp + 0xffffffffffffffe0\n 11532: a2 = a0 & 0xffffffffffffffe0\n 11535: u64 [s1 + 0x70] = a2\n 11538: sp = a2\n 11540: a0 = 0x20280\n 11545: i32 a0 = a0 + 0\n 11547: u64 [s1 + 0x98] = a1\n 11551: i32 a2 = a2 + 0\n 11553: a1 = 0x40\n 11556: u64 [s1 + 0xb8] = a0\n 11560: ra = 0x19a\n 11564: ecalli 6 // 'hash_keccak_256'\n 11566: a3 = u64 [s1 + 0x70]\n 11569: t0 = 0x19c\n 11573: jump @1349\n      : @438 [@dyn 205] (gas: 2)\n 11576: a3 = u64 [s1 + 0x70]\n 11579: t0 = 412, jump @1349\n      : @439 [@dyn 206] (gas: 9)\n 11585: a0 = 0x30280\n 11590: u64 [s1 + 0x70] = a0\n 11593: i32 a0 = a0 + 0\n 11595: u64 [s1 + 0x20] = a0\n 11598: ra = 0x19e\n 11602: ecalli 3 // 'caller'\n 11604: a2 = u64 [s1 + 0x70]\n 11607: t0 = 0x1a0\n 11611: jump @1321\n      : @440 [@dyn 207] (gas: 2)\n 11614: a2 = u64 [s1 + 0x70]\n 11617: t0 = 416, jump @1321\n      : @441 [@dyn 208] (gas: 9)\n 11623: u64 [a2 + 864] = 0\n 11627: a4 = a2 + 0x300\n 11631: u64 [a4 + 0x58] = a1\n 11634: u64 [a4 + 0x50] = a0\n 11637: a1 = s1 + 0x7ff\n 11641: a1 = a1 + 0x381\n 11645: u64 [a4 + 0x48] = a3\n 11648: a0 = 0\n 11650: ra = 418, jump @19\n      : @442 [@dyn 209] (gas: 16)\n 11656: a0 = u64 [s1 + 0x48]\n 11659: a1 = s1 + 0x7ff\n 11663: a1 = a1 + 0x39\n 11666: a2 = a1 + 0x300\n 11670: u64 [a2 + 0x40] = a0\n 11673: a0 = u64 [s1 + 0x50]\n 11676: u64 [a2 + 0x38] = a0\n 11679: a0 = u64 [s1 + 0x58]\n 11682: u64 [a2 + 0x30] = a0\n 11685: a3 = a1\n 11687: a0 = 0x20\n 11690: a1 = s1 + 0x7ff\n 11694: a1 = a1 + 0x361\n 11698: a2 = u64 [s1 + 0x60]\n 11701: u64 [a3 + 0x328] = a2\n 11705: ra = 420, jump @19\n      : @443 [@dyn 210] (gas: 3)\n 11711: a1 = u64 [s1 + 0x98]\n 11715: a0 = i32 [a1]\n 11717: jump @445 if a0 >u 63\n      : @444 (gas: 2)\n 11721: u32 [a1 + 0] = 0x40\n 11724: fallthrough\n      : @445 (gas: 4)\n 11725: a0 = sp + 0xffffffffffffffe0\n 11728: a0 = a0 & 0xffffffffffffffe0\n 11731: u64 [s1 + 0x60] = a0\n 11734: t0 = 422, jump @1385\n      : @446 [@dyn 211] (gas: 5)\n 11740: ra = 0x1a8\n 11744: ecalli 6 // 'hash_keccak_256'\n 11746: a3 = u64 [s1 + 0x60]\n 11749: t0 = 0x1aa\n 11753: jump @1359\n      : @447 [@dyn 212] (gas: 2)\n 11756: a3 = u64 [s1 + 0x60]\n 11759: t0 = 426, jump @1359\n      : @448 [@dyn 213] (gas: 3)\n 11765: a0 = s1 + 0x7ff\n 11769: a0 = a0 + 0x341\n 11773: ra = 428, jump @21\n      : @449 [@dyn 214] (gas: 4)\n 11779: a2 = s1 + 0x7ff\n 11783: a2 = a2 + 0x39\n 11786: a0 = u8 [a2 + 0x308]\n 11790: jump @451 if a0 != 0\n      : @450 (gas: 1)\n 11793: jump @703\n      : @451 (gas: 9)\n 11796: a0 = u64 [s1 + 0x78]\n 11799: a0 = a0 << 0x20\n 11802: a2 = a0 >> 0x20\n 11805: a0 = u64 [s1 + 0xb0]\n 11809: a1 = u64 [s1 + 0xa8]\n 11813: a0 = a0 | a1\n 11816: u64 [s1 + 0x70] = a2\n 11819: a0 = a0 | a2\n 11822: jump @453 if a0 != 0\n      : @452 (gas: 1)\n 11825: jump @711\n      : @453 (gas: 1)\n 11828: ra = 430, jump @1312\n      : @454 [@dyn 215] (gas: 9)\n 11834: a0 = s1 + 0x1838\n 11838: u64 [a0 + 0] = 0\n 11840: u64 [a0 + 4294967288] = 0\n 11843: u64 [a0 + 4294967280] = 0\n 11846: u64 [a0 + 4294967272] = 0x2\n 11850: a0 = s1 + 0x7ff\n 11854: a0 = a0 + 0x321\n 11858: a1 = s1 + 0x1820\n 11862: ra = 432, jump @21\n      : @455 [@dyn 216] (gas: 40)\n 11868: a1 = s1 + 0x7ff\n 11872: a1 = a1 + 0x39\n 11875: t2 = u64 [a1 + 0x300]\n 11879: a2 = a1 + 0x200\n 11883: a0 = u64 [a2 + 0xf8]\n 11887: a4 = u64 [a2 + 0xe8]\n 11891: a5 = u64 [a2 + 0xf0]\n 11895: a1 = sp + 0xffffffffffffffe0\n 11898: a1 = a1 & 0xffffffffffffffe0\n 11901: sp = a1\n 11903: a3 = u64 [s1 + 0x88]\n 11907: a3 = a3 + a5\n 11910: t0 = u64 [s1 + 0x80]\n 11914: t0 = t0 + a4\n 11917: a4 = t0 <u a4\n 11920: a3 = a3 + a4\n 11923: t1 = a3 ^ a5\n 11926: a2 = a3 <u a5\n 11929: a2 = a4 if t1 == 0\n 11932: a4 = u64 [s1 + 0x90]\n 11936: a4 = a4 + a0\n 11939: a5 = a4 + a2\n 11942: t1 = a5 <u a4\n 11945: ra = u64 [s1 + 0xa0]\n 11949: ra = ra + t2\n 11952: a4 = a4 <u a0\n 11955: a4 = a4 + ra\n 11958: ra = a4 + t1\n 11961: t1 = a5 <u a0\n 11964: a4 = t2 ^ ra\n 11967: t2 = ra <u t2\n 11970: t2 = t1 if a4 == 0\n 11973: a0 = a0 ^ a5\n 11976: a0 = a0 | a4\n 11979: t2 = a2 if a0 == 0\n 11982: u64 [a1 + 0x10] = a5\n 11985: u64 [a1 + 0x8] = a3\n 11988: u64 [a1] = t0\n 11990: u64 [a1 + 0x18] = ra\n 11993: jump @457 if t2 == 0\n      : @456 (gas: 1)\n 11996: jump @713\n      : @457 (gas: 7)\n 11999: a0 = s1 + 0x1838\n 12003: u64 [a0 + 32] = 0\n 12006: u64 [a0 + 24] = 0\n 12009: u64 [a0 + 16] = 0\n 12012: u64 [a0 + 8] = 0x2\n 12016: a0 = s1 + 0x1840\n 12020: ra = 434, jump @24\n      : @458 [@dyn 217] (gas: 14)\n 12026: a2 = s1 + 0x7ff\n 12030: a2 = a2 + 0x39\n 12033: u64 [a2 + 736] = 0\n 12037: a0 = u64 [s1 + 0x70]\n 12040: a3 = a2 + 0x200\n 12044: u64 [a3 + 0xd8] = a0\n 12048: a0 = u64 [s1 + 0xa8]\n 12052: u64 [a3 + 0xd0] = a0\n 12056: a1 = s1 + 0x7ff\n 12060: a1 = a1 + 0x301\n 12064: a0 = u64 [s1 + 0xb0]\n 12068: u64 [a3 + 0xc8] = a0\n 12072: a0 = 0\n 12074: ra = 436, jump @19\n      : @459 [@dyn 218] (gas: 11)\n 12080: a0 = s1 + 0x7ff\n 12084: a0 = a0 + 0x39\n 12087: u64 [a0 + 704] = 0\n 12091: u64 [a0 + 696] = 0\n 12095: u64 [a0 + 688] = 0\n 12099: a2 = a0\n 12101: a0 = 0x20\n 12104: a1 = s1 + 0x7ff\n 12108: a1 = a1 + 0x2e1\n 12112: u64 [a2 + 680] = 0\n 12116: ra = 438, jump @19\n      : @460 [@dyn 219] (gas: 7)\n 12122: a0 = sp + 0xffffffffffffffe0\n 12125: a0 = a0 & 0xffffffffffffffe0\n 12128: u64 [s1 + 0x78] = a0\n 12131: sp = a0\n 12133: a2 = u64 [s1 + 0x98]\n 12137: a0 = i32 [a2]\n 12139: jump @462 if a0 >u 63\n      : @461 (gas: 2)\n 12143: u32 [a2 + 0] = 0x40\n 12146: fallthrough\n      : @462 (gas: 4)\n 12147: a0 = sp + 0xffffffffffffffe0\n 12150: a0 = a0 & 0xffffffffffffffe0\n 12153: u64 [s1 + 0x98] = a0\n 12157: t0 = 440, jump @1385\n      : @463 [@dyn 220] (gas: 5)\n 12163: ra = 0x1ba\n 12167: ecalli 6 // 'hash_keccak_256'\n 12169: a3 = u64 [s1 + 0x98]\n 12173: t0 = 0x1bc\n 12177: jump @1330\n      : @464 [@dyn 221] (gas: 2)\n 12180: a3 = u64 [s1 + 0x98]\n 12184: t0 = 444, jump @1330\n      : @465 [@dyn 222] (gas: 8)\n 12190: a1 = u64 [s1 + 0x78]\n 12193: u64 [a1 + 0x18] = a3\n 12196: u64 [a1 + 0x10] = a2\n 12199: u64 [a1 + 0x8] = a4\n 12202: u64 [a1] = a0\n 12204: a0 = s1 + 0x7ff\n 12208: a0 = a0 + 0x2c1\n 12212: ra = 446, jump @21\n      : @466 [@dyn 223] (gas: 33)\n 12218: a2 = s1 + 0x7ff\n 12222: a2 = a2 + 0x39\n 12225: a4 = a2 + 0x200\n 12229: a0 = u64 [a4 + 0x90]\n 12233: a1 = u64 [a4 + 0x88]\n 12237: t0 = u64 [a2 + 0x2a0]\n 12241: a3 = u64 [a4 + 0x98]\n 12245: a4 = u64 [s1 + 0x88]\n 12249: a4 = a4 + a0\n 12252: a5 = u64 [s1 + 0x80]\n 12256: a5 = a5 + a1\n 12259: a1 = a5 <u a1\n 12262: a4 = a4 + a1\n 12265: a2 = a4 ^ a0\n 12268: a0 = a4 <u a0\n 12271: a0 = a1 if a2 == 0\n 12274: a1 = u64 [s1 + 0x90]\n 12278: a1 = a1 + a3\n 12281: a2 = u64 [s1 + 0xa0]\n 12285: t0 = t0 + a2\n 12288: a2 = a1 <u a3\n 12291: a2 = a2 + t0\n 12294: a0 = a0 + a1\n 12297: a1 = a0 <u a1\n 12300: a1 = a1 + a2\n 12303: a2 = s1 + 0x1838\n 12307: u64 [a2 + 0x28] = a5\n 12310: u64 [a2 + 0x30] = a4\n 12313: u64 [a2 + 0x38] = a0\n 12316: u64 [a2 + 0x40] = a1\n 12319: a1 = s1 + 0x1860\n 12323: a0 = u64 [s1 + 0x78]\n 12326: ra = 448, jump @24\n      : @467 [@dyn 224] (gas: 4)\n 12332: a0 = s1 + 0x7ff\n 12336: a0 = a0 + 0x2a1\n 12340: a1 = 0x40\n 12343: ra = 450, jump @17\n      : @468 [@dyn 225] (gas: 8)\n 12349: a3 = s1 + 0x7ff\n 12353: a3 = a3 + 0x39\n 12356: a5 = a3 + 0x200\n 12360: a4 = u64 [a5 + 0x80]\n 12364: a1 = u64 [a5 + 0x78]\n 12367: a2 = u64 [a5 + 0x70]\n 12370: a0 = u64 [a5 + 0x68]\n 12373: t0 = 452, jump @1341\n      : @469 [@dyn 226] (gas: 1)\n 12379: jump @471 if a1 == 0\n      : @470 (gas: 1)\n 12382: jump @654\n      : @471 (gas: 13)\n 12385: a1 = u64 [s1 + 0x80]\n 12389: a4 = a3 + 0x200\n 12393: u64 [a4 + 0x48] = a1\n 12396: a1 = u64 [s1 + 0x88]\n 12400: u64 [a4 + 0x50] = a1\n 12403: a1 = u64 [s1 + 0x90]\n 12407: u64 [a4 + 0x58] = a1\n 12410: a1 = s1 + 0x7ff\n 12414: a1 = a1 + 0x281\n 12418: a2 = u64 [s1 + 0xa0]\n 12422: u64 [a4 + 0x60] = a2\n 12425: u64 [s1 + 0xa0] = a0\n 12429: ra = 454, jump @19\n      : @472 [@dyn 227] (gas: 32)\n 12435: a5 = s1 + 0x7ff\n 12439: a5 = a5 + 0x39\n 12442: u64 [a5 + 512] = 0\n 12446: a0 = u64 [s1 + 0x70]\n 12449: a1 = a5 + 0x100\n 12453: u64 [a1 + 0xf8] = a0\n 12457: a0 = u64 [s1 + 0xa8]\n 12461: u64 [a1 + 0xf0] = a0\n 12465: a0 = u64 [s1 + 0xb0]\n 12469: u64 [a1 + 0xe8] = a0\n 12473: u64 [a5 + 544] = 0\n 12477: u64 [a5 + 536] = 0\n 12481: u64 [a5 + 528] = 0\n 12485: a0 = u64 [0x200a8]\n 12490: a1 = u64 [0x200b0]\n 12495: a2 = u64 [0x200b8]\n 12500: a3 = u64 [0x200c0]\n 12505: a4 = a5 + 0x200\n 12509: u64 [a4 + 0x40] = a0\n 12512: u64 [a4 + 0x38] = a1\n 12515: u64 [a4 + 0x30] = a2\n 12518: u64 [a4 + 0x28] = a3\n 12521: a1 = 0x20\n 12524: a2 = s1 + 0x7ff\n 12528: a2 = a2 + 0x261\n 12532: a3 = s1 + 0x7ff\n 12536: a3 = a3 + 0x241\n 12540: a4 = s1 + 0x7ff\n 12544: a4 = a4 + 0x221\n 12548: u64 [a5 + 520] = 0\n 12552: a0 = u64 [s1 + 0xa0]\n 12556: ra = 456, jump @27\n      : @473 [@dyn 228] (gas: 5)\n 12562: a0 = 0\n 12564: a1 = u64 [s1 + 0xb8]\n 12568: a2 = 0\n 12570: ecalli 7 // 'seal_return'\n 12572: jump @825\n      : @474 (gas: 11)\n 12575: a0 = s1 + 0x1838\n 12579: u64 [a0 + 544] = 0\n 12583: u64 [a0 + 536] = 0\n 12587: u64 [a0 + 528] = 0\n 12591: u64 [a0 + 520] = 0\n 12595: a0 = s1 + 0x2000\n 12599: i32 a0 = a0 + 0xfffffffffffffa40\n 12603: ra = 0x1ca\n 12607: ecalli 10 // 'value_transferred'\n 12609: t0 = 0x1cc\n 12613: jump @1361\n      : @475 [@dyn 229] (gas: 1)\n 12616: t0 = 460, jump @1361\n      : @476 [@dyn 230] (gas: 1)\n 12622: t0 = 462, jump @1362\n      : @477 [@dyn 231] (gas: 1)\n 12628: jump @479 if a0 == 0\n      : @478 (gas: 1)\n 12631: jump @718\n      : @479 (gas: 3)\n 12634: a0 = u64 [s1 + 0xb8]\n 12638: a0 = i32 [a0]\n 12640: jump @481 if a0 >u 3\n      : @480 (gas: 1)\n 12644: jump @719\n      : @481 (gas: 3)\n 12647: a0 = s1 + 0x1160\n 12651: a1 = 0x40\n 12654: ra = 464, jump @17\n      : @482 [@dyn 232] (gas: 18)\n 12660: a1 = s1 + 0x1038\n 12664: a2 = a1 + 0x100\n 12668: a0 = u64 [a2 + 0x40]\n 12671: u64 [s1 + 0x18] = a0\n 12674: a0 = u64 [a2 + 0x38]\n 12677: u64 [s1 + 0x28] = a0\n 12680: a0 = u64 [a2 + 0x30]\n 12683: u64 [s1 + 0x20] = a0\n 12686: a0 = u64 [a2 + 0x28]\n 12689: u64 [s1 + 0x30] = a0\n 12692: a1 = s1 + 0x1838\n 12696: u64 [a1 + 576] = 0\n 12700: u64 [a1 + 568] = 0\n 12704: u64 [a1 + 560] = 0\n 12708: u64 [a1 + 552] = 0x4\n 12713: a0 = s1 + 0x1140\n 12717: a1 = s1 + 0x1a60\n 12721: ra = 466, jump @21\n      : @483 [@dyn 233] (gas: 35)\n 12727: a0 = s1 + 0x1038\n 12731: t2 = u64 [a0 + 0x118]\n 12735: ra = u64 [a0 + 0x110]\n 12739: t1 = u64 [a0 + 0x120]\n 12743: a4 = u64 [a0 + 0x108]\n 12747: a0 = t2 << 0x3f\n 12750: a1 = ra >> 0x1\n 12753: a0 = a0 | a1\n 12756: a1 = t1 << 0x3f\n 12759: a2 = t2 >> 0x1\n 12762: a1 = a1 | a2\n 12765: a2 = ra << 0x3f\n 12768: a3 = a4 >> 0x1\n 12771: a5 = a3 | a2\n 12774: a2 = t1 >> 0x1\n 12777: u64 [s1 + 0xb0] = a4\n 12781: a4 = a4 & 0x1\n 12784: a3 = -a4\n 12786: a1 = a1 & a3\n 12789: t0 = a3 & a0\n 12792: a2 = a2 & a3\n 12795: a0 = a5 & 0x7f\n 12798: u64 [s1 + 0xa8] = a0\n 12802: a5 = a0 if a4 == 0\n 12805: u64 [s1 + 0x70] = a5\n 12808: a0 = a5 <u 0x20\n 12811: u64 [s1 + 0x60] = t0\n 12814: a0 = 0 if t0 != 0\n 12816: u64 [s1 + 0x68] = a1\n 12819: u64 [s1 + 0x58] = a2\n 12822: a1 = a1 | a2\n 12825: a0 = 0 if a1 != 0\n 12827: u64 [s1 + 0xb8] = a4\n 12831: a1 = a4 <u 0x1\n 12834: jump @485 if a1 == a0\n      : @484 (gas: 1)\n 12837: jump @720\n      : @485 (gas: 12)\n 12840: a2 = u64 [s1 + 0x28]\n 12843: a3 = u64 [s1 + 0x30]\n 12846: a0 = a3 | a2\n 12849: a1 = u64 [s1 + 0x20]\n 12852: a4 = u64 [s1 + 0x18]\n 12855: a1 = a1 | a4\n 12858: a0 = a0 | a1\n 12861: a0 = a0 >> 0x20\n 12864: a1 = a1 | a2\n 12867: a1 = a1 << 0x20\n 12870: a1 = a1 | a0\n 12873: jump @487 if a1 == 0\n      : @486 (gas: 1)\n 12876: jump @654\n      : @487 (gas: 15)\n 12879: a0 = a3\n 12881: u64 [s1 + 0x90] = ra\n 12885: u64 [s1 + 0x98] = t2\n 12889: u64 [s1 + 0xa0] = t1\n 12893: a1 = u64 [s1 + 0x70]\n 12896: a3 = s1 + 0x1038\n 12900: u64 [a3 + 0xe8] = a1\n 12904: a1 = u64 [s1 + 0x60]\n 12907: u64 [a3 + 0xf0] = a1\n 12911: a1 = u64 [s1 + 0x68]\n 12914: u64 [a3 + 0xf8] = a1\n 12918: a1 = s1 + 0x1120\n 12922: a2 = u64 [s1 + 0x58]\n 12925: u64 [a3 + 0x100] = a2\n 12929: ra = 468, jump @19\n      : @488 [@dyn 234] (gas: 2)\n 12935: a0 = u64 [s1 + 0xb8]\n 12939: jump @490 if a0 == 0\n      : @489 (gas: 1)\n 12942: jump @668\n      : @490 (gas: 1)\n 12945: t0 = 470, jump @1372\n      : @491 [@dyn 235] (gas: 1)\n 12951: jump @493 if a1 != 0\n      : @492 (gas: 1)\n 12954: jump @654\n      : @493 (gas: 13)\n 12957: a1 = u64 [s1 + 0xb0]\n 12961: a1 = a1 & 0xffffffffffffff00\n 12965: i32 a0 = a3 + 0x20\n 12968: a2 = s1 + 0x1038\n 12972: a3 = u64 [s1 + 0x90]\n 12976: u64 [a2 + 0x70] = a3\n 12979: u64 [a2 + 0x68] = a1\n 12982: a1 = u64 [s1 + 0x98]\n 12986: u64 [a2 + 0x78] = a1\n 12989: a1 = s1 + 0x10a0\n 12993: a3 = u64 [s1 + 0xa0]\n 12997: u64 [a2 + 0x80] = a3\n 13001: ra = 472, jump @19\n      : @494 [@dyn 236] (gas: 9)\n 13007: t2 = 0\n 13009: t1 = 0\n 13011: u64 [s1 + 176] = 0\n 13015: a0 = u64 [s1 + 0xa8]\n 13019: a0 = a0 >u 0\n 13021: a0 = a0 << 0x5\n 13024: u64 [s1 + 0xb8] = a0\n 13028: t0 = 0x1da\n 13032: jump @1366\n      : @495 (gas: 1)\n 13035: t0 = 474, jump @1366\n      : @496 [@dyn 237] (gas: 28)\n 13041: t0 = u64 [s1 + 0x20]\n 13044: a3 = a2 + t0\n 13047: ra = a3 + a0\n 13050: a3 = ra ^ a2\n 13053: a4 = ra <u a2\n 13056: a4 = a0 if a3 == 0\n 13059: a0 = a2 <u t2\n 13062: a0 = a1 if a1 == 0\n 13065: a0 = a0 + t1\n 13068: a1 = a0 <u t1\n 13071: a2 = u64 [s1 + 0x28]\n 13074: a2 = a2 + a0\n 13077: a4 = a4 + a2\n 13080: a0 = a2 <u a0\n 13083: a2 = a4 <u a2\n 13086: t1 = u64 [s1 + 0x18]\n 13089: a3 = u64 [s1 + 0xb0]\n 13093: a3 = a3 + t1\n 13096: a1 = a1 + a3\n 13099: a0 = a0 + a1\n 13102: a5 = a0 + a2\n 13105: a0 = a5 >u 0\n 13107: a1 = a4 >u 0\n 13109: a1 = a0 if a5 != 0\n 13112: a0 = a4 | a5\n 13115: a2 = ra >u 0\n 13117: a2 = a1 if a0 != 0\n 13120: jump @498 if a2 == 0\n      : @497 (gas: 1)\n 13123: jump @770\n      : @498 (gas: 6)\n 13126: a0 = u64 [s1 + 0x30]\n 13129: a1 = u64 [s1 + 0xb8]\n 13133: a0 = a1 <u a0\n 13136: a1 = ra ^ t0\n 13139: a2 = ra <u t0\n 13142: t0 = 476, jump @1364\n      : @499 [@dyn 238] (gas: 1)\n 13148: jump @501 if a3 == 0\n      : @500 (gas: 1)\n 13151: jump @770\n      : @501 (gas: 13)\n 13154: a2 = s1 + 0x1038\n 13158: a0 = u64 [s1 + 0xb8]\n 13162: u64 [a2 + 0x48] = a0\n 13165: a3 = ra\n 13167: u64 [a2 + 0x50] = a3\n 13170: u64 [a2 + 0x58] = a4\n 13173: a0 = 0x40\n 13176: a1 = s1 + 0x1080\n 13180: u64 [a2 + 0x60] = a5\n 13183: u64 [s1 + 0xa8] = a3\n 13187: u64 [s1 + 0xa0] = a4\n 13191: u64 [s1 + 0xb0] = a5\n 13195: ra = 478, jump @19\n      : @502 [@dyn 239] (gas: 23)\n 13201: a1 = s1 + 0x1038\n 13205: a0 = u64 [s1 + 0x18]\n 13208: u64 [a1] = a0\n 13210: a0 = u64 [s1 + 0x28]\n 13213: a2 = a1 + 0xffffffffffffff00\n 13217: u64 [a2 + 0xf8] = a0\n 13221: a0 = u64 [s1 + 0x20]\n 13224: u64 [a2 + 0xf0] = a0\n 13228: a0 = u64 [s1 + 0x30]\n 13231: u64 [a2 + 0xe8] = a0\n 13235: a0 = u64 [s1 + 0xb0]\n 13239: u64 [a1 + 0x20] = a0\n 13242: a0 = u64 [s1 + 0xa0]\n 13246: u64 [a1 + 0x18] = a0\n 13249: a0 = u64 [s1 + 0xa8]\n 13253: u64 [a1 + 0x10] = a0\n 13256: a4 = a1\n 13258: a0 = s1 + 0x1060\n 13262: a1 = s1 + 0x1040\n 13266: a2 = s1 + 0x1020\n 13270: a3 = u64 [s1 + 0xb8]\n 13274: u64 [a4 + 0x8] = a3\n 13277: ra = 480, jump @995\n      : @503 [@dyn 240] (gas: 12)\n 13283: a3 = u64 [s1 + 0xa0]\n 13287: a4 = u64 [s1 + 0xa8]\n 13291: t0 = u64 [s1 + 0xb8]\n 13295: a0 = t0 | a3\n 13298: a1 = u64 [s1 + 0xb0]\n 13302: a1 = a1 | a4\n 13305: a0 = a0 | a1\n 13308: a0 = a0 >> 0x20\n 13311: a1 = a1 | a3\n 13314: a1 = a1 << 0x20\n 13317: a0 = a0 | a1\n 13320: jump @505 if a0 == 0\n      : @504 (gas: 1)\n 13323: jump @654\n      : @505 (gas: 8)\n 13326: a1 = s1 + 0x1038\n 13330: a0 = u64 [a1 + 0x30]\n 13333: a2 = u64 [a1 + 0x40]\n 13336: u64 [s1 + 0x98] = a2\n 13340: a2 = a3\n 13342: t1 = u64 [a1 + 0x28]\n 13345: a3 = u64 [a1 + 0x38]\n 13348: fallthrough\n      : @506 (gas: 24)\n 13349: t2 = a0 ^ a4\n 13352: a5 = a0 <u a4\n 13355: ra = t1 <u t0\n 13358: a5 = ra if t2 == 0\n 13361: a1 = a3 - a2\n 13364: t2 = a1 - a5\n 13367: a1 = a1 <u a5\n 13370: a3 = a3 <u a2\n 13373: a2 = u64 [s1 + 0x98]\n 13377: a3 = a2 - a3\n 13380: a2 = u64 [s1 + 0xb0]\n 13384: a3 = a3 - a2\n 13387: a3 = a3 - a1\n 13390: a0 = a0 - a4\n 13393: a0 = a0 - ra\n 13396: a1 = t1 - t0\n 13399: a0 = a0 | a3\n 13402: a2 = a1 | t2\n 13405: a2 = a2 | a0\n 13408: a0 = a0 | t2\n 13411: a2 = a2 >> 0x20\n 13414: a0 = a0 << 0x20\n 13417: a0 = a0 | a2\n 13420: jump @508 if a0 == 0\n      : @507 (gas: 1)\n 13423: jump @654\n      : @508 (gas: 3)\n 13426: a0 = t0\n 13428: u64 [s1 + 0xb8] = a1\n 13432: ra = 482, jump @33\n      : @509 [@dyn 241] (gas: 6)\n 13438: i32 a1 = a0 + 0\n 13440: a2 = i32 [s1 + 0xb8]\n 13444: a0 = 0\n 13446: ra = 0x2da\n 13450: ecalli 7 // 'seal_return'\n 13452: jump @781\n      : @510 (gas: 8)\n 13455: u64 [a2 + 1856] = 0\n 13459: u64 [a2 + 1848] = 0\n 13463: u64 [a2 + 1840] = 0\n 13467: u64 [a2 + 1832] = 0\n 13471: a0 = s1 + 0x1000\n 13475: i32 a0 = a0 + 0x760\n 13479: ecalli 10 // 'value_transferred'\n 13481: fallthrough\n      : @511 (gas: 10)\n 13482: a3 = s1 + 0x1038\n 13486: a4 = a3 + 0x700\n 13490: a0 = u64 [a4 + 0x38]\n 13493: a1 = u64 [a4 + 0x40]\n 13496: a2 = u64 [a4 + 0x30]\n 13499: a3 = u64 [a4 + 0x28]\n 13502: a1 = a1 | a2\n 13505: a0 = a0 | a3\n 13508: a0 = a0 | a1\n 13511: jump @513 if a0 == 0\n      : @512 (gas: 1)\n 13514: jump @725\n      : @513 (gas: 3)\n 13517: a0 = u64 [s1 + 0xb8]\n 13521: a0 = i32 [a0]\n 13523: jump @515 if a0 >u 3\n      : @514 (gas: 1)\n 13527: jump @726\n      : @515 (gas: 1)\n 13530: ra = 484, jump @1131\n      : @516 [@dyn 242] (gas: 9)\n 13536: a0 = s1 + 0x1038\n 13540: u64 [a0 + 1888] = 0\n 13544: u64 [a0 + 1880] = 0\n 13548: u64 [a0 + 1872] = 0\n 13552: u64 [a0 + 1864] = 0x5\n 13557: a0 = s1 + 0x7ff\n 13561: a0 = a0 + 0x121\n 13565: a1 = s1 + 0x1780\n 13569: ra = 486, jump @21\n      : @517 [@dyn 243] (gas: 5)\n 13575: a3 = s1 + 0x7ff\n 13579: a3 = a3 + 0x39\n 13582: a0 = u64 [a3 + 0xe8]\n 13586: a1 = a0 & 0xff\n 13590: jump @519 if a1 != 0\n      : @518 (gas: 1)\n 13593: jump @727\n      : @519 (gas: 17)\n 13596: a1 = u64 [a3 + 0x100]\n 13600: a2 = u64 [a3 + 0xf8]\n 13604: a3 = u64 [a3 + 0xf0]\n 13608: a0 = a0 & 0xffffffffffffff00\n 13612: a4 = s1 + 0x1038\n 13616: u64 [a4 + 1920] = 0\n 13620: u64 [a4 + 1912] = 0\n 13624: u64 [a4 + 1904] = 0\n 13628: u64 [a4 + 1896] = 0x5\n 13633: a5 = a4 + 0x700\n 13637: u64 [a5 + 0x90] = a3\n 13641: u64 [a5 + 0x88] = a0\n 13645: u64 [a5 + 0x98] = a2\n 13649: u64 [a5 + 0xa0] = a1\n 13653: a0 = s1 + 0x17a0\n 13657: a1 = s1 + 0x17c0\n 13661: ra = 488, jump @24\n      : @520 [@dyn 244] (gas: 4)\n 13667: a0 = s1 + 0x7ff\n 13671: a0 = a0 + 0x101\n 13675: a1 = 0x40\n 13678: ra = 490, jump @17\n      : @521 [@dyn 245] (gas: 17)\n 13684: a0 = s1 + 0x7ff\n 13688: a0 = a0 + 0x39\n 13691: a1 = u64 [a0 + 0xe0]\n 13695: u64 [s1 + 0xb0] = a1\n 13699: a1 = u64 [a0 + 0xd8]\n 13703: u64 [s1 + 0xa8] = a1\n 13707: a1 = u64 [a0 + 0xd0]\n 13711: u64 [s1 + 0xa0] = a1\n 13715: a0 = u64 [a0 + 0xc8]\n 13719: u64 [s1 + 0xb8] = a0\n 13723: a0 = 0x30280\n 13728: u64 [s1 + 0x98] = a0\n 13732: i32 a0 = a0 + 0\n 13734: ra = 0x1ec\n 13738: ecalli 3 // 'caller'\n 13740: t0 = 0x1ee\n 13744: jump @1387\n      : @522 [@dyn 246] (gas: 1)\n 13747: t0 = 494, jump @1387\n      : @523 [@dyn 247] (gas: 1)\n 13753: jump @654 if a0 != 0\n      : @524 (gas: 2)\n 13757: a2 = u64 [s1 + 0x98]\n 13761: t0 = 496, jump @1321\n      : @525 [@dyn 248] (gas: 8)\n 13767: u64 [a2 + 192] = 0\n 13771: u64 [a2 + 0xb8] = a1\n 13775: u64 [a2 + 0xb0] = a0\n 13779: a1 = s1 + 0x7ff\n 13783: a1 = a1 + 0xe1\n 13787: u64 [a2 + 0xa8] = a3\n 13791: a0 = a4\n 13793: ra = 498, jump @19\n      : @526 [@dyn 249] (gas: 16)\n 13799: a0 = u64 [0x200c8]\n 13804: a1 = u64 [0x200d0]\n 13809: a2 = s1 + 0x7ff\n 13813: a2 = a2 + 0x39\n 13816: u64 [a2 + 0xa0] = a0\n 13820: a0 = u64 [0x200d8]\n 13825: u64 [a2 + 0x98] = a1\n 13829: a3 = u64 [0x200e0]\n 13834: u64 [a2 + 0x90] = a0\n 13838: a0 = a2\n 13840: a1 = 0x20\n 13843: a2 = s1 + 0x7ff\n 13847: a2 = a2 + 0xc1\n 13851: u64 [a0 + 0x88] = a3\n 13855: a0 = u64 [s1 + 0xb8]\n 13859: ra = 500, jump @25\n      : @527 [@dyn 250] (gas: 6)\n 13865: a1 = 0x20280\n 13870: i32 a1 = a1 + 0\n 13872: a0 = 0\n 13874: a2 = 0\n 13876: ecalli 7 // 'seal_return'\n 13878: jump @825\n      : @528 (gas: 8)\n 13881: u64 [a2 + 1504] = 0\n 13885: u64 [a2 + 1496] = 0\n 13889: u64 [a2 + 1488] = 0\n 13893: u64 [a2 + 1480] = 0\n 13897: a0 = s1 + 0x1000\n 13901: i32 a0 = a0 + 0x600\n 13905: ecalli 10 // 'value_transferred'\n 13907: fallthrough\n      : @529 (gas: 10)\n 13908: a4 = s1 + 0x1038\n 13912: a5 = a4 + 0x500\n 13916: a0 = u64 [a5 + 0xd8]\n 13920: a1 = u64 [a5 + 0xe0]\n 13924: a2 = u64 [a5 + 0xd0]\n 13928: a3 = u64 [a5 + 0xc8]\n 13932: a1 = a1 | a2\n 13935: a0 = a0 | a3\n 13938: a0 = a0 | a1\n 13941: jump @531 if a0 == 0\n      : @530 (gas: 1)\n 13944: jump @732\n      : @531 (gas: 3)\n 13947: a0 = u64 [s1 + 0xb8]\n 13951: a0 = i32 [a0]\n 13953: jump @533 if a0 >u 3\n      : @532 (gas: 1)\n 13957: jump @733\n      : @533 (gas: 7)\n 13960: u64 [a4 + 1536] = 0\n 13964: u64 [a4 + 1528] = 0\n 13968: u64 [a4 + 1520] = 0\n 13972: u64 [a4 + 1512] = 0x2\n 13977: a0 = s1 + 0x500\n 13981: a1 = s1 + 0x1620\n 13985: ra = 502, jump @21\n      : @534 [@dyn 251] (gas: 12)\n 13991: a1 = s1 + 0x500\n 13995: a0 = u64 [a1 + 0x18]\n 13998: u64 [s1 + 0xb8] = a0\n 14002: a0 = u64 [a1 + 0x10]\n 14005: u64 [s1 + 0xb0] = a0\n 14009: a0 = u64 [a1 + 0x8]\n 14012: u64 [s1 + 0xa8] = a0\n 14016: a0 = u64 [a1]\n 14018: u64 [s1 + 0xa0] = a0\n 14022: a0 = s1 + 0x4e0\n 14026: a1 = 0x40\n 14029: ra = 504, jump @17\n      : @535 [@dyn 252] (gas: 6)\n 14035: a4 = s1 + 0x400\n 14039: a0 = u64 [a4 + 0xf8]\n 14043: a1 = u64 [a4 + 0xf0]\n 14047: a2 = u64 [a4 + 0xe8]\n 14051: a3 = u64 [a4 + 0xe0]\n 14055: t0 = 506, jump @1384\n      : @536 [@dyn 253] (gas: 1)\n 14061: jump @654 if a0 != 0\n      : @537 (gas: 14)\n 14065: a0 = u64 [s1 + 0xa0]\n 14069: a2 = s1 + 0x400\n 14073: u64 [a2 + 0xc0] = a0\n 14077: a0 = u64 [s1 + 0xa8]\n 14081: u64 [a2 + 0xc8] = a0\n 14085: a0 = u64 [s1 + 0xb0]\n 14089: u64 [a2 + 0xd0] = a0\n 14093: a1 = s1 + 0x4c0\n 14097: a0 = u64 [s1 + 0xb8]\n 14101: u64 [a2 + 0xd8] = a0\n 14105: a0 = a3\n 14107: u64 [s1 + 0xb8] = a3\n 14111: ra = 0x2d6\n 14115: jump @19\n      : @538 (gas: 2)\n 14118: a2 = s1 + 0x1838\n 14122: jump @540 if a0 == 1889567281\n      : @539 (gas: 1)\n 14129: jump @734\n      : @540 (gas: 8)\n 14132: u64 [a2 + 224] = 0\n 14136: u64 [a2 + 216] = 0\n 14140: u64 [a2 + 208] = 0\n 14144: u64 [a2 + 200] = 0\n 14148: a0 = s1 + 0x2000\n 14152: i32 a0 = a0 + 0xfffffffffffff900\n 14156: ecalli 10 // 'value_transferred'\n 14158: fallthrough\n      : @541 (gas: 9)\n 14159: a3 = s1 + 0x1838\n 14163: a0 = u64 [a3 + 0xd8]\n 14167: a1 = u64 [a3 + 0xe0]\n 14171: a2 = u64 [a3 + 0xd0]\n 14175: a3 = u64 [a3 + 0xc8]\n 14179: a1 = a1 | a2\n 14182: a0 = a0 | a3\n 14185: a0 = a0 | a1\n 14188: jump @543 if a0 == 0\n      : @542 (gas: 1)\n 14191: jump @740\n      : @543 (gas: 4)\n 14194: a0 = u64 [s1 + 0xb8]\n 14198: a0 = i32 [a0]\n 14200: a1 = 0x23\n 14203: jump @545 if a1 <u a0\n      : @544 (gas: 1)\n 14206: jump @741\n      : @545 (gas: 5)\n 14209: a0 = s1 + 0x7ff\n 14213: a0 = a0 + 0x541\n 14217: ra = 0x1fc\n 14221: t0 = 0x3f2\n 14225: jump @1397\n      : @546 [@dyn 254] (gas: 14)\n 14228: a3 = s1 + 0x7ff\n 14232: a3 = a3 + 0x39\n 14235: a0 = u64 [a3 + 0x508]\n 14239: a1 = u64 [a3 + 0x510]\n 14243: a2 = u32 [a3 + 0x518]\n 14247: u64 [a3 + 1280] = 0\n 14251: a4 = a3 + 0x400\n 14255: u64 [a4 + 0xf8] = a2\n 14259: u64 [a4 + 0xf0] = a1\n 14263: a1 = s1 + 0x7ff\n 14267: a1 = a1 + 0x521\n 14271: u64 [a4 + 0xe8] = a0\n 14275: a0 = 0\n 14277: ra = 510, jump @19\n      : @547 [@dyn 255] (gas: 11)\n 14283: a0 = s1 + 0x7ff\n 14287: a0 = a0 + 0x39\n 14290: u64 [a0 + 1248] = 0\n 14294: u64 [a0 + 1240] = 0\n 14298: u64 [a0 + 1232] = 0\n 14302: a2 = a0\n 14304: a0 = 0x20\n 14307: a1 = s1 + 0x7ff\n 14311: a1 = a1 + 0x501\n 14315: u64 [a2 + 1224] = 0\n 14319: ra = 512, jump @19\n      : @548 [@dyn 256] (gas: 2)\n 14325: a1 = i32 [0x2026c]\n 14330: jump @550 if a1 >u 63\n      : @549 (gas: 2)\n 14334: u32 [0x2026c] = 0x40\n 14340: fallthrough\n      : @550 (gas: 11)\n 14341: a0 = sp + 0xffffffffffffffe0\n 14344: a2 = a0 & 0xffffffffffffffe0\n 14347: u64 [s1 + 0xb8] = a2\n 14351: sp = a2\n 14353: a0 = 0x20280\n 14358: i32 a0 = a0 + 0\n 14360: i32 a2 = a2 + 0\n 14362: a1 = 0x40\n 14365: ra = 0x202\n 14369: ecalli 6 // 'hash_keccak_256'\n 14371: fallthrough\n      : @551 [@dyn 257] (gas: 6)\n 14372: a3 = u64 [s1 + 0xb8]\n 14376: a0 = u64 [a3 + 0x18]\n 14379: a1 = u64 [a3 + 0x10]\n 14382: a2 = u64 [a3 + 0x8]\n 14385: a3 = u64 [a3]\n 14387: t0 = 516, jump @1351\n      : @552 [@dyn 258] (gas: 9)\n 14393: a4 = s1 + 0x1838\n 14397: u64 [a4 + 0x100] = a3\n 14401: u64 [a4 + 0xf8] = a2\n 14405: u64 [a4 + 0xf0] = a1\n 14409: u64 [a4 + 0xe8] = a0\n 14413: a0 = s1 + 0x7ff\n 14417: a0 = a0 + 0x4e1\n 14421: a1 = s1 + 0x1920\n 14425: ra = 518, jump @21\n      : @553 [@dyn 259] (gas: 15)\n 14431: a1 = s1 + 0x7ff\n 14435: a1 = a1 + 0x39\n 14438: a2 = a1 + 0x400\n 14442: a0 = u64 [a2 + 0xc0]\n 14446: u64 [s1 + 0xb8] = a0\n 14450: a0 = u64 [a2 + 0xb8]\n 14454: u64 [s1 + 0xb0] = a0\n 14458: a0 = u64 [a2 + 0xb0]\n 14462: u64 [s1 + 0xa8] = a0\n 14466: a0 = u64 [a2 + 0xa8]\n 14470: u64 [s1 + 0xa0] = a0\n 14474: a0 = s1 + 0x7ff\n 14478: a0 = a0 + 0x4c1\n 14482: a1 = 0x40\n 14485: ra = 520, jump @17\n      : @554 [@dyn 260] (gas: 4)\n 14491: a3 = s1 + 0x7ff\n 14495: a3 = a3 + 0x39\n 14498: a5 = a3 + 0x400\n 14502: t0 = 522, jump @1386\n      : @555 [@dyn 261] (gas: 1)\n 14508: jump @654 if a0 != 0\n      : @556 (gas: 15)\n 14512: a0 = u64 [s1 + 0xa0]\n 14516: a2 = a3 + 0x400\n 14520: u64 [a2 + 0x68] = a0\n 14523: a0 = u64 [s1 + 0xa8]\n 14527: u64 [a2 + 0x70] = a0\n 14530: a0 = u64 [s1 + 0xb0]\n 14534: u64 [a2 + 0x78] = a0\n 14537: a1 = s1 + 0x7ff\n 14541: a1 = a1 + 0x4a1\n 14545: a0 = u64 [s1 + 0xb8]\n 14549: u64 [a2 + 0x80] = a0\n 14553: a0 = a4\n 14555: u64 [s1 + 0xb8] = a4\n 14559: ra = 0x2d6\n 14563: jump @19\n      : @557 (gas: 11)\n 14566: a0 = s1 + 0x1838\n 14570: u64 [a0 + 352] = 0\n 14574: u64 [a0 + 344] = 0\n 14578: u64 [a0 + 336] = 0\n 14582: u64 [a0 + 328] = 0\n 14586: a0 = s1 + 0x2000\n 14590: i32 a0 = a0 + 0xfffffffffffff980\n 14594: ra = 0x20c\n 14598: ecalli 10 // 'value_transferred'\n 14600: t0 = 0x20e\n 14604: jump @1376\n      : @558 [@dyn 262] (gas: 1)\n 14607: t0 = 526, jump @1376\n      : @559 [@dyn 263] (gas: 1)\n 14613: t0 = 528, jump @1374\n      : @560 [@dyn 264] (gas: 1)\n 14619: jump @562 if a0 == 0\n      : @561 (gas: 1)\n 14622: jump @742\n      : @562 (gas: 3)\n 14625: a0 = u64 [s1 + 0xb8]\n 14629: a0 = i32 [a0]\n 14631: jump @564 if a0 >u 3\n      : @563 (gas: 1)\n 14635: jump @743\n      : @564 (gas: 1)\n 14638: ra = 530, jump @1131\n      : @565 [@dyn 265] (gas: 1)\n 14644: ra = 532, jump @1312\n      : @566 [@dyn 266] (gas: 9)\n 14650: a1 = s1 + 0x1838\n 14654: u64 [a1 + 384] = 0\n 14658: u64 [a1 + 376] = 0\n 14662: u64 [a1 + 368] = 0\n 14666: u64 [a1 + 360] = 0x5\n 14671: a0 = s1 + 0x7ff\n 14675: a0 = a0 + 0x681\n 14679: a1 = s1 + 0x19a0\n 14683: ra = 534, jump @21\n      : @567 [@dyn 267] (gas: 22)\n 14689: a3 = s1 + 0x7ff\n 14693: a3 = a3 + 0x39\n 14696: a4 = a3 + 0x600\n 14700: a0 = u64 [a4 + 0x48]\n 14703: a1 = u64 [a4 + 0x50]\n 14706: a2 = u64 [a4 + 0x58]\n 14709: a3 = u64 [a4 + 0x60]\n 14712: a0 = a0 & 0xffffffffffffff00\n 14716: a0 = a0 | 0x1\n 14719: a4 = s1 + 0x1838\n 14723: u64 [a4 + 416] = 0\n 14727: u64 [a4 + 408] = 0\n 14731: u64 [a4 + 400] = 0\n 14735: u64 [a4 + 392] = 0x5\n 14740: a5 = a4 + 0x100\n 14744: u64 [a5 + 0xc0] = a3\n 14748: u64 [a5 + 0xb8] = a2\n 14752: u64 [a5 + 0xb0] = a1\n 14756: u64 [a5 + 0xa8] = a0\n 14760: a0 = s1 + 0x19c0\n 14764: a1 = s1 + 0x19e0\n 14768: ra = 536, jump @24\n      : @568 [@dyn 268] (gas: 4)\n 14774: a0 = s1 + 0x7ff\n 14778: a0 = a0 + 0x661\n 14782: a1 = 0x40\n 14785: ra = 538, jump @17\n      : @569 [@dyn 269] (gas: 18)\n 14791: a0 = s1 + 0x7ff\n 14795: a0 = a0 + 0x39\n 14798: a2 = a0 + 0x600\n 14802: a1 = u64 [a2 + 0x40]\n 14805: u64 [s1 + 0xb0] = a1\n 14809: a1 = u64 [a2 + 0x38]\n 14812: u64 [s1 + 0xa8] = a1\n 14816: a1 = u64 [a2 + 0x30]\n 14819: u64 [s1 + 0xa0] = a1\n 14823: a0 = u64 [a2 + 0x28]\n 14826: u64 [s1 + 0xb8] = a0\n 14830: a0 = 0x30280\n 14835: u64 [s1 + 0x98] = a0\n 14839: i32 a0 = a0 + 0\n 14841: ra = 0x21c\n 14845: ecalli 3 // 'caller'\n 14847: t0 = 0x21e\n 14851: jump @1387\n      : @570 [@dyn 270] (gas: 1)\n 14854: t0 = 542, jump @1387\n      : @571 [@dyn 271] (gas: 1)\n 14860: jump @654 if a0 != 0\n      : @572 (gas: 2)\n 14864: a2 = u64 [s1 + 0x98]\n 14868: t0 = 544, jump @1321\n      : @573 [@dyn 272] (gas: 9)\n 14874: u64 [a2 + 1568] = 0\n 14878: a5 = a2 + 0x600\n 14882: u64 [a5 + 0x18] = a1\n 14885: u64 [a5 + 0x10] = a0\n 14888: a1 = s1 + 0x7ff\n 14892: a1 = a1 + 0x641\n 14896: u64 [a5 + 0x8] = a3\n 14899: a0 = a4\n 14901: ra = 546, jump @19\n      : @574 [@dyn 273] (gas: 16)\n 14907: a0 = u64 [0x20088]\n 14912: a1 = u64 [0x20090]\n 14917: a2 = s1 + 0x7ff\n 14921: a2 = a2 + 0x39\n 14924: u64 [a2 + 0x600] = a0\n 14928: a0 = u64 [0x20098]\n 14933: u64 [a2 + 0x5f8] = a1\n 14937: a3 = u64 [0x200a0]\n 14942: u64 [a2 + 0x5f0] = a0\n 14946: a0 = a2\n 14948: a1 = 0x20\n 14951: a2 = s1 + 0x7ff\n 14955: a2 = a2 + 0x621\n 14959: u64 [a0 + 0x5e8] = a3\n 14963: a0 = u64 [s1 + 0xb8]\n 14967: ra = 548, jump @25\n      : @575 [@dyn 274] (gas: 6)\n 14973: a1 = 0x20280\n 14978: i32 a1 = a1 + 0\n 14980: a0 = 0\n 14982: a2 = 0\n 14984: ecalli 7 // 'seal_return'\n 14986: jump @825\n      : @576 (gas: 5)\n 14989: i32 a1 = a1 + 0\n 14991: a0 = 0\n 14993: a2 = 0\n 14995: ecalli 7 // 'seal_return'\n 14997: jump @825\n      : @577 (gas: 10)\n 15000: u64 [a2 + 1632] = 0\n 15004: u64 [a2 + 1624] = 0\n 15008: u64 [a2 + 1616] = 0\n 15012: u64 [a2 + 1608] = 0\n 15016: a0 = s1 + 0x1000\n 15020: i32 a0 = a0 + 0x680\n 15024: ra = 0x226\n 15028: ecalli 10 // 'value_transferred'\n 15030: t0 = 0x228\n 15034: jump @1354\n      : @578 [@dyn 275] (gas: 1)\n 15037: t0 = 552, jump @1354\n      : @579 [@dyn 276] (gas: 1)\n 15043: t0 = 554, jump @1374\n      : @580 [@dyn 277] (gas: 1)\n 15049: jump @582 if a0 == 0\n      : @581 (gas: 1)\n 15052: jump @744\n      : @582 (gas: 3)\n 15055: a0 = u64 [s1 + 0xb8]\n 15059: a0 = i32 [a0]\n 15061: jump @584 if a0 >u 35\n      : @583 (gas: 1)\n 15065: jump @745\n      : @584 (gas: 7)\n 15068: a0 = s1 + 0x1000\n 15072: i32 a0 = a0 + 0x6a0\n 15076: a1 = 0x4\n 15079: ra = 0x22c\n 15083: ecalli 1 // 'call_data_load'\n 15085: t0 = 0x22e\n 15089: jump @1354\n      : @585 [@dyn 278] (gas: 1)\n 15092: t0 = 558, jump @1354\n      : @586 [@dyn 279] (gas: 11)\n 15098: a2 = u64 [a4 + 0x68]\n 15101: a0 = u64 [a4 + 0x70]\n 15104: a1 = u64 [a4 + 0x78]\n 15107: a3 = u64 [a4 + 0x80]\n 15111: u64 [s1 + 0x6b8] = a3\n 15115: u64 [s1 + 0x6b0] = a1\n 15119: u64 [s1 + 0x6a8] = a0\n 15123: a0 = s1 + 0x6c0\n 15127: a1 = s1 + 0x6a0\n 15131: u64 [s1 + 0x6a0] = a2\n 15135: ra = 560, jump @1024\n      : @587 [@dyn 280] (gas: 11)\n 15141: a0 = u64 [s1 + 0x6d8]\n 15145: u64 [s1 + 0xb8] = a0\n 15149: a0 = u64 [s1 + 0x6d0]\n 15153: u64 [s1 + 0xb0] = a0\n 15157: a0 = u64 [s1 + 0x6c8]\n 15161: u64 [s1 + 0xa8] = a0\n 15165: a0 = u64 [s1 + 0x6c0]\n 15169: u64 [s1 + 0xa0] = a0\n 15173: a0 = s1 + 0x680\n 15177: a1 = 0x40\n 15180: ra = 562, jump @17\n      : @588 [@dyn 281] (gas: 6)\n 15186: a4 = s1 + 0x600\n 15190: a0 = u64 [a4 + 0x98]\n 15194: a1 = u64 [a4 + 0x90]\n 15198: a2 = u64 [a4 + 0x88]\n 15202: a3 = u64 [a4 + 0x80]\n 15206: t0 = 564, jump @1384\n      : @589 [@dyn 282] (gas: 1)\n 15212: jump @654 if a0 != 0\n      : @590 (gas: 14)\n 15216: a0 = u64 [s1 + 0xa0]\n 15220: a2 = s1 + 0x600\n 15224: u64 [a2 + 0x60] = a0\n 15227: a0 = u64 [s1 + 0xa8]\n 15231: u64 [a2 + 0x68] = a0\n 15234: a0 = u64 [s1 + 0xb0]\n 15238: u64 [a2 + 0x70] = a0\n 15241: a1 = s1 + 0x660\n 15245: a0 = u64 [s1 + 0xb8]\n 15249: u64 [a2 + 0x78] = a0\n 15252: a0 = a3\n 15254: u64 [s1 + 0xb8] = a3\n 15258: ra = 0x2d6\n 15262: jump @19\n      : @591 (gas: 11)\n 15265: a0 = s1 + 0x1838\n 15269: u64 [a0 + 640] = 0\n 15273: u64 [a0 + 632] = 0\n 15277: u64 [a0 + 624] = 0\n 15281: u64 [a0 + 616] = 0\n 15285: a0 = s1 + 0x2000\n 15289: i32 a0 = a0 + 0xfffffffffffffaa0\n 15293: ra = 0x236\n 15297: ecalli 10 // 'value_transferred'\n 15299: t0 = 0x238\n 15303: jump @1361\n      : @592 [@dyn 283] (gas: 1)\n 15306: t0 = 568, jump @1361\n      : @593 [@dyn 284] (gas: 8)\n 15312: a0 = u64 [a4 + 0x78]\n 15315: a1 = u64 [a4 + 0x80]\n 15319: a2 = u64 [a4 + 0x70]\n 15322: a3 = u64 [a4 + 0x68]\n 15325: a1 = a1 | a2\n 15328: a0 = a0 | a3\n 15331: a0 = a0 | a1\n 15334: jump @595 if a0 == 0\n      : @594 (gas: 1)\n 15337: jump @746\n      : @595 (gas: 4)\n 15340: a0 = u64 [s1 + 0xb8]\n 15344: a0 = i32 [a0]\n 15346: a1 = 0x43\n 15349: jump @597 if a1 <u a0\n      : @596 (gas: 1)\n 15352: jump @747\n      : @597 (gas: 4)\n 15355: a0 = s1 + 0x1260\n 15359: ra = 0x23a\n 15363: t0 = 0x3f2\n 15367: jump @1397\n      : @598 [@dyn 285] (gas: 31)\n 15370: a1 = s1 + 0x1038\n 15374: a2 = a1 + 0x200\n 15378: a0 = u64 [a2 + 0x28]\n 15381: u64 [s1 + 0xb8] = a0\n 15385: a0 = u64 [a2 + 0x30]\n 15388: u64 [s1 + 0xb0] = a0\n 15392: a0 = u64 [a2 + 0x38]\n 15395: u64 [s1 + 0xa8] = a0\n 15399: a0 = u64 [a2 + 0x40]\n 15402: u64 [s1 + 0xa0] = a0\n 15406: a0 = s1 + 0x2000\n 15410: i32 a0 = a0 + 0xfffffffffffffac0\n 15414: a1 = 0x24\n 15417: ecalli 1 // 'call_data_load'\n 15419: a0 = s1 + 0x1838\n 15423: a2 = a0 + 0x200\n 15427: a1 = u64 [a2 + 0x88]\n 15431: u64 [s1 + 0x98] = a1\n 15435: a1 = u64 [a2 + 0x90]\n 15439: u64 [s1 + 0x90] = a1\n 15443: a1 = u64 [a2 + 0x98]\n 15447: u64 [s1 + 0x88] = a1\n 15451: a0 = u64 [a2 + 0xa0]\n 15455: u64 [s1 + 0x80] = a0\n 15459: a0 = 0x30280\n 15464: u64 [s1 + 0x78] = a0\n 15467: i32 a0 = a0 + 0\n 15469: ra = 0x23c\n 15473: ecalli 3 // 'caller'\n 15475: t0 = 0x23e\n 15479: jump @1353\n      : @599 [@dyn 286] (gas: 1)\n 15482: t0 = 574, jump @1353\n      : @600 [@dyn 287] (gas: 27)\n 15488: a3 = s1 + 0x1038\n 15492: a4 = u64 [s1 + 0x80]\n 15496: a5 = a3 + 0x100\n 15500: u64 [a5 + 0xe0] = a4\n 15504: a4 = u64 [s1 + 0x88]\n 15508: u64 [a5 + 0xd8] = a4\n 15512: a4 = u64 [s1 + 0x90]\n 15516: u64 [a5 + 0xd0] = a4\n 15520: a4 = u64 [s1 + 0x98]\n 15524: u64 [a5 + 0xc8] = a4\n 15528: a4 = u64 [s1 + 0xa0]\n 15532: u64 [a3 + 0x200] = a4\n 15536: a4 = u64 [s1 + 0xa8]\n 15540: u64 [a5 + 0xf8] = a4\n 15544: a4 = u64 [s1 + 0xb0]\n 15548: u64 [a5 + 0xf0] = a4\n 15552: a4 = u64 [s1 + 0xb8]\n 15556: u64 [a5 + 0xe8] = a4\n 15560: a4 = a3 + 0x200\n 15564: u64 [a4 + 0x18] = a2\n 15567: u64 [a4 + 0x10] = a0\n 15570: u64 [a4 + 0x8] = a1\n 15573: a0 = s1 + 0x1240\n 15577: a1 = s1 + 0x1220\n 15581: a2 = s1 + 0x1200\n 15585: u64 [a3 + 544] = 0\n 15589: ra = 576, jump @1079\n      : @601 [@dyn 288] (gas: 3)\n 15595: a0 = s1 + 0x11e0\n 15599: a1 = 0x40\n 15602: ra = 578, jump @17\n      : @602 [@dyn 289] (gas: 7)\n 15608: a3 = s1 + 0x1038\n 15612: a5 = a3 + 0x100\n 15616: a4 = u64 [a5 + 0xc0]\n 15620: a1 = u64 [a5 + 0xb8]\n 15624: a2 = u64 [a5 + 0xb0]\n 15628: a0 = u64 [a5 + 0xa8]\n 15632: t0 = 580, jump @1341\n      : @603 [@dyn 290] (gas: 1)\n 15638: jump @654 if a1 != 0\n      : @604 (gas: 8)\n 15642: u64 [a3 + 416] = 0\n 15646: u64 [a3 + 408] = 0\n 15650: u64 [a3 + 392] = 0x1\n 15655: a1 = s1 + 0x11c0\n 15659: u64 [a3 + 400] = 0\n 15663: u64 [s1 + 0xb8] = a0\n 15667: ra = 0x2d6\n 15671: jump @19\n      : @605 (gas: 10)\n 15674: u64 [a2 + 1568] = 0\n 15678: u64 [a2 + 1560] = 0\n 15682: u64 [a2 + 1552] = 0\n 15686: u64 [a2 + 1544] = 0\n 15690: a0 = s1 + 0x1000\n 15694: i32 a0 = a0 + 0x640\n 15698: ra = 0x246\n 15702: ecalli 10 // 'value_transferred'\n 15704: t0 = 0x248\n 15708: jump @1354\n      : @606 [@dyn 291] (gas: 1)\n 15711: t0 = 584, jump @1354\n      : @607 [@dyn 292] (gas: 1)\n 15717: t0 = 586, jump @1362\n      : @608 [@dyn 293] (gas: 1)\n 15723: jump @748 if a0 != 0\n      : @609 (gas: 4)\n 15727: a0 = u64 [s1 + 0xb8]\n 15731: a0 = i32 [a0]\n 15733: a1 = 0x63\n 15736: jump @749 if a1 >=u a0\n      : @610 (gas: 4)\n 15740: a0 = s1 + 0x640\n 15744: ra = 0x24c\n 15748: t0 = 0x3f2\n 15752: jump @1397\n      : @611 [@dyn 294] (gas: 12)\n 15755: a0 = u64 [s1 + 0x640]\n 15759: u64 [s1 + 0xb8] = a0\n 15763: a0 = u64 [s1 + 0x648]\n 15767: u64 [s1 + 0xb0] = a0\n 15771: a0 = u64 [s1 + 0x650]\n 15775: u64 [s1 + 0xa8] = a0\n 15779: a0 = u64 [s1 + 0x658]\n 15783: u64 [s1 + 0xa0] = a0\n 15787: a0 = s1 + 0x620\n 15791: ra = 0x24e\n 15795: t0 = 0x3fc\n 15799: jump @1397\n      : @612 [@dyn 295] (gas: 65)\n 15802: a0 = u64 [s1 + 0x620]\n 15806: u64 [s1 + 0x78] = a0\n 15809: a0 = u64 [s1 + 0x628]\n 15813: u64 [s1 + 0x70] = a0\n 15816: a0 = u64 [s1 + 0x630]\n 15820: u64 [s1 + 0x68] = a0\n 15823: a0 = u64 [s1 + 0x638]\n 15827: u64 [s1 + 0x60] = a0\n 15830: a0 = s1 + 0x1000\n 15834: i32 a0 = a0 + 0x660\n 15838: a1 = 0x44\n 15841: ecalli 1 // 'call_data_load'\n 15843: a0 = s1 + 0x1038\n 15847: a2 = a0 + 0x600\n 15851: a1 = u64 [a2 + 0x28]\n 15854: u64 [s1 + 0x98] = a1\n 15858: a1 = u64 [a2 + 0x30]\n 15861: u64 [s1 + 0x90] = a1\n 15865: a1 = u64 [a2 + 0x38]\n 15868: u64 [s1 + 0x88] = a1\n 15872: a0 = u64 [a2 + 0x40]\n 15875: u64 [s1 + 0x80] = a0\n 15879: a0 = 0x30280\n 15884: u64 [s1 + 0x58] = a0\n 15887: i32 a0 = a0 + 0\n 15889: ecalli 3 // 'caller'\n 15891: a2 = u64 [s1 + 0x58]\n 15894: a0 = u64 [a2 + 0x8]\n 15897: a1 = i32 [a2 + 0x10]\n 15900: a2 = u64 [a2]\n 15902: a0 = reverse a0\n 15904: a3 = a0 << 0x20\n 15907: a1 = reverse a1\n 15909: a1 = a1 >> 0x20\n 15912: a3 = a3 | a1\n 15915: a0 = a0 >> 0x20\n 15918: a1 = reverse a2\n 15920: a2 = a1 << 0x20\n 15923: a0 = a0 | a2\n 15926: a1 = a1 >> 0x20\n 15929: a2 = u64 [s1 + 0x80]\n 15933: u64 [s1 + 0x5d8] = a2\n 15937: a2 = u64 [s1 + 0x88]\n 15941: u64 [s1 + 0x5d0] = a2\n 15945: a2 = u64 [s1 + 0x90]\n 15949: u64 [s1 + 0x5c8] = a2\n 15953: a2 = u64 [s1 + 0x98]\n 15957: u64 [s1 + 0x5c0] = a2\n 15961: u64 [s1 + 1528] = 0\n 15965: a2 = u64 [s1 + 0xa0]\n 15969: a4 = s1 + 0x600\n 15973: u64 [a4 + 0x18] = a2\n 15976: a2 = u64 [s1 + 0xa8]\n 15980: u64 [a4 + 0x10] = a2\n 15983: a2 = u64 [s1 + 0xb0]\n 15987: u64 [a4 + 0x8] = a2\n 15990: a2 = u64 [s1 + 0xb8]\n 15994: u64 [a4] = a2\n 15996: u64 [s1 + 0x5f0] = a1\n 16000: u64 [s1 + 0x5e8] = a0\n 16004: a0 = s1 + 0x600\n 16008: a1 = s1 + 0x5e0\n 16012: a2 = s1 + 0x5c0\n 16016: u64 [s1 + 0x5e0] = a3\n 16020: ra = 592, jump @1032\n      : @613 [@dyn 296] (gas: 28)\n 16026: a0 = u64 [s1 + 0x80]\n 16030: u64 [s1 + 0x578] = a0\n 16034: a0 = u64 [s1 + 0x88]\n 16038: u64 [s1 + 0x570] = a0\n 16042: a0 = u64 [s1 + 0x90]\n 16046: u64 [s1 + 0x568] = a0\n 16050: a0 = u64 [s1 + 0x98]\n 16054: u64 [s1 + 0x560] = a0\n 16058: a0 = u64 [s1 + 0x60]\n 16061: u64 [s1 + 0x598] = a0\n 16065: a0 = u64 [s1 + 0x68]\n 16068: u64 [s1 + 0x590] = a0\n 16072: a0 = u64 [s1 + 0x70]\n 16075: u64 [s1 + 0x588] = a0\n 16079: a0 = u64 [s1 + 0x78]\n 16082: u64 [s1 + 0x580] = a0\n 16086: a0 = u64 [s1 + 0xa0]\n 16090: u64 [s1 + 0x5b8] = a0\n 16094: a0 = u64 [s1 + 0xa8]\n 16098: u64 [s1 + 0x5b0] = a0\n 16102: a0 = u64 [s1 + 0xb0]\n 16106: u64 [s1 + 0x5a8] = a0\n 16110: a0 = s1 + 0x5a0\n 16114: a1 = s1 + 0x580\n 16118: a2 = s1 + 0x560\n 16122: a3 = u64 [s1 + 0xb8]\n 16126: u64 [s1 + 0x5a0] = a3\n 16130: ra = 594, jump @1079\n      : @614 [@dyn 297] (gas: 3)\n 16136: a0 = s1 + 0x540\n 16140: a1 = 0x40\n 16143: ra = 596, jump @17\n      : @615 [@dyn 298] (gas: 6)\n 16149: a4 = s1 + 0x500\n 16153: a3 = u64 [a4 + 0x58]\n 16156: a1 = u64 [a4 + 0x50]\n 16159: a2 = u64 [a4 + 0x48]\n 16162: a0 = u64 [a4 + 0x40]\n 16165: t0 = 598, jump @1332\n      : @616 [@dyn 299] (gas: 1)\n 16171: jump @654 if a1 != 0\n      : @617 (gas: 8)\n 16175: u64 [s1 + 1336] = 0\n 16179: u64 [s1 + 1328] = 0\n 16183: u64 [s1 + 1320] = 0\n 16187: a1 = s1 + 0x520\n 16191: u64 [s1 + 1312] = 0x1\n 16196: u64 [s1 + 0xb8] = a0\n 16200: ra = 0x2d6\n 16204: jump @19\n      : @618 (gas: 9)\n 16207: a0 = s1 + 0x1838\n 16211: u64 [a0 + 832] = 0\n 16215: u64 [a0 + 824] = 0\n 16219: u64 [a0 + 816] = 0\n 16223: u64 [a0 + 808] = 0\n 16227: a0 = s1 + 0x2000\n 16231: i32 a0 = a0 + 0xfffffffffffffb60\n 16235: ecalli 10 // 'value_transferred'\n 16237: fallthrough\n      : @619 (gas: 10)\n 16238: a3 = s1 + 0x1838\n 16242: a4 = a3 + 0x300\n 16246: a0 = u64 [a4 + 0x38]\n 16249: a1 = u64 [a4 + 0x40]\n 16252: a2 = u64 [a4 + 0x30]\n 16255: a3 = u64 [a4 + 0x28]\n 16258: a1 = a1 | a2\n 16261: a0 = a0 | a3\n 16264: a0 = a0 | a1\n 16267: jump @750 if a0 != 0\n      : @620 (gas: 3)\n 16271: a0 = u64 [s1 + 0xb8]\n 16275: a0 = i32 [a0]\n 16277: jump @751 if a0 <=u 3\n      : @621 (gas: 3)\n 16282: a0 = s1 + 0x14e0\n 16286: a1 = 0x40\n 16289: ra = 600, jump @17\n      : @622 [@dyn 300] (gas: 7)\n 16295: a3 = s1 + 0x1038\n 16299: a5 = a3 + 0x400\n 16303: a4 = u64 [a5 + 0xc0]\n 16307: a1 = u64 [a5 + 0xb8]\n 16311: a2 = u64 [a5 + 0xb0]\n 16315: a0 = u64 [a5 + 0xa8]\n 16319: t0 = 602, jump @1341\n      : @623 [@dyn 301] (gas: 1)\n 16325: jump @654 if a1 != 0\n      : @624 (gas: 13)\n 16329: a1 = u64 [0x20028]\n 16334: a5 = a3 + 0x400\n 16338: u64 [a5 + 0xa0] = a1\n 16342: a4 = u64 [0x20030]\n 16347: a1 = u64 [0x20038]\n 16352: a2 = u64 [0x20040]\n 16357: u64 [a5 + 0x98] = a4\n 16361: u64 [a5 + 0x90] = a1\n 16365: a1 = s1 + 0x14c0\n 16369: u64 [a5 + 0x88] = a2\n 16373: u64 [s1 + 0xb8] = a0\n 16377: ra = 0x2d6\n 16381: jump @19\n      : @625 (gas: 10)\n 16384: u64 [a2 + 1440] = 0\n 16388: u64 [a2 + 1432] = 0\n 16392: u64 [a2 + 1424] = 0\n 16396: u64 [a2 + 1416] = 0\n 16400: a0 = s1 + 0x1000\n 16404: i32 a0 = a0 + 0x5c0\n 16408: ra = 0x25c\n 16412: ecalli 10 // 'value_transferred'\n 16414: t0 = 0x25e\n 16418: jump @1398\n      : @626 [@dyn 302] (gas: 1)\n 16421: t0 = 606, jump @1398\n      : @627 [@dyn 303] (gas: 8)\n 16427: a0 = u64 [a4 + 0x98]\n 16431: a1 = u64 [a4 + 0xa0]\n 16435: a2 = u64 [a4 + 0x90]\n 16439: a3 = u64 [a4 + 0x88]\n 16443: a1 = a1 | a2\n 16446: a0 = a0 | a3\n 16449: a0 = a0 | a1\n 16452: jump @752 if a0 != 0\n      : @628 (gas: 4)\n 16456: a0 = u64 [s1 + 0xb8]\n 16460: a0 = i32 [a0]\n 16462: a1 = 0x43\n 16465: jump @753 if a1 >=u a0\n      : @629 (gas: 4)\n 16469: a0 = s1 + 0x4a0\n 16473: ra = 0x260\n 16477: t0 = 0x3f2\n 16481: jump @1397\n      : @630 [@dyn 304] (gas: 36)\n 16484: a1 = s1 + 0x400\n 16488: a0 = u64 [a1 + 0xb0]\n 16492: u64 [s1 + 0x98] = a0\n 16496: a0 = u64 [a1 + 0xa8]\n 16500: u64 [s1 + 0xb0] = a0\n 16504: a0 = u64 [a1 + 0xa0]\n 16508: u64 [s1 + 0xb8] = a0\n 16512: a0 = sp + 0xffffffffffffffe0\n 16515: a0 = a0 & 0xffffffffffffffe0\n 16518: u64 [s1 + 0xa0] = a0\n 16522: sp = a0\n 16524: a0 = s1 + 0x1000\n 16528: i32 a0 = a0 + 0x5e0\n 16532: a1 = 0x24\n 16535: ecalli 1 // 'call_data_load'\n 16537: a0 = s1 + 0x1038\n 16541: a4 = a0 + 0x500\n 16545: a1 = u64 [a4 + 0xc0]\n 16549: a2 = u64 [a4 + 0xb8]\n 16553: a3 = u64 [a4 + 0xb0]\n 16557: a0 = u64 [a4 + 0xa8]\n 16561: u64 [s1 + 0x50] = a1\n 16564: a4 = u64 [s1 + 0xa0]\n 16568: u64 [a4 + 0x18] = a1\n 16571: u64 [s1 + 0x48] = a2\n 16574: u64 [a4 + 0x10] = a2\n 16577: u64 [s1 + 0x40] = a3\n 16580: u64 [a4 + 0x8] = a3\n 16583: u64 [s1 + 0x38] = a0\n 16586: u64 [a4] = a0\n 16588: a0 = 0x30280\n 16593: u64 [s1 + 0xa8] = a0\n 16597: i32 a0 = a0 + 0\n 16599: u64 [s1 + 0x90] = a0\n 16603: ecalli 3 // 'caller'\n 16605: fallthrough\n      : @631 (gas: 7)\n 16606: a2 = u64 [s1 + 0xa8]\n 16610: a0 = u32 [a2 + 0x10]\n 16613: a1 = u64 [a2]\n 16615: a2 = u64 [a2 + 0x8]\n 16618: a0 = a0 | a1\n 16621: a0 = a0 | a2\n 16624: jump @754 if a0 == 0\n      : @632 (gas: 9)\n 16628: a0 = u64 [s1 + 0x98]\n 16632: a0 = a0 << 0x20\n 16635: a1 = a0 >> 0x20\n 16638: a0 = u64 [s1 + 0xb0]\n 16642: a2 = u64 [s1 + 0xb8]\n 16646: a0 = a0 | a2\n 16649: u64 [s1 + 0x98] = a1\n 16653: a0 = a0 | a1\n 16656: jump @759 if a0 == 0\n      : @633 (gas: 23)\n 16660: a0 = u64 [s1 + 0x90]\n 16664: ecalli 3 // 'caller'\n 16666: a2 = u64 [s1 + 0xa8]\n 16670: a0 = u64 [a2 + 0x8]\n 16673: a1 = i32 [a2 + 0x10]\n 16676: a2 = u64 [a2]\n 16678: a0 = reverse a0\n 16680: a3 = a0 << 0x20\n 16683: a1 = reverse a1\n 16685: a1 = a1 >> 0x20\n 16688: a3 = a3 | a1\n 16691: a0 = a0 >> 0x20\n 16694: a1 = reverse a2\n 16696: a2 = a1 << 0x20\n 16699: a0 = a0 | a2\n 16702: a1 = a1 >> 0x20\n 16705: u64 [s1 + 1176] = 0\n 16709: u64 [s1 + 0x490] = a1\n 16713: u64 [s1 + 0x488] = a0\n 16717: a1 = s1 + 0x480\n 16721: u64 [s1 + 0x480] = a3\n 16725: a0 = 0\n 16727: ra = 610, jump @19\n      : @634 [@dyn 305] (gas: 7)\n 16733: u64 [s1 + 1144] = 0\n 16737: u64 [s1 + 1136] = 0\n 16741: u64 [s1 + 1120] = 0x1\n 16746: a0 = 0x20\n 16749: a1 = s1 + 0x460\n 16753: u64 [s1 + 1128] = 0\n 16757: ra = 612, jump @19\n      : @635 [@dyn 306] (gas: 3)\n 16763: a1 = 0x2026c\n 16768: a0 = i32 [0x2026c]\n 16773: jump @637 if a0 >u 63\n      : @636 (gas: 2)\n 16777: u32 [0x2026c] = 0x40\n 16783: fallthrough\n      : @637 (gas: 15)\n 16784: a0 = sp + 0xffffffffffffffe0\n 16787: a2 = a0 & 0xffffffffffffffe0\n 16790: u64 [s1 + 0x78] = a2\n 16793: sp = a2\n 16795: a0 = 0x20280\n 16800: i32 a0 = a0 + 0\n 16802: i32 a2 = a2 + 0\n 16804: u64 [s1 + 0x88] = a1\n 16808: a1 = 0x40\n 16811: u64 [s1 + 0x80] = a0\n 16815: ra = 0x266\n 16819: ecalli 6 // 'hash_keccak_256'\n 16821: a3 = u64 [s1 + 0x78]\n 16824: t0 = 0x268\n 16828: jump @1383\n      : @638 [@dyn 307] (gas: 2)\n 16831: a3 = u64 [s1 + 0x78]\n 16834: t0 = 616, jump @1383\n      : @639 [@dyn 308] (gas: 21)\n 16840: u64 [s1 + 0x70] = a0\n 16843: a0 = reverse a1\n 16845: u64 [s1 + 0x68] = a0\n 16848: a0 = reverse a2\n 16850: u64 [s1 + 0x60] = a0\n 16853: a0 = reverse a3\n 16855: u64 [s1 + 0x58] = a0\n 16858: a0 = sp + 0xffffffffffffffe0\n 16861: a0 = a0 & 0xffffffffffffffe0\n 16864: u64 [s1 + 0x78] = a0\n 16867: sp = a0\n 16869: u64 [s1 + 1112] = 0\n 16873: a0 = u64 [s1 + 0x98]\n 16877: u64 [s1 + 0x450] = a0\n 16881: a0 = u64 [s1 + 0xb0]\n 16885: u64 [s1 + 0x448] = a0\n 16889: a1 = s1 + 0x440\n 16893: a0 = u64 [s1 + 0xb8]\n 16897: u64 [s1 + 0x440] = a0\n 16901: a0 = 0\n 16903: ra = 618, jump @19\n      : @640 [@dyn 309] (gas: 12)\n 16909: a0 = u64 [s1 + 0x58]\n 16912: a3 = s1 + 0x400\n 16916: u64 [a3 + 0x38] = a0\n 16919: a0 = u64 [s1 + 0x60]\n 16922: u64 [a3 + 0x30] = a0\n 16925: a0 = u64 [s1 + 0x68]\n 16928: u64 [a3 + 0x28] = a0\n 16931: a0 = 0x20\n 16934: a1 = s1 + 0x420\n 16938: a2 = u64 [s1 + 0x70]\n 16941: u64 [a3 + 0x20] = a2\n 16944: ra = 620, jump @19\n      : @641 [@dyn 310] (gas: 3)\n 16950: a1 = u64 [s1 + 0x88]\n 16954: a0 = i32 [a1]\n 16956: jump @643 if a0 >u 63\n      : @642 (gas: 2)\n 16960: u32 [a1 + 0] = 0x40\n 16963: fallthrough\n      : @643 (gas: 24)\n 16964: a0 = sp + 0xffffffffffffffe0\n 16967: a0 = a0 & 0xffffffffffffffe0\n 16970: u64 [s1 + 0x88] = a0\n 16974: sp = a0\n 16976: i32 a2 = a0 + 0\n 16978: a1 = 0x40\n 16981: a0 = u64 [s1 + 0x80]\n 16985: ecalli 6 // 'hash_keccak_256'\n 16987: a3 = u64 [s1 + 0x88]\n 16991: a0 = u64 [a3 + 0x18]\n 16994: a1 = u64 [a3 + 0x10]\n 16997: a2 = u64 [a3 + 0x8]\n 17000: a3 = u64 [a3]\n 17002: a4 = reverse a0\n 17004: a1 = reverse a1\n 17006: a2 = reverse a2\n 17008: a3 = reverse a3\n 17010: a0 = u64 [s1 + 0x78]\n 17013: u64 [a0 + 0x18] = a3\n 17016: u64 [a0 + 0x10] = a2\n 17019: u64 [a0 + 0x8] = a1\n 17022: u64 [a0] = a4\n 17024: a1 = u64 [s1 + 0xa0]\n 17028: ra = 622, jump @24\n      : @644 [@dyn 311] (gas: 3)\n 17034: a0 = s1 + 0x400\n 17038: a1 = 0x40\n 17041: ra = 624, jump @17\n      : @645 [@dyn 312] (gas: 6)\n 17047: a4 = s1 + 0x400\n 17051: a0 = u64 [a4 + 0x18]\n 17054: a1 = u64 [a4 + 0x10]\n 17057: a2 = u64 [a4 + 0x8]\n 17060: a3 = u64 [a4]\n 17062: t0 = 626, jump @1384\n      : @646 [@dyn 313] (gas: 1)\n 17068: jump @654 if a0 != 0\n      : @647 (gas: 12)\n 17072: a0 = u64 [s1 + 0x38]\n 17075: u64 [s1 + 0x3e0] = a0\n 17079: a0 = u64 [s1 + 0x40]\n 17082: u64 [s1 + 0x3e8] = a0\n 17086: a0 = u64 [s1 + 0x48]\n 17089: u64 [s1 + 0x3f0] = a0\n 17093: a1 = s1 + 0x3e0\n 17097: a0 = u64 [s1 + 0x50]\n 17100: u64 [s1 + 0x3f8] = a0\n 17104: a0 = a3\n 17106: u64 [s1 + 0xa0] = a3\n 17110: ra = 628, jump @19\n      : @648 [@dyn 314] (gas: 6)\n 17116: a0 = u64 [s1 + 0x90]\n 17120: ra = 0x276\n 17124: ecalli 3 // 'caller'\n 17126: a2 = u64 [s1 + 0xa8]\n 17130: t0 = 0x278\n 17134: jump @1325\n      : @649 [@dyn 315] (gas: 2)\n 17137: a2 = u64 [s1 + 0xa8]\n 17141: t0 = 632, jump @1325\n      : @650 [@dyn 316] (gas: 31)\n 17147: t0 = a1 | a0\n 17150: a3 = a3 >> 0x20\n 17153: a2 = reverse a2\n 17155: a1 = a2 << 0x20\n 17158: a1 = a1 | a3\n 17161: a2 = a2 >> 0x20\n 17164: u64 [s1 + 920] = 0\n 17168: a0 = u64 [s1 + 0x98]\n 17172: u64 [s1 + 0x390] = a0\n 17176: a0 = u64 [s1 + 0xb0]\n 17180: u64 [s1 + 0x388] = a0\n 17184: a0 = u64 [s1 + 0xb8]\n 17188: u64 [s1 + 0x380] = a0\n 17192: u64 [s1 + 952] = 0\n 17196: a3 = u64 [0x200e8]\n 17201: a4 = u64 [0x200f0]\n 17206: a5 = u64 [0x200f8]\n 17211: a0 = u64 [0x20100]\n 17216: u64 [s1 + 0x3d8] = a3\n 17220: u64 [s1 + 0x3d0] = a4\n 17224: u64 [s1 + 0x3c8] = a5\n 17228: u64 [s1 + 0x3c0] = a0\n 17232: u64 [s1 + 0x3b0] = a2\n 17236: u64 [s1 + 0x3a8] = a1\n 17240: a1 = 0x20\n 17243: a2 = s1 + 0x3c0\n 17247: a3 = s1 + 0x3a0\n 17251: a4 = s1 + 0x380\n 17255: u64 [s1 + 0x3a0] = t0\n 17259: a0 = u64 [s1 + 0xa0]\n 17263: ra = 634, jump @27\n      : @651 [@dyn 317] (gas: 3)\n 17269: a0 = s1 + 0x360\n 17273: a1 = 0x40\n 17276: ra = 636, jump @17\n      : @652 [@dyn 318] (gas: 6)\n 17282: a4 = s1 + 0x300\n 17286: a3 = u64 [a4 + 0x78]\n 17289: a1 = u64 [a4 + 0x70]\n 17292: a2 = u64 [a4 + 0x68]\n 17295: a0 = u64 [a4 + 0x60]\n 17298: t0 = 638, jump @1332\n      : @653 [@dyn 319] (gas: 1)\n 17304: jump @777 if a1 == 0\n      : @654 (gas: 1)\n 17308: trap\n      : @655 (gas: 7)\n 17309: u64 [s1 + 600] = 0\n 17313: u64 [s1 + 592] = 0\n 17317: u64 [s1 + 584] = 0\n 17321: a1 = s1 + 0x240\n 17325: u64 [s1 + 576] = 0x3\n 17330: a0 = 0\n 17332: ra = 640, jump @19\n      : @656 [@dyn 320] (gas: 1)\n 17338: t0 = 642, jump @1389\n      : @657 [@dyn 321] (gas: 30)\n 17344: t0 = u64 [0x20108]\n 17349: a3 = u64 [0x20110]\n 17354: a1 = u64 [s1 + 0x30]\n 17357: a0 = a1 + 0x20\n 17360: u64 [s1 + 0x50] = a0\n 17363: a0 = a0 <u a1\n 17366: a1 = u64 [s1 + 0x20]\n 17369: a2 = a1 + a0\n 17372: u64 [s1 + 0x48] = a2\n 17375: a1 = a2 <u a1\n 17378: a1 = a0 if a0 == 0\n 17381: a5 = u64 [0x20118]\n 17386: a0 = u64 [0x20120]\n 17391: ra = t0\n 17393: u64 [a4 + 0x18] = t0\n 17396: u64 [s1 + 0x78] = a3\n 17399: u64 [a4 + 0x10] = a3\n 17402: t0 = a5\n 17404: u64 [a4 + 0x8] = a5\n 17407: u64 [s1 + 0x98] = a4\n 17411: a2 = a0\n 17413: u64 [a4] = a0\n 17415: a0 = u64 [s1 + 0x28]\n 17418: a1 = a1 + a0\n 17421: u64 [s1 + 0x40] = a1\n 17424: a0 = a1 <u a0\n 17427: a1 = u64 [s1 + 0x18]\n 17430: a0 = a0 + a1\n 17433: u64 [s1 + 0x38] = a0\n 17436: fallthrough\n      : @658 (gas: 3)\n 17437: u64 [s1 + 0x80] = a2\n 17441: u64 [s1 + 0x88] = t0\n 17445: t0 = 644, jump @1340\n      : @659 [@dyn 322] (gas: 1)\n 17451: jump @661 if a3 != 0\n      : @660 (gas: 1)\n 17454: jump @416\n      : @661 (gas: 5)\n 17457: a0 = s1 + 0x220\n 17461: a1 = u64 [s1 + 0x98]\n 17465: u64 [s1 + 0xa8] = t1\n 17469: u64 [s1 + 0xa0] = t2\n 17473: ra = 646, jump @21\n      : @662 [@dyn 323] (gas: 1)\n 17479: t0 = 648, jump @1344\n      : @663 [@dyn 324] (gas: 6)\n 17485: t0 = a1 <u a5\n 17488: a5 = u64 [s1 + 0xb0]\n 17492: a3 = u64 [s1 + 0x38]\n 17495: a5 = a5 + a3\n 17498: a5 = a5 + t0\n 17501: t0 = 650, jump @1378\n      : @664 [@dyn 325] (gas: 1)\n 17507: jump @654 if a1 != 0\n      : @665 (gas: 12)\n 17511: a3 = s1 + 0x200\n 17515: a2 = u64 [a3 + 0x38]\n 17518: a1 = u64 [a3 + 0x30]\n 17521: a5 = u64 [a3 + 0x28]\n 17524: a4 = u64 [a3 + 0x20]\n 17527: u64 [a3] = a4\n 17529: u64 [a3 + 0x8] = a5\n 17532: u64 [a3 + 0x10] = a1\n 17535: a1 = s1 + 0x200\n 17539: u64 [a3 + 0x18] = a2\n 17542: u64 [s1 + 0xb8] = t2\n 17546: ra = 652, jump @19\n      : @666 [@dyn 326] (gas: 1)\n 17552: t0 = 654, jump @1327\n      : @667 [@dyn 327] (gas: 14)\n 17558: t0 = ra\n 17560: a5 = u64 [s1 + 0x98]\n 17564: u64 [a5 + 0x8] = ra\n 17567: a2 = a3\n 17569: u64 [a5] = a3\n 17571: a3 = t2\n 17573: u64 [a5 + 0x10] = a3\n 17576: ra = a0\n 17578: u64 [a5 + 0x18] = a0\n 17581: u64 [s1 + 0x78] = a3\n 17584: u64 [s1 + 0xb8] = t1\n 17588: t2 = a1\n 17590: t1 = a4\n 17592: jump @658\n      : @668 (gas: 8)\n 17595: a2 = s1 + 0x1038\n 17599: u64 [a2 + 224] = 0\n 17603: u64 [a2 + 216] = 0\n 17607: u64 [a2 + 208] = 0\n 17611: a1 = s1 + 0x1100\n 17615: u64 [a2 + 200] = 0x4\n 17620: a0 = 0\n 17622: ra = 656, jump @19\n      : @669 [@dyn 328] (gas: 1)\n 17628: t0 = 658, jump @1389\n      : @670 [@dyn 329] (gas: 30)\n 17634: t0 = u64 [0x20068]\n 17639: a3 = u64 [0x20070]\n 17644: a1 = u64 [s1 + 0x30]\n 17647: a0 = a1 + 0x20\n 17650: u64 [s1 + 0x50] = a0\n 17653: a0 = a0 <u a1\n 17656: a1 = u64 [s1 + 0x20]\n 17659: a2 = a1 + a0\n 17662: u64 [s1 + 0x48] = a2\n 17665: a1 = a2 <u a1\n 17668: a1 = a0 if a0 == 0\n 17671: a5 = u64 [0x20078]\n 17676: a0 = u64 [0x20080]\n 17681: ra = t0\n 17683: u64 [a4 + 0x18] = t0\n 17686: u64 [s1 + 0x78] = a3\n 17689: u64 [a4 + 0x10] = a3\n 17692: t0 = a5\n 17694: u64 [a4 + 0x8] = a5\n 17697: u64 [s1 + 0x98] = a4\n 17701: a2 = a0\n 17703: u64 [a4] = a0\n 17705: a0 = u64 [s1 + 0x28]\n 17708: a1 = a1 + a0\n 17711: u64 [s1 + 0x40] = a1\n 17714: a0 = a1 <u a0\n 17717: a1 = u64 [s1 + 0x18]\n 17720: a0 = a0 + a1\n 17723: u64 [s1 + 0x38] = a0\n 17726: fallthrough\n      : @671 (gas: 3)\n 17727: u64 [s1 + 0x80] = a2\n 17731: u64 [s1 + 0x88] = t0\n 17735: t0 = 660, jump @1340\n      : @672 [@dyn 330] (gas: 1)\n 17741: jump @674 if a3 != 0\n      : @673 (gas: 1)\n 17744: jump @495\n      : @674 (gas: 5)\n 17747: a0 = s1 + 0x10e0\n 17751: a1 = u64 [s1 + 0x98]\n 17755: u64 [s1 + 0xa8] = t1\n 17759: u64 [s1 + 0xa0] = t2\n 17763: ra = 662, jump @21\n      : @675 [@dyn 331] (gas: 1)\n 17769: t0 = 664, jump @1344\n      : @676 [@dyn 332] (gas: 6)\n 17775: t0 = a1 <u a5\n 17778: a5 = u64 [s1 + 0xb0]\n 17782: a3 = u64 [s1 + 0x38]\n 17785: a5 = a5 + a3\n 17788: a5 = a5 + t0\n 17791: t0 = 666, jump @1378\n      : @677 [@dyn 333] (gas: 1)\n 17797: jump @654 if a1 != 0\n      : @678 (gas: 12)\n 17801: a5 = s1 + 0x1038\n 17805: t0 = u64 [a5 + 0xc0]\n 17809: a1 = u64 [a5 + 0xb8]\n 17813: a2 = u64 [a5 + 0xb0]\n 17817: a4 = u64 [a5 + 0xa8]\n 17821: u64 [a5 + 0x88] = a4\n 17825: u64 [a5 + 0x90] = a2\n 17829: u64 [a5 + 0x98] = a1\n 17833: a1 = s1 + 0x10c0\n 17837: u64 [a5 + 0xa0] = t0\n 17841: u64 [s1 + 0xb8] = t2\n 17845: ra = 668, jump @19\n      : @679 [@dyn 334] (gas: 1)\n 17851: t0 = 670, jump @1327\n      : @680 [@dyn 335] (gas: 14)\n 17857: t0 = ra\n 17859: a5 = u64 [s1 + 0x98]\n 17863: u64 [a5 + 0x8] = ra\n 17866: a2 = a3\n 17868: u64 [a5] = a3\n 17870: a3 = t2\n 17872: u64 [a5 + 0x10] = a3\n 17875: ra = a0\n 17877: u64 [a5 + 0x18] = a0\n 17880: u64 [s1 + 0x78] = a3\n 17883: u64 [s1 + 0xb8] = t1\n 17887: t2 = a1\n 17889: t1 = a4\n 17891: jump @671\n      : @681 (gas: 6)\n 17894: a1 = 0x20280\n 17899: i32 a1 = a1 + 0\n 17901: a0 = 0x1\n 17904: a2 = 0\n 17906: ecalli 7 // 'seal_return'\n 17908: jump @825\n      : @682 (gas: 6)\n 17911: a1 = 0x20280\n 17916: i32 a1 = a1 + 0\n 17918: a0 = 0x1\n 17921: a2 = 0\n 17923: ecalli 7 // 'seal_return'\n 17925: jump @825\n      : @683 (gas: 6)\n 17928: a1 = 0x20280\n 17933: i32 a1 = a1 + 0\n 17935: a0 = 0x1\n 17938: a2 = 0\n 17940: ecalli 7 // 'seal_return'\n 17942: jump @825\n      : @684 (gas: 6)\n 17945: a1 = 0x20280\n 17950: i32 a1 = a1 + 0\n 17952: a0 = 0x1\n 17955: a2 = 0\n 17957: ecalli 7 // 'seal_return'\n 17959: jump @825\n      : @685 (gas: 6)\n 17962: a1 = 0x20280\n 17967: i32 a1 = a1 + 0\n 17969: a0 = 0x1\n 17972: a2 = 0\n 17974: ecalli 7 // 'seal_return'\n 17976: jump @825\n      : @686 (gas: 6)\n 17979: a1 = 0x20280\n 17984: i32 a1 = a1 + 0\n 17986: a0 = 0x1\n 17989: a2 = 0\n 17991: ecalli 7 // 'seal_return'\n 17993: jump @825\n      : @687 (gas: 6)\n 17996: a1 = 0x20280\n 18001: i32 a1 = a1 + 0\n 18003: a0 = 0x1\n 18006: a2 = 0\n 18008: ecalli 7 // 'seal_return'\n 18010: jump @825\n      : @688 (gas: 6)\n 18013: a1 = 0x20280\n 18018: i32 a1 = a1 + 0\n 18020: a0 = 0x1\n 18023: a2 = 0\n 18025: ecalli 7 // 'seal_return'\n 18027: jump @825\n      : @689 (gas: 6)\n 18030: a1 = 0x20280\n 18035: i32 a1 = a1 + 0\n 18037: a0 = 0x1\n 18040: a2 = 0\n 18042: ecalli 7 // 'seal_return'\n 18044: jump @825\n      : @690 (gas: 6)\n 18047: a1 = 0x20280\n 18052: i32 a1 = a1 + 0\n 18054: a0 = 0x1\n 18057: a2 = 0\n 18059: ecalli 7 // 'seal_return'\n 18061: jump @825\n      : @691 (gas: 6)\n 18064: a1 = 0x20280\n 18069: i32 a1 = a1 + 0\n 18071: a0 = 0x1\n 18074: a2 = 0\n 18076: ecalli 7 // 'seal_return'\n 18078: jump @825\n      : @692 (gas: 6)\n 18081: a1 = 0x20280\n 18086: i32 a1 = a1 + 0\n 18088: a0 = 0x1\n 18091: a2 = 0\n 18093: ecalli 7 // 'seal_return'\n 18095: jump @825\n      : @693 (gas: 6)\n 18098: a1 = 0x20280\n 18103: i32 a1 = a1 + 0\n 18105: a0 = 0x1\n 18108: a2 = 0\n 18110: ecalli 7 // 'seal_return'\n 18112: jump @825\n      : @694 (gas: 6)\n 18115: a1 = 0x20280\n 18120: i32 a1 = a1 + 0\n 18122: a0 = 0x1\n 18125: a2 = 0\n 18127: ecalli 7 // 'seal_return'\n 18129: jump @825\n      : @695 (gas: 6)\n 18132: u64 [s1 + 272] = 0\n 18136: u64 [s1 + 264] = 0\n 18140: u64 [s1 + 256] = 0\n 18144: t0 = 0x2a0\n 18148: a0 = 0x4e487b7100000000\n 18158: fallthrough\n      : @696 [@dyn 336] (gas: 4)\n 18159: a1 = s1 + 0x100\n 18163: u64 [s1 + 0x118] = a0\n 18167: a0 = 0\n 18169: ra = 674, jump @19\n      : @697 [@dyn 337] (gas: 7)\n 18175: u64 [s1 + 248] = 0\n 18179: u64 [s1 + 240] = 0\n 18183: u64 [s1 + 224] = 0x22\n 18188: a0 = 0x4\n 18191: a1 = s1 + 0xe0\n 18195: u64 [s1 + 232] = 0\n 18199: ra = 676, jump @19\n      : @698 [@dyn 338] (gas: 2)\n 18205: a1 = i32 [0x2026c]\n 18210: jump @700 if a1 >u 63\n      : @699 (gas: 3)\n 18214: u32 [0x2026c] = 0x40\n 18220: a1 = 0x20280\n 18225: jump @776\n      : @700 (gas: 2)\n 18228: a1 = 0x20280\n 18233: jump @776\n      : @701 (gas: 6)\n 18236: a1 = 0x20280\n 18241: i32 a1 = a1 + 0\n 18243: a0 = 0x1\n 18246: a2 = 0\n 18248: ecalli 7 // 'seal_return'\n 18250: jump @825\n      : @702 (gas: 6)\n 18253: a1 = 0x20280\n 18258: i32 a1 = a1 + 0\n 18260: a0 = 0x1\n 18263: a2 = 0\n 18265: ecalli 7 // 'seal_return'\n 18267: jump @825\n      : @703 (gas: 9)\n 18270: u64 [a2 + 344] = 0\n 18274: u64 [a2 + 336] = 0\n 18278: u64 [a2 + 328] = 0\n 18282: a0 = 0xe2517d3f00000000\n 18292: a1 = s1 + 0x7ff\n 18296: a1 = a1 + 0x181\n 18300: u64 [a2 + 0x160] = a0\n 18304: a0 = 0\n 18306: ra = 678, jump @19\n      : @704 [@dyn 339] (gas: 6)\n 18312: a0 = u64 [s1 + 0x20]\n 18315: ra = 0x2a8\n 18319: ecalli 3 // 'caller'\n 18321: a2 = u64 [s1 + 0x70]\n 18324: t0 = 0x2aa\n 18328: jump @1321\n      : @705 [@dyn 340] (gas: 2)\n 18331: a2 = u64 [s1 + 0x70]\n 18334: t0 = 682, jump @1321\n      : @706 [@dyn 341] (gas: 9)\n 18340: u64 [a2 + 320] = 0\n 18344: a4 = a2 + 0x100\n 18348: u64 [a4 + 0x38] = a1\n 18351: u64 [a4 + 0x30] = a0\n 18354: a0 = 0x4\n 18357: a1 = s1 + 0x7ff\n 18361: a1 = a1 + 0x161\n 18365: u64 [a4 + 0x28] = a3\n 18368: ra = 684, jump @19\n      : @707 [@dyn 342] (gas: 16)\n 18374: a0 = u64 [s1 + 0x40]\n 18377: a1 = s1 + 0x7ff\n 18381: a1 = a1 + 0x39\n 18384: a2 = a1 + 0x100\n 18388: u64 [a2 + 0x20] = a0\n 18391: a0 = u64 [s1 + 0x30]\n 18394: u64 [a2 + 0x18] = a0\n 18397: a0 = u64 [s1 + 0x28]\n 18400: u64 [a2 + 0x10] = a0\n 18403: a3 = a1\n 18405: a0 = 0x24\n 18408: a1 = s1 + 0x7ff\n 18412: a1 = a1 + 0x141\n 18416: a2 = u64 [s1 + 0x38]\n 18419: u64 [a3 + 0x108] = a2\n 18423: ra = 686, jump @19\n      : @708 [@dyn 343] (gas: 3)\n 18429: a0 = u64 [s1 + 0x98]\n 18433: a0 = i32 [a0]\n 18435: jump @710 if a0 >u 95\n      : @709 (gas: 7)\n 18439: a1 = u64 [s1 + 0x98]\n 18443: u32 [a1 + 0] = 0x60\n 18446: a0 = 0x1\n 18449: a2 = 0x44\n 18452: a1 = u64 [s1 + 0xb8]\n 18456: ecalli 7 // 'seal_return'\n 18458: jump @718\n      : @710 (gas: 5)\n 18461: a0 = 0x1\n 18464: a2 = 0x44\n 18467: a1 = u64 [s1 + 0xb8]\n 18471: ecalli 7 // 'seal_return'\n 18473: jump @718\n      : @711 (gas: 12)\n 18476: a0 = s1 + 0x7ff\n 18480: a0 = a0 + 0x39\n 18483: u64 [a0 + 408] = 0\n 18487: u64 [a0 + 400] = 0\n 18491: u64 [a0 + 392] = 0\n 18495: a2 = a0\n 18497: a0 = 0xec442f0500000000\n 18507: a1 = s1 + 0x7ff\n 18511: a1 = a1 + 0x1c1\n 18515: u64 [a2 + 0x1a0] = a0\n 18519: a0 = 0\n 18521: ra = 688, jump @19\n      : @712 [@dyn 344] (gas: 12)\n 18527: a0 = s1 + 0x7ff\n 18531: a0 = a0 + 0x39\n 18534: u64 [a0 + 384] = 0\n 18538: u64 [a0 + 376] = 0\n 18542: u64 [a0 + 368] = 0\n 18546: a2 = a0\n 18548: a0 = 0x4\n 18551: a1 = s1 + 0x7ff\n 18555: a1 = a1 + 0x1a1\n 18559: u64 [a2 + 360] = 0\n 18563: ra = 0x2b4\n 18567: jump @19\n      : @713 (gas: 12)\n 18570: a0 = s1 + 0x7ff\n 18574: a0 = a0 + 0x39\n 18577: u64 [a0 + 472] = 0\n 18581: u64 [a0 + 464] = 0\n 18585: u64 [a0 + 456] = 0\n 18589: a2 = a0\n 18591: a0 = 0x4e487b7100000000\n 18601: a1 = s1 + 0x7ff\n 18605: a1 = a1 + 0x201\n 18609: u64 [a2 + 0x1e0] = a0\n 18613: a0 = 0\n 18615: ra = 690, jump @19\n      : @714 [@dyn 345] (gas: 11)\n 18621: a1 = s1 + 0x7ff\n 18625: a1 = a1 + 0x39\n 18628: u64 [a1 + 448] = 0\n 18632: u64 [a1 + 440] = 0\n 18636: u64 [a1 + 424] = 0x11\n 18641: a2 = a1\n 18643: a0 = 0x4\n 18646: a1 = s1 + 0x7ff\n 18650: a1 = a1 + 0x1e1\n 18654: u64 [a2 + 432] = 0\n 18658: ra = 692, jump @19\n      : @715 [@dyn 346] (gas: 3)\n 18664: a0 = u64 [s1 + 0x98]\n 18668: a0 = i32 [a0]\n 18670: jump @717 if a0 >u 63\n      : @716 (gas: 7)\n 18674: a1 = u64 [s1 + 0x98]\n 18678: u32 [a1 + 0] = 0x40\n 18681: a0 = 0x1\n 18684: a2 = 0x24\n 18687: a1 = u64 [s1 + 0xb8]\n 18691: ecalli 7 // 'seal_return'\n 18693: jump @718\n      : @717 (gas: 5)\n 18695: a0 = 0x1\n 18698: a2 = 0x24\n 18701: a1 = u64 [s1 + 0xb8]\n 18705: ecalli 7 // 'seal_return'\n 18707: fallthrough\n      : @718 (gas: 6)\n 18708: a1 = 0x20280\n 18713: i32 a1 = a1 + 0\n 18715: a0 = 0x1\n 18718: a2 = 0\n 18720: ecalli 7 // 'seal_return'\n 18722: jump @825\n      : @719 (gas: 6)\n 18725: a1 = 0x20280\n 18730: i32 a1 = a1 + 0\n 18732: a0 = 0x1\n 18735: a2 = 0\n 18737: ecalli 7 // 'seal_return'\n 18739: jump @825\n      : @720 (gas: 12)\n 18742: a0 = s1 + 0x7ff\n 18746: a0 = a0 + 0x39\n 18749: u64 [a0 + 1944] = 0\n 18753: u64 [a0 + 1936] = 0\n 18757: u64 [a0 + 1928] = 0\n 18761: a2 = a0\n 18763: a0 = 0x4e487b7100000000\n 18773: a1 = s1 + 0x7ff\n 18777: a1 = a1 + 0x7c1\n 18781: u64 [a2 + 0x7a0] = a0\n 18785: a0 = 0\n 18787: ra = 694, jump @19\n      : @721 [@dyn 347] (gas: 11)\n 18793: a1 = s1 + 0x7ff\n 18797: a1 = a1 + 0x39\n 18800: u64 [a1 + 1920] = 0\n 18804: u64 [a1 + 1912] = 0\n 18808: u64 [a1 + 1896] = 0x22\n 18813: a2 = a1\n 18815: a0 = 0x4\n 18818: a1 = s1 + 0x7ff\n 18822: a1 = a1 + 0x7a1\n 18826: u64 [a2 + 1904] = 0\n 18830: ra = 696, jump @19\n      : @722 [@dyn 348] (gas: 2)\n 18836: a1 = i32 [0x2026c]\n 18841: jump @724 if a1 >u 63\n      : @723 (gas: 3)\n 18845: u32 [0x2026c] = 0x40\n 18851: a1 = 0x20280\n 18856: jump @776\n      : @724 (gas: 2)\n 18859: a1 = 0x20280\n 18864: jump @776\n      : @725 (gas: 6)\n 18867: a1 = 0x20280\n 18872: i32 a1 = a1 + 0\n 18874: a0 = 0x1\n 18877: a2 = 0\n 18879: ecalli 7 // 'seal_return'\n 18881: jump @825\n      : @726 (gas: 6)\n 18884: a1 = 0x20280\n 18889: i32 a1 = a1 + 0\n 18891: a0 = 0x1\n 18894: a2 = 0\n 18896: ecalli 7 // 'seal_return'\n 18898: jump @825\n      : @727 (gas: 9)\n 18901: u64 [a3 + 120] = 0\n 18904: u64 [a3 + 112] = 0\n 18907: a0 = 0x8dfc202b00000000\n 18917: u64 [a3 + 0x80] = a0\n 18921: a1 = s1 + 0x7ff\n 18925: a1 = a1 + 0xa1\n 18929: u64 [a3 + 104] = 0\n 18932: a0 = 0\n 18934: ra = 698, jump @19\n      : @728 [@dyn 349] (gas: 2)\n 18940: a1 = i32 [0x2026c]\n 18945: jump @730 if a1 >u 31\n      : @729 (gas: 3)\n 18949: u32 [0x2026c] = 0x20\n 18955: a1 = 0x20280\n 18960: jump @731\n      : @730 (gas: 2)\n 18962: a1 = 0x20280\n 18967: fallthrough\n      : @731 (gas: 5)\n 18968: i32 a1 = a1 + 0\n 18970: a0 = 0x1\n 18973: a2 = 0x4\n 18976: ecalli 7 // 'seal_return'\n 18978: fallthrough\n      : @732 (gas: 6)\n 18979: a1 = 0x20280\n 18984: i32 a1 = a1 + 0\n 18986: a0 = 0x1\n 18989: a2 = 0\n 18991: ecalli 7 // 'seal_return'\n 18993: jump @825\n      : @733 (gas: 6)\n 18996: a1 = 0x20280\n 19001: i32 a1 = a1 + 0\n 19003: a0 = 0x1\n 19006: a2 = 0\n 19008: ecalli 7 // 'seal_return'\n 19010: jump @825\n      : @734 (gas: 1)\n 19013: jump @781 if a0 != 3578229791\n      : @735 (gas: 11)\n 19021: a0 = s1 + 0x1838\n 19025: u64 [a0 + 736] = 0\n 19029: u64 [a0 + 728] = 0\n 19033: u64 [a0 + 720] = 0\n 19037: u64 [a0 + 712] = 0\n 19041: a0 = s1 + 0x2000\n 19045: i32 a0 = a0 + 0xfffffffffffffb00\n 19049: ra = 0x2bc\n 19053: ecalli 10 // 'value_transferred'\n 19055: t0 = 0x2be\n 19059: jump @1361\n      : @736 [@dyn 350] (gas: 1)\n 19062: t0 = 702, jump @1361\n      : @737 [@dyn 351] (gas: 1)\n 19068: t0 = 704, jump @1392\n      : @738 [@dyn 352] (gas: 1)\n 19074: jump @792 if a0 == 0\n      : @739 (gas: 6)\n 19078: a1 = 0x20280\n 19083: i32 a1 = a1 + 0\n 19085: a0 = 0x1\n 19088: a2 = 0\n 19090: ecalli 7 // 'seal_return'\n 19092: jump @825\n      : @740 (gas: 6)\n 19095: a1 = 0x20280\n 19100: i32 a1 = a1 + 0\n 19102: a0 = 0x1\n 19105: a2 = 0\n 19107: ecalli 7 // 'seal_return'\n 19109: jump @825\n      : @741 (gas: 6)\n 19112: a1 = 0x20280\n 19117: i32 a1 = a1 + 0\n 19119: a0 = 0x1\n 19122: a2 = 0\n 19124: ecalli 7 // 'seal_return'\n 19126: jump @825\n      : @742 (gas: 6)\n 19129: a1 = 0x20280\n 19134: i32 a1 = a1 + 0\n 19136: a0 = 0x1\n 19139: a2 = 0\n 19141: ecalli 7 // 'seal_return'\n 19143: jump @825\n      : @743 (gas: 6)\n 19146: a1 = 0x20280\n 19151: i32 a1 = a1 + 0\n 19153: a0 = 0x1\n 19156: a2 = 0\n 19158: ecalli 7 // 'seal_return'\n 19160: jump @825\n      : @744 (gas: 6)\n 19163: a1 = 0x20280\n 19168: i32 a1 = a1 + 0\n 19170: a0 = 0x1\n 19173: a2 = 0\n 19175: ecalli 7 // 'seal_return'\n 19177: jump @825\n      : @745 (gas: 6)\n 19180: a1 = 0x20280\n 19185: i32 a1 = a1 + 0\n 19187: a0 = 0x1\n 19190: a2 = 0\n 19192: ecalli 7 // 'seal_return'\n 19194: jump @825\n      : @746 (gas: 6)\n 19197: a1 = 0x20280\n 19202: i32 a1 = a1 + 0\n 19204: a0 = 0x1\n 19207: a2 = 0\n 19209: ecalli 7 // 'seal_return'\n 19211: jump @825\n      : @747 (gas: 6)\n 19214: a1 = 0x20280\n 19219: i32 a1 = a1 + 0\n 19221: a0 = 0x1\n 19224: a2 = 0\n 19226: ecalli 7 // 'seal_return'\n 19228: jump @825\n      : @748 (gas: 6)\n 19231: a1 = 0x20280\n 19236: i32 a1 = a1 + 0\n 19238: a0 = 0x1\n 19241: a2 = 0\n 19243: ecalli 7 // 'seal_return'\n 19245: jump @825\n      : @749 (gas: 6)\n 19248: a1 = 0x20280\n 19253: i32 a1 = a1 + 0\n 19255: a0 = 0x1\n 19258: a2 = 0\n 19260: ecalli 7 // 'seal_return'\n 19262: jump @825\n      : @750 (gas: 6)\n 19265: a1 = 0x20280\n 19270: i32 a1 = a1 + 0\n 19272: a0 = 0x1\n 19275: a2 = 0\n 19277: ecalli 7 // 'seal_return'\n 19279: jump @825\n      : @751 (gas: 6)\n 19282: a1 = 0x20280\n 19287: i32 a1 = a1 + 0\n 19289: a0 = 0x1\n 19292: a2 = 0\n 19294: ecalli 7 // 'seal_return'\n 19296: jump @825\n      : @752 (gas: 6)\n 19299: a1 = 0x20280\n 19304: i32 a1 = a1 + 0\n 19306: a0 = 0x1\n 19309: a2 = 0\n 19311: ecalli 7 // 'seal_return'\n 19313: jump @825\n      : @753 (gas: 6)\n 19316: a1 = 0x20280\n 19321: i32 a1 = a1 + 0\n 19323: a0 = 0x1\n 19326: a2 = 0\n 19328: ecalli 7 // 'seal_return'\n 19330: jump @825\n      : @754 (gas: 8)\n 19333: u64 [s1 + 752] = 0\n 19337: u64 [s1 + 744] = 0\n 19341: u64 [s1 + 736] = 0\n 19345: a0 = 0xe602df0500000000\n 19355: a1 = s1 + 0x2e0\n 19359: u64 [s1 + 0x2f8] = a0\n 19363: a0 = 0\n 19365: ra = 706, jump @19\n      : @755 [@dyn 353] (gas: 7)\n 19371: u64 [s1 + 728] = 0\n 19375: u64 [s1 + 720] = 0\n 19379: u64 [s1 + 712] = 0\n 19383: a0 = 0x4\n 19386: a1 = s1 + 0x2c0\n 19390: u64 [s1 + 704] = 0\n 19394: ra = 708, jump @19\n      : @756 [@dyn 354] (gas: 2)\n 19400: a1 = i32 [0x2026c]\n 19405: jump @758 if a1 >u 63\n      : @757 (gas: 3)\n 19409: u32 [0x2026c] = 0x40\n 19415: a1 = 0x20280\n 19420: jump @776\n      : @758 (gas: 2)\n 19423: a1 = 0x20280\n 19428: jump @776\n      : @759 (gas: 8)\n 19431: u64 [s1 + 816] = 0\n 19435: u64 [s1 + 808] = 0\n 19439: u64 [s1 + 800] = 0\n 19443: a0 = 0x94280d6200000000\n 19453: a1 = s1 + 0x320\n 19457: u64 [s1 + 0x338] = a0\n 19461: a0 = 0\n 19463: ra = 710, jump @19\n      : @760 [@dyn 355] (gas: 7)\n 19469: u64 [s1 + 792] = 0\n 19473: u64 [s1 + 784] = 0\n 19477: u64 [s1 + 776] = 0\n 19481: a0 = 0x4\n 19484: a1 = s1 + 0x300\n 19488: u64 [s1 + 768] = 0\n 19492: ra = 712, jump @19\n      : @761 [@dyn 356] (gas: 2)\n 19498: a1 = i32 [0x2026c]\n 19503: jump @763 if a1 >u 63\n      : @762 (gas: 3)\n 19507: u32 [0x2026c] = 0x40\n 19513: a1 = 0x20280\n 19518: jump @776\n      : @763 (gas: 2)\n 19521: a1 = 0x20280\n 19526: jump @776\n      : @764 (gas: 6)\n 19529: u64 [s1 + 336] = 0\n 19533: u64 [s1 + 328] = 0\n 19537: u64 [s1 + 320] = 0\n 19541: t0 = 0x2ca\n 19545: a0 = 0x4e487b7100000000\n 19555: fallthrough\n      : @765 [@dyn 357] (gas: 4)\n 19556: a1 = s1 + 0x140\n 19560: u64 [s1 + 0x158] = a0\n 19564: a0 = 0\n 19566: ra = 716, jump @19\n      : @766 [@dyn 358] (gas: 7)\n 19572: u64 [s1 + 312] = 0\n 19576: u64 [s1 + 304] = 0\n 19580: u64 [s1 + 288] = 0x41\n 19585: a0 = 0x4\n 19588: a1 = s1 + 0x120\n 19592: u64 [s1 + 296] = 0\n 19596: ra = 718, jump @19\n      : @767 [@dyn 359] (gas: 2)\n 19602: a1 = i32 [0x2026c]\n 19607: jump @769 if a1 >u 63\n      : @768 (gas: 3)\n 19611: u32 [0x2026c] = 0x40\n 19617: a1 = 0x20280\n 19622: jump @776\n      : @769 (gas: 2)\n 19625: a1 = 0x20280\n 19630: jump @776\n      : @770 (gas: 9)\n 19632: a0 = s1 + 0x7ff\n 19636: a0 = a0 + 0x39\n 19639: u64 [a0 + 2008] = 0\n 19643: u64 [a0 + 2000] = 0\n 19647: u64 [a0 + 1992] = 0\n 19651: a2 = a0\n 19653: t0 = 0x2d0\n 19657: a0 = 0x4e487b7100000000\n 19667: fallthrough\n      : @771 [@dyn 360] (gas: 4)\n 19668: a1 = s1 + 0x1000\n 19672: u64 [a2 + 0x7e0] = a0\n 19676: a0 = 0\n 19678: ra = 722, jump @19\n      : @772 [@dyn 361] (gas: 11)\n 19684: a1 = s1 + 0x7ff\n 19688: a1 = a1 + 0x39\n 19691: u64 [a1 + 1984] = 0\n 19695: u64 [a1 + 1976] = 0\n 19699: u64 [a1 + 1960] = 0x41\n 19704: a2 = a1\n 19706: a0 = 0x4\n 19709: a1 = s1 + 0x7ff\n 19713: a1 = a1 + 0x7e1\n 19717: u64 [a2 + 1968] = 0\n 19721: ra = 724, jump @19\n      : @773 [@dyn 362] (gas: 2)\n 19727: a1 = i32 [0x2026c]\n 19732: jump @775 if a1 >u 63\n      : @774 (gas: 3)\n 19736: u32 [0x2026c] = 0x40\n 19742: a1 = 0x20280\n 19747: jump @776\n      : @775 (gas: 2)\n 19749: a1 = 0x20280\n 19754: fallthrough\n      : @776 (gas: 5)\n 19755: i32 a1 = a1 + 0\n 19757: a0 = 0x1\n 19760: a2 = 0x24\n 19763: ecalli 7 // 'seal_return'\n 19765: fallthrough\n      : @777 (gas: 7)\n 19766: u64 [s1 + 856] = 0\n 19770: u64 [s1 + 848] = 0\n 19774: u64 [s1 + 840] = 0\n 19778: a1 = s1 + 0x340\n 19782: u64 [s1 + 832] = 0x1\n 19787: u64 [s1 + 0xb8] = a0\n 19791: ra = 726, jump @19\n      : @778 [@dyn 363] (gas: 3)\n 19797: a1 = 0x20\n 19800: a0 = u64 [s1 + 0xb8]\n 19804: ra = 728, jump @33\n      : @779 [@dyn 364] (gas: 6)\n 19810: i32 a1 = a0 + 0\n 19812: a2 = 0x20\n 19815: a0 = 0\n 19817: ra = 0x2da\n 19821: ecalli 7 // 'seal_return'\n 19823: jump @781\n      : @780 (gas: 5)\n 19825: a2 = 0x20\n 19828: a0 = 0\n 19830: ra = 0x2da\n 19834: ecalli 7 // 'seal_return'\n 19836: fallthrough\n      : @781 [@dyn 365] (gas: 1)\n 19837: jump @787 if a0 != 33540519\n      : @782 (gas: 11)\n 19844: a0 = s1 + 0x1038\n 19848: u64 [a0 + 1312] = 0\n 19852: u64 [a0 + 1304] = 0\n 19856: u64 [a0 + 1296] = 0\n 19860: u64 [a0 + 1288] = 0\n 19864: a0 = s1 + 0x1000\n 19868: i32 a0 = a0 + 0x540\n 19872: ra = 0x2dc\n 19876: ecalli 10 // 'value_transferred'\n 19878: t0 = 0x2de\n 19882: jump @1398\n      : @783 [@dyn 366] (gas: 1)\n 19885: t0 = 734, jump @1398\n      : @784 [@dyn 367] (gas: 1)\n 19891: t0 = 736, jump @1362\n      : @785 [@dyn 368] (gas: 1)\n 19897: jump @799 if a0 == 0\n      : @786 (gas: 6)\n 19901: a1 = 0x20280\n 19906: i32 a1 = a1 + 0\n 19908: a0 = 0x1\n 19911: a2 = 0\n 19913: ecalli 7 // 'seal_return'\n 19915: jump @825\n      : @787 (gas: 1)\n 19918: jump @794 if a0 != 791671133\n      : @788 (gas: 11)\n 19926: a0 = s1 + 0x1038\n 19930: u64 [a0 + 1696] = 0\n 19934: u64 [a0 + 1688] = 0\n 19938: u64 [a0 + 1680] = 0\n 19942: u64 [a0 + 1672] = 0\n 19946: a0 = s1 + 0x1000\n 19950: i32 a0 = a0 + 0x6c0\n 19954: ra = 0x2e2\n 19958: ecalli 10 // 'value_transferred'\n 19960: t0 = 0x2e4\n 19964: jump @1354\n      : @789 [@dyn 369] (gas: 1)\n 19967: t0 = 740, jump @1354\n      : @790 [@dyn 370] (gas: 8)\n 19973: a0 = u64 [a4 + 0x98]\n 19977: a1 = u64 [a4 + 0xa0]\n 19981: a2 = u64 [a4 + 0x90]\n 19985: a3 = u64 [a4 + 0x88]\n 19989: a1 = a1 | a2\n 19992: a0 = a0 | a3\n 19995: a0 = a0 | a1\n 19998: jump @810 if a0 == 0\n      : @791 (gas: 6)\n 20002: a1 = 0x20280\n 20007: i32 a1 = a1 + 0\n 20009: a0 = 0x1\n 20012: a2 = 0\n 20014: ecalli 7 // 'seal_return'\n 20016: jump @825\n      : @792 (gas: 3)\n 20019: a0 = u64 [s1 + 0xb8]\n 20023: a0 = i32 [a0]\n 20025: jump @801 if a0 >u 67\n      : @793 (gas: 6)\n 20030: a1 = 0x20280\n 20035: i32 a1 = a1 + 0\n 20037: a0 = 0x1\n 20040: a2 = 0\n 20042: ecalli 7 // 'seal_return'\n 20044: jump @825\n      : @794 (gas: 1)\n 20047: jump @806 if a0 != 911641278\n      : @795 (gas: 11)\n 20055: a0 = s1 + 0x1038\n 20059: u64 [a0 + 1792] = 0\n 20063: u64 [a0 + 1784] = 0\n 20067: u64 [a0 + 1776] = 0\n 20071: u64 [a0 + 1768] = 0\n 20075: a0 = s1 + 0x1000\n 20079: i32 a0 = a0 + 0x720\n 20083: ra = 0x2e6\n 20087: ecalli 10 // 'value_transferred'\n 20089: t0 = 0x2e8\n 20093: jump @1354\n      : @796 [@dyn 371] (gas: 1)\n 20096: t0 = 744, jump @1354\n      : @797 [@dyn 372] (gas: 8)\n 20102: a0 = u64 [a4 + 0xf8]\n 20106: a1 = u64 [a3 + 0x700]\n 20110: a2 = u64 [a4 + 0xf0]\n 20114: a3 = u64 [a4 + 0xe8]\n 20118: a1 = a1 | a2\n 20121: a0 = a0 | a3\n 20124: a0 = a0 | a1\n 20127: jump @815 if a0 == 0\n      : @798 (gas: 6)\n 20131: a1 = 0x20280\n 20136: i32 a1 = a1 + 0\n 20138: a0 = 0x1\n 20141: a2 = 0\n 20143: ecalli 7 // 'seal_return'\n 20145: jump @825\n      : @799 (gas: 3)\n 20148: a0 = u64 [s1 + 0xb8]\n 20152: a0 = i32 [a0]\n 20154: jump @812 if a0 >u 35\n      : @800 (gas: 6)\n 20159: a1 = 0x20280\n 20164: i32 a1 = a1 + 0\n 20166: a0 = 0x1\n 20169: a2 = 0\n 20171: ecalli 7 // 'seal_return'\n 20173: jump @825\n      : @801 (gas: 18)\n 20176: a0 = s1 + 0x2000\n 20180: i32 a0 = a0 + 0xfffffffffffffb20\n 20184: a1 = 0x4\n 20187: ecalli 1 // 'call_data_load'\n 20189: a0 = s1 + 0x1838\n 20193: a2 = a0 + 0x200\n 20197: a1 = u64 [a2 + 0xe8]\n 20201: u64 [s1 + 0xb8] = a1\n 20205: a1 = u64 [a2 + 0xf0]\n 20209: u64 [s1 + 0xb0] = a1\n 20213: a1 = u64 [a2 + 0xf8]\n 20217: u64 [s1 + 0xa8] = a1\n 20221: a0 = u64 [a0 + 0x300]\n 20225: u64 [s1 + 0xa0] = a0\n 20229: a0 = s1 + 0x1380\n 20233: ra = 0x2ea\n 20237: t0 = 0x3fc\n 20241: jump @1397\n      : @802 [@dyn 373] (gas: 22)\n 20244: a1 = s1 + 0x1038\n 20248: a2 = a1 + 0x300\n 20252: a0 = u64 [a2 + 0x48]\n 20255: u64 [s1 + 0x98] = a0\n 20259: a0 = u64 [a2 + 0x50]\n 20262: u64 [s1 + 0x90] = a0\n 20266: a0 = u64 [a2 + 0x58]\n 20269: u64 [s1 + 0x88] = a0\n 20273: a0 = u64 [a2 + 0x60]\n 20276: u64 [s1 + 0x80] = a0\n 20280: a0 = u64 [s1 + 0xa0]\n 20284: u64 [a2 + 0x20] = a0\n 20287: a0 = u64 [s1 + 0xa8]\n 20291: u64 [a2 + 0x18] = a0\n 20294: a0 = u64 [s1 + 0xb0]\n 20298: u64 [a2 + 0x10] = a0\n 20301: a3 = a1\n 20303: a0 = s1 + 0x1360\n 20307: a1 = s1 + 0x1340\n 20311: a2 = u64 [s1 + 0xb8]\n 20315: u64 [a3 + 0x308] = a2\n 20319: ra = 748, jump @1024\n      : @803 [@dyn 374] (gas: 13)\n 20325: a4 = s1 + 0x1038\n 20329: a5 = a4 + 0x300\n 20333: a1 = u64 [a5 + 0x28]\n 20336: a0 = u64 [a5 + 0x30]\n 20339: a2 = u64 [a5 + 0x38]\n 20342: a3 = u64 [a5 + 0x40]\n 20345: u64 [a5] = a3\n 20347: a3 = a4 + 0x200\n 20351: u64 [a3 + 0xf8] = a2\n 20355: u64 [a3 + 0xf0] = a0\n 20359: a0 = s1 + 0x1320\n 20363: u64 [a3 + 0xe8] = a1\n 20367: ra = 750, jump @1160\n      : @804 [@dyn 375] (gas: 25)\n 20373: a0 = s1 + 0x1038\n 20377: a1 = u64 [s1 + 0x80]\n 20381: a2 = a0 + 0x200\n 20385: u64 [a2 + 0xa0] = a1\n 20389: a1 = u64 [s1 + 0x88]\n 20393: u64 [a2 + 0x98] = a1\n 20397: a1 = u64 [s1 + 0x90]\n 20401: u64 [a2 + 0x90] = a1\n 20405: a1 = u64 [s1 + 0x98]\n 20409: u64 [a2 + 0x88] = a1\n 20413: a1 = u64 [s1 + 0xa0]\n 20417: u64 [a2 + 0xc0] = a1\n 20421: a1 = u64 [s1 + 0xa8]\n 20425: u64 [a2 + 0xb8] = a1\n 20429: a1 = u64 [s1 + 0xb0]\n 20433: u64 [a2 + 0xb0] = a1\n 20437: a4 = a0\n 20439: a0 = s1 + 0x1300\n 20443: a1 = s1 + 0x12e0\n 20447: a2 = s1 + 0x12c0\n 20451: a3 = u64 [s1 + 0xb8]\n 20455: u64 [a4 + 0x2a8] = a3\n 20459: ra = 0x2f0\n 20463: t0 = 0x51a\n 20467: jump @1381\n      : @805 [@dyn 376] (gas: 2)\n 20470: a1 = 0x20280\n 20475: jump @576\n      : @806 (gas: 1)\n 20478: jump @817 if a0 != 1117154408\n      : @807 (gas: 9)\n 20486: a0 = s1 + 0x1838\n 20490: u64 [a0 + 96] = 0\n 20493: u64 [a0 + 88] = 0\n 20496: u64 [a0 + 80] = 0\n 20499: u64 [a0 + 72] = 0\n 20502: a0 = s1 + 0x2000\n 20506: i32 a0 = a0 + 0xfffffffffffff880\n 20510: ecalli 10 // 'value_transferred'\n 20512: fallthrough\n      : @808 (gas: 9)\n 20513: a3 = s1 + 0x1838\n 20517: a0 = u64 [a3 + 0x58]\n 20520: a1 = u64 [a3 + 0x60]\n 20523: a2 = u64 [a3 + 0x50]\n 20526: a3 = u64 [a3 + 0x48]\n 20529: a1 = a1 | a2\n 20532: a0 = a0 | a3\n 20535: a0 = a0 | a1\n 20538: jump @825 if a0 == 0\n      : @809 (gas: 6)\n 20542: a1 = 0x20280\n 20547: i32 a1 = a1 + 0\n 20549: a0 = 0x1\n 20552: a2 = 0\n 20554: ecalli 7 // 'seal_return'\n 20556: jump @825\n      : @810 (gas: 3)\n 20559: a0 = u64 [s1 + 0xb8]\n 20563: a0 = i32 [a0]\n 20565: jump @827 if a0 >u 67\n      : @811 (gas: 6)\n 20570: a1 = 0x20280\n 20575: i32 a1 = a1 + 0\n 20577: a0 = 0x1\n 20580: a2 = 0\n 20582: ecalli 7 // 'seal_return'\n 20584: jump @825\n      : @812 (gas: 7)\n 20587: a0 = s1 + 0x1000\n 20591: i32 a0 = a0 + 0x560\n 20595: a1 = 0x4\n 20598: ecalli 1 // 'call_data_load'\n 20600: t0 = 0x2f2\n 20604: a1 = s1 + 0x1038\n 20608: fallthrough\n      : @813 [@dyn 377] (gas: 11)\n 20609: a4 = a1 + 0x500\n 20613: a0 = u64 [a4 + 0x40]\n 20616: a2 = u64 [a4 + 0x38]\n 20619: a3 = u64 [a4 + 0x28]\n 20622: a1 = u64 [a4 + 0x30]\n 20625: a4 = a0 << 0x20\n 20628: a4 = a4 >> 0x20\n 20631: a2 = a2 | a3\n 20634: a4 = a4 | a1\n 20637: a4 = a4 | a2\n 20640: jump @832 if a4 == 0\n      : @814 (gas: 6)\n 20644: a1 = 0x20280\n 20649: i32 a1 = a1 + 0\n 20651: a0 = 0x1\n 20654: a2 = 0\n 20656: ecalli 7 // 'seal_return'\n 20658: jump @825\n      : @815 (gas: 4)\n 20661: a0 = u64 [s1 + 0xb8]\n 20665: a0 = i32 [a0]\n 20667: a1 = 0x43\n 20670: jump @836 if a1 <u a0\n      : @816 (gas: 6)\n 20674: a1 = 0x20280\n 20679: i32 a1 = a1 + 0\n 20681: a0 = 0x1\n 20684: a2 = 0\n 20686: ecalli 7 // 'seal_return'\n 20688: jump @825\n      : @817 (gas: 1)\n 20690: jump @823 if a0 != 2043438992\n      : @818 (gas: 11)\n 20697: a0 = s1 + 0x1838\n 20701: u64 [a0 + 288] = 0\n 20705: u64 [a0 + 280] = 0\n 20709: u64 [a0 + 272] = 0\n 20713: u64 [a0 + 264] = 0\n 20717: a0 = s1 + 0x2000\n 20721: i32 a0 = a0 + 0xfffffffffffff940\n 20725: ra = 0x2f4\n 20729: ecalli 10 // 'value_transferred'\n 20731: t0 = 0x2f6\n 20735: jump @1376\n      : @819 [@dyn 378] (gas: 1)\n 20738: t0 = 758, jump @1376\n      : @820 [@dyn 379] (gas: 1)\n 20744: t0 = 760, jump @1362\n      : @821 [@dyn 380] (gas: 1)\n 20750: jump @841 if a0 == 0\n      : @822 (gas: 6)\n 20754: a1 = 0x20280\n 20759: i32 a1 = a1 + 0\n 20761: a0 = 0x1\n 20764: a2 = 0\n 20766: ecalli 7 // 'seal_return'\n 20768: jump @825\n      : @823 (gas: 6)\n 20770: a1 = 0x20280\n 20775: i32 a1 = a1 + 0\n 20777: a0 = 0x1\n 20780: a2 = 0\n 20782: ecalli 7 // 'seal_return'\n 20784: jump @825\n      : @824 (gas: 5)\n 20786: i32 a1 = a1 + 0\n 20788: a0 = 0x1\n 20791: a2 = 0\n 20793: ecalli 7 // 'seal_return'\n 20795: fallthrough\n      : @825 (gas: 3)\n 20796: a0 = u64 [s1 + 0xb8]\n 20800: a0 = i32 [a0]\n 20802: jump @843 if a0 >u 35\n      : @826 (gas: 2)\n 20807: a1 = 0x20280\n 20812: jump @824\n      : @827 (gas: 18)\n 20814: a0 = s1 + 0x1000\n 20818: i32 a0 = a0 + 0x6e0\n 20822: a1 = 0x4\n 20825: ecalli 1 // 'call_data_load'\n 20827: a0 = s1 + 0x1038\n 20831: a2 = a0 + 0x600\n 20835: a1 = u64 [a2 + 0xa8]\n 20839: u64 [s1 + 0xb8] = a1\n 20843: a1 = u64 [a2 + 0xb0]\n 20847: u64 [s1 + 0xb0] = a1\n 20851: a1 = u64 [a2 + 0xb8]\n 20855: u64 [s1 + 0xa8] = a1\n 20859: a0 = u64 [a2 + 0xc0]\n 20863: u64 [s1 + 0xa0] = a0\n 20867: a0 = s1 + 0x7a0\n 20871: ra = 0x2fa\n 20875: t0 = 0x3fc\n 20879: jump @1397\n      : @828 [@dyn 381] (gas: 19)\n 20882: a0 = u64 [s1 + 0x7a0]\n 20886: u64 [s1 + 0x98] = a0\n 20890: a0 = u64 [s1 + 0x7a8]\n 20894: u64 [s1 + 0x90] = a0\n 20898: a0 = u64 [s1 + 0x7b0]\n 20902: u64 [s1 + 0x88] = a0\n 20906: a0 = u64 [s1 + 0x7b8]\n 20910: u64 [s1 + 0x80] = a0\n 20914: a0 = u64 [s1 + 0xa0]\n 20918: u64 [s1 + 0x778] = a0\n 20922: a0 = u64 [s1 + 0xa8]\n 20926: u64 [s1 + 0x770] = a0\n 20930: a0 = u64 [s1 + 0xb0]\n 20934: u64 [s1 + 0x768] = a0\n 20938: a0 = s1 + 0x780\n 20942: a1 = s1 + 0x760\n 20946: a2 = u64 [s1 + 0xb8]\n 20950: u64 [s1 + 0x760] = a2\n 20954: ra = 764, jump @1024\n      : @829 [@dyn 382] (gas: 10)\n 20960: a1 = u64 [s1 + 0x780]\n 20964: a0 = u64 [s1 + 0x788]\n 20968: a2 = u64 [s1 + 0x790]\n 20972: a3 = u64 [s1 + 0x798]\n 20976: u64 [s1 + 0x758] = a3\n 20980: u64 [s1 + 0x750] = a2\n 20984: u64 [s1 + 0x748] = a0\n 20988: a0 = s1 + 0x740\n 20992: u64 [s1 + 0x740] = a1\n 20996: ra = 766, jump @1160\n      : @830 [@dyn 383] (gas: 24)\n 21002: a0 = u64 [s1 + 0x80]\n 21006: a1 = s1 + 0x600\n 21010: u64 [a1 + 0xf8] = a0\n 21014: a0 = u64 [s1 + 0x88]\n 21018: u64 [a1 + 0xf0] = a0\n 21022: a0 = u64 [s1 + 0x90]\n 21026: u64 [a1 + 0xe8] = a0\n 21030: a0 = u64 [s1 + 0x98]\n 21034: u64 [a1 + 0xe0] = a0\n 21038: a0 = u64 [s1 + 0xa0]\n 21042: a4 = s1 + 0x700\n 21046: u64 [a4 + 0x18] = a0\n 21049: a0 = u64 [s1 + 0xa8]\n 21053: u64 [a4 + 0x10] = a0\n 21056: a0 = u64 [s1 + 0xb0]\n 21060: u64 [a4 + 0x8] = a0\n 21063: a0 = s1 + 0x720\n 21067: a1 = s1 + 0x700\n 21071: a2 = s1 + 0x6e0\n 21075: a3 = u64 [s1 + 0xb8]\n 21079: u64 [a4] = a3\n 21081: ra = 0x300\n 21085: t0 = 0x4d8\n 21089: jump @1381\n      : @831 [@dyn 384] (gas: 2)\n 21092: a1 = 0x20280\n 21097: jump @576\n      : @832 (gas: 18)\n 21100: a3 = 0x7965db0b00000000\n 21110: a3 = a3 ^ a0\n 21113: a3 = a3 | a1\n 21116: a3 = a3 | a2\n 21119: a3 = a3 <u 0x1\n 21122: a4 = 0x1ffc9a700000000\n 21132: a0 = a0 ^ a4\n 21135: a0 = a0 | a1\n 21138: a0 = a0 | a2\n 21141: a0 = a0 <u 0x1\n 21144: a0 = a0 | a3\n 21147: u64 [s1 + 216] = 0\n 21151: u64 [s1 + 208] = 0\n 21155: u64 [s1 + 0xc0] = a0\n 21159: a0 = 0x80\n 21163: a1 = s1 + 0xc0\n 21167: u64 [s1 + 200] = 0\n 21171: ra = 770, jump @19\n      : @833 [@dyn 385] (gas: 2)\n 21177: a1 = i32 [0x2026c]\n 21182: jump @835 if a1 >u 159\n      : @834 (gas: 4)\n 21187: u32 [0x2026c] = 0xa0\n 21194: a0 = 0x20280\n 21199: i32 a1 = a0 + 0x80\n 21203: jump @780\n      : @835 (gas: 3)\n 21206: a0 = 0x20280\n 21211: i32 a1 = a0 + 0x80\n 21215: jump @780\n      : @836 (gas: 5)\n 21218: a0 = s1 + 0x7ff\n 21222: a0 = a0 + 0x81\n 21226: ra = 0x304\n 21230: t0 = 0x3fc\n 21234: jump @1397\n      : @837 [@dyn 386] (gas: 15)\n 21237: a0 = s1 + 0x7ff\n 21241: a0 = a0 + 0x39\n 21244: a1 = u64 [a0 + 0x60]\n 21247: u64 [s1 + 0xa0] = a1\n 21251: a1 = u64 [a0 + 0x58]\n 21254: u64 [s1 + 0xa8] = a1\n 21258: a1 = u64 [a0 + 0x50]\n 21261: u64 [s1 + 0xb0] = a1\n 21265: a0 = u64 [a0 + 0x48]\n 21268: u64 [s1 + 0xb8] = a0\n 21272: a0 = 0x30280\n 21277: u64 [s1 + 0x98] = a0\n 21281: i32 a0 = a0 + 0\n 21283: ecalli 3 // 'caller'\n 21285: fallthrough\n      : @838 (gas: 25)\n 21286: a2 = u64 [s1 + 0x98]\n 21290: a0 = u64 [a2 + 0x8]\n 21293: a1 = u64 [a2]\n 21295: a2 = i32 [a2 + 0x10]\n 21298: a0 = reverse a0\n 21300: a3 = a0 >> 0x20\n 21303: a1 = reverse a1\n 21305: a4 = a1 << 0x20\n 21308: a3 = a3 | a4\n 21311: a0 = a0 << 0x20\n 21314: a2 = reverse a2\n 21316: a2 = a2 >> 0x20\n 21319: a0 = a0 | a2\n 21322: a1 = a1 >> 0x20\n 21325: a2 = u64 [s1 + 0xa8]\n 21329: a2 = a2 << 0x20\n 21332: a2 = a2 >> 0x20\n 21335: a1 = a1 ^ a2\n 21338: a2 = u64 [s1 + 0xb8]\n 21342: a0 = a0 ^ a2\n 21345: a0 = a0 | a1\n 21348: a1 = u64 [s1 + 0xb0]\n 21352: a1 = a1 ^ a3\n 21355: a0 = a0 | a1\n 21358: jump @847 if a0 != 0\n      : @839 (gas: 39)\n 21362: a0 = s1 + 0x1000\n 21366: i32 a0 = a0 + 0x740\n 21370: a1 = 0x4\n 21373: ecalli 1 // 'call_data_load'\n 21375: a2 = s1 + 0x1038\n 21379: a4 = a2 + 0x700\n 21383: a3 = u64 [a4 + 0x8]\n 21386: a0 = u64 [a4 + 0x10]\n 21389: a1 = u64 [a4 + 0x18]\n 21392: a2 = u64 [a4 + 0x20]\n 21395: a4 = u64 [s1 + 0xa0]\n 21399: a5 = s1 + 0x1000\n 21403: u64 [a5 + 0xfffffffffffff818] = a4\n 21407: a4 = u64 [s1 + 0xa8]\n 21411: a5 = s1 + 0x1000\n 21415: u64 [a5 + 0xfffffffffffff810] = a4\n 21419: a4 = u64 [s1 + 0xb0]\n 21423: a5 = s1 + 0x1000\n 21427: u64 [a5 + 0xfffffffffffff808] = a4\n 21431: a4 = u64 [s1 + 0xb8]\n 21435: a5 = s1 + 0x1000\n 21439: u64 [a5 + 0xfffffffffffff800] = a4\n 21443: a4 = s1 + 0x7ff\n 21447: a4 = a4 + 0x39\n 21450: u64 [a4] = a2\n 21452: u64 [a4 + 0xfffffffffffffff8] = a1\n 21455: a1 = s1 + 0x1000\n 21459: u64 [a1 + 0xfffffffffffff828] = a0\n 21463: a0 = s1 + 0x7ff\n 21467: a0 = a0 + 0x41\n 21470: a1 = s1 + 0x7ff\n 21474: a1 = a1 + 0x21\n 21477: a2 = s1 + 0x7ff\n 21481: a2 = a2 + 0x1\n 21484: a4 = s1 + 0x1000\n 21488: u64 [a4 + 0xfffffffffffff820] = a3\n 21492: ra = 0x306\n 21496: t0 = 0x51a\n 21500: jump @1381\n      : @840 [@dyn 387] (gas: 2)\n 21503: a1 = 0x20280\n 21508: jump @576\n      : @841 (gas: 4)\n 21511: a0 = u64 [s1 + 0xb8]\n 21515: a0 = i32 [a0]\n 21517: a1 = 0x43\n 21520: jump @851 if a1 <u a0\n      : @842 (gas: 2)\n 21524: a1 = 0x20280\n 21529: jump @824\n      : @843 (gas: 21)\n 21532: a0 = s1 + 0x2000\n 21536: i32 a0 = a0 + 0xfffffffffffff8a0\n 21540: a1 = 0x4\n 21543: ecalli 1 // 'call_data_load'\n 21545: a0 = s1 + 0x1838\n 21549: a1 = u64 [a0 + 0x68]\n 21552: u64 [s1 + 0xb8] = a1\n 21556: a1 = u64 [a0 + 0x70]\n 21559: u64 [s1 + 0xb0] = a1\n 21563: a1 = u64 [a0 + 0x78]\n 21566: u64 [s1 + 0xa8] = a1\n 21570: a0 = u64 [a0 + 0x80]\n 21574: u64 [s1 + 0xa0] = a0\n 21578: a0 = 0x30280\n 21583: u64 [s1 + 0x98] = a0\n 21587: i32 a0 = a0 + 0\n 21589: ra = 0x308\n 21593: ecalli 3 // 'caller'\n 21595: a2 = u64 [s1 + 0x98]\n 21599: t0 = 0x30a\n 21603: jump @1321\n      : @844 [@dyn 388] (gas: 2)\n 21606: a2 = u64 [s1 + 0x98]\n 21610: t0 = 778, jump @1321\n      : @845 [@dyn 389] (gas: 18)\n 21616: a4 = u64 [s1 + 0xa0]\n 21620: a5 = a2 + 0x300\n 21624: u64 [a5 + 0xe0] = a4\n 21628: a4 = u64 [s1 + 0xa8]\n 21632: u64 [a5 + 0xd8] = a4\n 21636: a4 = u64 [s1 + 0xb0]\n 21640: u64 [a5 + 0xd0] = a4\n 21644: a4 = u64 [s1 + 0xb8]\n 21648: u64 [a5 + 0xc8] = a4\n 21652: u64 [a2 + 1024] = 0\n 21656: u64 [a5 + 0xf8] = a1\n 21660: u64 [a5 + 0xf0] = a0\n 21664: a0 = s1 + 0x7ff\n 21668: a0 = a0 + 0x421\n 21672: a1 = s1 + 0x7ff\n 21676: a1 = a1 + 0x401\n 21680: u64 [a5 + 0xe8] = a3\n 21684: ra = 780, jump @1273\n      : @846 [@dyn 390] (gas: 2)\n 21690: a1 = 0x20280\n 21695: jump @576\n      : @847 (gas: 11)\n 21698: a2 = s1 + 0x7ff\n 21702: a2 = a2 + 0x39\n 21705: u64 [a2 + 56] = 0\n 21708: u64 [a2 + 48] = 0\n 21711: a0 = 0x6697b23200000000\n 21721: u64 [a2 + 0x40] = a0\n 21724: a1 = s1 + 0x7ff\n 21728: a1 = a1 + 0x61\n 21731: u64 [a2 + 40] = 0\n 21734: a0 = 0\n 21736: ra = 782, jump @19\n      : @848 [@dyn 391] (gas: 2)\n 21742: a1 = i32 [0x2026c]\n 21747: jump @850 if a1 >u 31\n      : @849 (gas: 3)\n 21751: u32 [0x2026c] = 0x20\n 21757: a1 = 0x20280\n 21762: jump @731\n      : @850 (gas: 2)\n 21765: a1 = 0x20280\n 21770: jump @731\n      : @851 (gas: 5)\n 21773: a0 = s1 + 0x7ff\n 21777: a0 = a0 + 0x601\n 21781: ra = 0x310\n 21785: t0 = 0x3f2\n 21789: jump @1397\n      : @852 [@dyn 392] (gas: 32)\n 21792: a1 = s1 + 0x7ff\n 21796: a1 = a1 + 0x39\n 21799: a2 = a1 + 0x500\n 21803: a0 = u64 [a2 + 0xc8]\n 21807: u64 [s1 + 0xb8] = a0\n 21811: a0 = u64 [a2 + 0xd0]\n 21815: u64 [s1 + 0xb0] = a0\n 21819: a0 = u64 [a2 + 0xd8]\n 21823: u64 [s1 + 0xa8] = a0\n 21827: a0 = u64 [a2 + 0xe0]\n 21831: u64 [s1 + 0xa0] = a0\n 21835: a0 = s1 + 0x2000\n 21839: i32 a0 = a0 + 0xfffffffffffff960\n 21843: a1 = 0x24\n 21846: ecalli 1 // 'call_data_load'\n 21848: a0 = s1 + 0x1838\n 21852: a2 = a0 + 0x100\n 21856: a1 = u64 [a2 + 0x28]\n 21859: u64 [s1 + 0x98] = a1\n 21863: a1 = u64 [a2 + 0x30]\n 21866: u64 [s1 + 0x90] = a1\n 21870: a1 = u64 [a2 + 0x38]\n 21873: u64 [s1 + 0x88] = a1\n 21877: a0 = u64 [a2 + 0x40]\n 21880: u64 [s1 + 0x80] = a0\n 21884: a0 = 0x30280\n 21889: u64 [s1 + 0x78] = a0\n 21892: i32 a0 = a0 + 0\n 21894: ra = 0x312\n 21898: ecalli 3 // 'caller'\n 21900: t0 = 0x314\n 21904: jump @1353\n      : @853 [@dyn 393] (gas: 1)\n 21907: t0 = 788, jump @1353\n      : @854 [@dyn 394] (gas: 31)\n 21913: a3 = s1 + 0x7ff\n 21917: a3 = a3 + 0x39\n 21920: a4 = u64 [s1 + 0x80]\n 21924: a5 = a3 + 0x500\n 21928: u64 [a5 + 0x80] = a4\n 21932: a4 = u64 [s1 + 0x88]\n 21936: u64 [a5 + 0x78] = a4\n 21939: a4 = u64 [s1 + 0x90]\n 21943: u64 [a5 + 0x70] = a4\n 21946: a4 = u64 [s1 + 0x98]\n 21950: u64 [a5 + 0x68] = a4\n 21953: u64 [a3 + 1440] = 0\n 21957: a4 = u64 [s1 + 0xa0]\n 21961: u64 [a5 + 0xc0] = a4\n 21965: a4 = u64 [s1 + 0xa8]\n 21969: u64 [a5 + 0xb8] = a4\n 21973: a4 = u64 [s1 + 0xb0]\n 21977: u64 [a5 + 0xb0] = a4\n 21981: u64 [a5 + 0x98] = a2\n 21985: u64 [a5 + 0x90] = a0\n 21989: u64 [a5 + 0x88] = a1\n 21993: a4 = a3\n 21995: a0 = s1 + 0x7ff\n 21999: a0 = a0 + 0x5e1\n 22003: a1 = s1 + 0x7ff\n 22007: a1 = a1 + 0x5c1\n 22011: a2 = s1 + 0x7ff\n 22015: a2 = a2 + 0x5a1\n 22019: a3 = u64 [s1 + 0xb8]\n 22023: u64 [a4 + 0x5a8] = a3\n 22027: ra = 790, jump @1032\n      : @855 [@dyn 395] (gas: 25)\n 22033: a0 = u64 [s1 + 0x80]\n 22037: a1 = s1 + 0x7ff\n 22041: a1 = a1 + 0x39\n 22044: a2 = a1 + 0x500\n 22048: u64 [a2 + 0x40] = a0\n 22051: a0 = u64 [s1 + 0x88]\n 22055: u64 [a2 + 0x38] = a0\n 22058: a0 = u64 [s1 + 0x90]\n 22062: u64 [a2 + 0x30] = a0\n 22065: a0 = u64 [s1 + 0x98]\n 22069: u64 [a2 + 0x28] = a0\n 22072: a0 = u64 [s1 + 0xa0]\n 22076: u64 [a2 + 0x60] = a0\n 22079: a0 = u64 [s1 + 0xa8]\n 22083: u64 [a2 + 0x58] = a0\n 22086: a0 = u64 [s1 + 0xb0]\n 22090: u64 [a2 + 0x50] = a0\n 22093: a3 = a1\n 22095: a0 = s1 + 0x7ff\n 22099: a0 = a0 + 0x581\n 22103: a1 = s1 + 0x7ff\n 22107: a1 = a1 + 0x561\n 22111: a2 = u64 [s1 + 0xb8]\n 22115: u64 [a3 + 0x548] = a2\n 22119: ra = 792, jump @1273\n      : @856 [@dyn 396] (gas: 2)\n 22125: a1 = 0x20280\n 22130: jump @576\n      : @857 (gas: 17)\n 22133: sp = sp + 0xffffffffffffff30\n 22137: u64 [sp + 0xc8] = ra\n 22141: u64 [sp + 0xc0] = s0\n 22145: u64 [sp + 0xb8] = s1\n 22149: s0 = sp + 0xd0\n 22153: sp = sp & 0xfffffffffffffff0\n 22156: a2 = u64 [a1 + 0x18]\n 22159: u64 [sp + 0x10] = a2\n 22162: a2 = u64 [a1 + 0x10]\n 22165: u64 [sp + 0x8] = a2\n 22168: a2 = u64 [a1 + 0x8]\n 22171: u64 [sp] = a2\n 22173: s1 = u64 [a1]\n 22175: u64 [sp + 0x28] = a0\n 22178: a0 = sp + 0x90\n 22182: a1 = 0x40\n 22185: ra = 794, jump @17\n      : @858 [@dyn 397] (gas: 39)\n 22191: a1 = u64 [sp + 0x98]\n 22195: a2 = u64 [sp + 0x90]\n 22199: a0 = s1 + 0x1f\n 22202: ra = a0 <u s1\n 22205: a3 = u64 [sp]\n 22207: a4 = a3 + ra\n 22210: a0 = a0 & 0xffffffffffffffe0\n 22213: t1 = a1 + a4\n 22216: t0 = a2 + a0\n 22219: u64 [sp + 0x20] = a2\n 22222: a5 = t0 <u a2\n 22225: t1 = t1 + a5\n 22228: s1 = t1 ^ a1\n 22231: u64 [sp + 0x18] = a1\n 22234: a2 = t1 <u a1\n 22237: a2 = a5 if s1 == 0\n 22240: t2 = u64 [sp + 0xa8]\n 22244: a4 = a4 <u a3\n 22247: s1 = u64 [sp + 0xa0]\n 22251: a4 = ra if ra == 0\n 22254: a0 = u64 [sp + 0x8]\n 22257: a4 = a4 + a0\n 22260: a5 = a4 <u a0\n 22263: a4 = a4 + s1\n 22266: a3 = a4 + a2\n 22269: a0 = u64 [sp + 0x10]\n 22272: a0 = a0 + t2\n 22275: a0 = a0 + a5\n 22278: a5 = a3 <u a4\n 22281: a4 = a4 <u s1\n 22284: a0 = a0 + a4\n 22287: a4 = a0 + a5\n 22290: a0 = a4 >u 0\n 22292: a5 = a3 >u 0\n 22294: a5 = a0 if a4 != 0\n 22297: a0 = a3 | a4\n 22300: a1 = t1 >u 0\n 22302: a1 = a5 if a0 != 0\n 22305: jump @862 if a1 != 0\n      : @859 (gas: 8)\n 22308: a0 = a3 <u s1\n 22311: a1 = a4 ^ t2\n 22314: a5 = a4 <u t2\n 22317: a5 = a0 if a1 == 0\n 22320: a0 = a3 ^ s1\n 22323: a0 = a0 | a1\n 22326: a2 = a5 if a0 != 0\n 22329: jump @862 if a2 != 0\n      : @860 (gas: 8)\n 22332: u64 [sp + 0x70] = t0\n 22335: u64 [sp + 0x78] = t1\n 22338: u64 [sp + 0x80] = a3\n 22342: a0 = 0x40\n 22345: a1 = sp + 0x70\n 22348: u64 [sp + 0x88] = a4\n 22352: u64 [sp + 0x10] = t2\n 22355: ra = 796, jump @19\n      : @861 [@dyn 398] (gas: 14)\n 22361: a0 = u64 [sp + 0x28]\n 22364: a1 = u64 [sp + 0x10]\n 22367: u64 [a0 + 0x18] = a1\n 22370: u64 [a0 + 0x10] = s1\n 22373: a1 = u64 [sp + 0x18]\n 22376: u64 [a0 + 0x8] = a1\n 22379: a1 = u64 [sp + 0x20]\n 22382: u64 [a0] = a1\n 22384: sp = s0 + 0xffffffffffffff30\n 22388: ra = u64 [sp + 0xc8]\n 22392: s0 = u64 [sp + 0xc0]\n 22396: s1 = u64 [sp + 0xb8]\n 22400: sp = sp + 0xd0\n 22404: ret\n      : @862 (gas: 6)\n 22406: u64 [sp + 96] = 0\n 22409: u64 [sp + 88] = 0\n 22412: u64 [sp + 80] = 0\n 22415: t0 = 0x31e\n 22419: a0 = 0x4e487b7100000000\n 22429: fallthrough\n      : @863 [@dyn 399] (gas: 4)\n 22430: a1 = sp + 0x50\n 22433: u64 [sp + 0x68] = a0\n 22436: a0 = 0\n 22438: ra = 800, jump @19\n      : @864 [@dyn 400] (gas: 7)\n 22444: u64 [sp + 72] = 0\n 22447: u64 [sp + 64] = 0\n 22450: u64 [sp + 48] = 0x41\n 22454: a0 = 0x4\n 22457: a1 = sp + 0x30\n 22460: u64 [sp + 56] = 0\n 22463: ra = 802, jump @19\n      : @865 [@dyn 401] (gas: 2)\n 22469: a1 = i32 [0x2026c]\n 22474: jump @867 if a1 >u 63\n      : @866 (gas: 2)\n 22478: u32 [0x2026c] = 0x40\n 22484: fallthrough\n      : @867 (gas: 7)\n 22485: a1 = 0x20280\n 22490: i32 a1 = a1 + 0\n 22492: a0 = 0x1\n 22495: a2 = 0x24\n 22498: ra = 0x324\n 22502: ecalli 7 // 'seal_return'\n 22504: fallthrough\n      : @868 [@dyn 402] (gas: 22)\n 22505: sp = sp + 0xfffffffffffffda0\n 22509: a2 = sp + 0x200\n 22513: u64 [a2 + 0x58] = ra\n 22516: u64 [a2 + 0x50] = s0\n 22519: u64 [a2 + 0x48] = s1\n 22522: s0 = sp + 0x260\n 22526: sp = sp & 0xffffffffffffffe0\n 22529: s1 = sp\n 22531: a2 = u64 [a1 + 0x10]\n 22534: u64 [s1 + 0x30] = a2\n 22537: a2 = u64 [a1 + 0x8]\n 22540: u64 [s1 + 0x50] = a2\n 22543: a1 = u64 [a1]\n 22545: u64 [s1 + 0x58] = a1\n 22548: u64 [s1 + 0x38] = a0\n 22551: u64 [s1 + 536] = 0\n 22555: u64 [s1 + 528] = 0\n 22559: u64 [s1 + 520] = 0\n 22563: a1 = s1 + 0x200\n 22567: u64 [s1 + 512] = 0\n 22571: a0 = 0\n 22573: ra = 806, jump @19\n      : @869 [@dyn 403] (gas: 7)\n 22579: u64 [s1 + 504] = 0\n 22583: u64 [s1 + 496] = 0\n 22587: u64 [s1 + 480] = 0x6\n 22592: a0 = 0x20\n 22595: a1 = s1 + 0x1e0\n 22599: u64 [s1 + 488] = 0\n 22603: ra = 808, jump @19\n      : @870 [@dyn 404] (gas: 3)\n 22609: a1 = 0x2026c\n 22614: a0 = i32 [0x2026c]\n 22619: jump @872 if a0 >u 63\n      : @871 (gas: 2)\n 22623: u32 [0x2026c] = 0x40\n 22629: fallthrough\n      : @872 (gas: 14)\n 22630: a0 = sp + 0xffffffffffffffe0\n 22633: a2 = a0 & 0xffffffffffffffe0\n 22636: u64 [s1 + 0x28] = a2\n 22639: sp = a2\n 22641: a0 = 0x20280\n 22646: i32 a0 = a0 + 0\n 22648: i32 a2 = a2 + 0\n 22650: u64 [s1 + 0x48] = a1\n 22653: a1 = 0x40\n 22656: u64 [s1 + 0x40] = a0\n 22659: ra = 0x32a\n 22663: ecalli 6 // 'hash_keccak_256'\n 22665: t0 = 0x32c\n 22669: jump @1326\n      : @873 [@dyn 405] (gas: 1)\n 22672: t0 = 812, jump @1326\n      : @874 [@dyn 406] (gas: 13)\n 22678: a0 = u64 [s1 + 0x30]\n 22681: a0 = a0 << 0x20\n 22684: a0 = a0 >> 0x20\n 22687: u64 [s1 + 472] = 0\n 22691: u64 [s1] = a0\n 22693: u64 [s1 + 0x1d0] = a0\n 22697: a0 = u64 [s1 + 0x50]\n 22700: u64 [s1 + 0x1c8] = a0\n 22704: a1 = s1 + 0x1c0\n 22708: a0 = u64 [s1 + 0x58]\n 22711: u64 [s1 + 0x1c0] = a0\n 22715: a0 = 0\n 22717: ra = 814, jump @19\n      : @875 [@dyn 407] (gas: 12)\n 22723: a0 = u64 [s1 + 0x8]\n 22726: a3 = s1 + 0x100\n 22730: u64 [a3 + 0xb8] = a0\n 22734: a0 = u64 [s1 + 0x10]\n 22737: u64 [a3 + 0xb0] = a0\n 22741: a0 = u64 [s1 + 0x18]\n 22744: u64 [a3 + 0xa8] = a0\n 22748: a0 = 0x20\n 22751: a1 = s1 + 0x1a0\n 22755: a2 = u64 [s1 + 0x20]\n 22758: u64 [a3 + 0xa0] = a2\n 22762: ra = 816, jump @19\n      : @876 [@dyn 408] (gas: 3)\n 22768: a1 = u64 [s1 + 0x48]\n 22771: a0 = i32 [a1]\n 22773: jump @878 if a0 >u 63\n      : @877 (gas: 3)\n 22777: u32 [a1 + 0] = 0x40\n 22780: t0 = 0x332\n 22784: jump @1391\n      : @878 (gas: 1)\n 22787: t0 = 818, jump @1391\n      : @879 [@dyn 409] (gas: 5)\n 22793: ra = 0x334\n 22797: ecalli 6 // 'hash_keccak_256'\n 22799: a3 = u64 [s1 + 0x30]\n 22802: t0 = 0x336\n 22806: jump @1338\n      : @880 [@dyn 410] (gas: 2)\n 22809: a3 = u64 [s1 + 0x30]\n 22812: t0 = 822, jump @1338\n      : @881 [@dyn 411] (gas: 2)\n 22818: a0 = s1 + 0x180\n 22822: ra = 824, jump @21\n      : @882 [@dyn 412] (gas: 2)\n 22828: a0 = u8 [s1 + 0x180]\n 22832: jump @884 if a0 == 0\n      : @883 (gas: 2)\n 22835: a1 = 0\n 22837: jump @904\n      : @884 (gas: 6)\n 22840: u64 [s1 + 376] = 0\n 22844: u64 [s1 + 368] = 0\n 22848: u64 [s1 + 360] = 0\n 22852: a1 = s1 + 0x160\n 22856: u64 [s1 + 352] = 0\n 22860: ra = 826, jump @19\n      : @885 [@dyn 413] (gas: 1)\n 22866: t0 = 828, jump @1347\n      : @886 [@dyn 414] (gas: 1)\n 22872: ra = 830, jump @19\n      : @887 [@dyn 415] (gas: 3)\n 22878: a1 = u64 [s1 + 0x48]\n 22881: a0 = i32 [a1]\n 22883: jump @889 if a0 >u 63\n      : @888 (gas: 3)\n 22887: u32 [a1 + 0] = 0x40\n 22890: t0 = 0x340\n 22894: jump @1391\n      : @889 (gas: 1)\n 22897: t0 = 832, jump @1391\n      : @890 [@dyn 416] (gas: 5)\n 22903: ra = 0x342\n 22907: ecalli 6 // 'hash_keccak_256'\n 22909: a3 = u64 [s1 + 0x30]\n 22912: t0 = 0x344\n 22916: jump @1383\n      : @891 [@dyn 417] (gas: 2)\n 22919: a3 = u64 [s1 + 0x30]\n 22922: t0 = 836, jump @1383\n      : @892 [@dyn 418] (gas: 21)\n 22928: u64 [s1 + 0x28] = a0\n 22931: a0 = reverse a1\n 22933: u64 [s1 + 0x20] = a0\n 22936: a0 = reverse a2\n 22938: u64 [s1 + 0x18] = a0\n 22941: a0 = reverse a3\n 22943: u64 [s1 + 0x10] = a0\n 22946: a0 = sp + 0xffffffffffffffe0\n 22949: a0 = a0 & 0xffffffffffffffe0\n 22952: u64 [s1 + 0x30] = a0\n 22955: sp = a0\n 22957: u64 [s1 + 312] = 0\n 22961: a0 = u64 [s1]\n 22963: u64 [s1 + 0x130] = a0\n 22967: a0 = u64 [s1 + 0x50]\n 22970: u64 [s1 + 0x128] = a0\n 22974: a1 = s1 + 0x120\n 22978: a0 = u64 [s1 + 0x58]\n 22981: u64 [s1 + 0x120] = a0\n 22985: a0 = 0\n 22987: ra = 838, jump @19\n      : @893 [@dyn 419] (gas: 12)\n 22993: a0 = u64 [s1 + 0x10]\n 22996: a3 = s1 + 0x100\n 23000: u64 [a3 + 0x18] = a0\n 23003: a0 = u64 [s1 + 0x18]\n 23006: u64 [a3 + 0x10] = a0\n 23009: a0 = u64 [s1 + 0x20]\n 23012: u64 [a3 + 0x8] = a0\n 23015: a0 = 0x20\n 23018: a1 = s1 + 0x100\n 23022: a2 = u64 [s1 + 0x28]\n 23025: u64 [a3] = a2\n 23027: ra = 840, jump @19\n      : @894 [@dyn 420] (gas: 3)\n 23033: a1 = u64 [s1 + 0x48]\n 23036: a0 = i32 [a1]\n 23038: jump @896 if a0 >u 63\n      : @895 (gas: 2)\n 23042: u32 [a1 + 0] = 0x40\n 23045: fallthrough\n      : @896 (gas: 12)\n 23046: a0 = sp + 0xffffffffffffffe0\n 23049: a0 = a0 & 0xffffffffffffffe0\n 23052: u64 [s1 + 0x48] = a0\n 23055: sp = a0\n 23057: i32 a2 = a0 + 0\n 23059: a1 = 0x40\n 23062: a0 = u64 [s1 + 0x40]\n 23065: ra = 0x34a\n 23069: ecalli 6 // 'hash_keccak_256'\n 23071: a3 = u64 [s1 + 0x48]\n 23074: t0 = 0x34c\n 23078: jump @1330\n      : @897 [@dyn 421] (gas: 2)\n 23081: a3 = u64 [s1 + 0x48]\n 23084: t0 = 844, jump @1330\n      : @898 [@dyn 422] (gas: 7)\n 23090: a1 = u64 [s1 + 0x30]\n 23093: u64 [a1 + 0x18] = a3\n 23096: u64 [a1 + 0x10] = a2\n 23099: u64 [a1 + 0x8] = a4\n 23102: u64 [a1] = a0\n 23104: a0 = s1 + 0xe0\n 23108: ra = 846, jump @21\n      : @899 [@dyn 423] (gas: 14)\n 23114: a0 = u64 [s1 + 0xe0]\n 23118: a1 = u64 [s1 + 0xe8]\n 23122: a2 = u64 [s1 + 0xf8]\n 23126: a3 = u64 [s1 + 0xf0]\n 23130: a0 = a0 & 0xffffffffffffff00\n 23134: a0 = a0 | 0x1\n 23137: a4 = s1 + 0x200\n 23141: u64 [a4 + 0x38] = a2\n 23144: u64 [a4 + 0x30] = a3\n 23147: u64 [a4 + 0x28] = a1\n 23150: u64 [a4 + 0x20] = a0\n 23153: a1 = s1 + 0x220\n 23157: a0 = u64 [s1 + 0x30]\n 23160: ra = 848, jump @24\n      : @900 [@dyn 424] (gas: 8)\n 23166: a0 = 0x30280\n 23171: u64 [s1 + 0x48] = a0\n 23174: i32 a0 = a0 + 0\n 23176: ra = 0x352\n 23180: ecalli 3 // 'caller'\n 23182: a2 = u64 [s1 + 0x48]\n 23185: t0 = 0x354\n 23189: jump @1325\n      : @901 [@dyn 425] (gas: 2)\n 23192: a2 = u64 [s1 + 0x48]\n 23195: t0 = 852, jump @1325\n      : @902 [@dyn 426] (gas: 36)\n 23201: t0 = a1 | a0\n 23204: a3 = a3 >> 0x20\n 23207: a2 = reverse a2\n 23209: a1 = a2 << 0x20\n 23212: a1 = a1 | a3\n 23215: a2 = a2 >> 0x20\n 23218: u64 [s1 + 120] = 0\n 23221: u64 [s1 + 152] = 0\n 23225: a0 = u64 [s1]\n 23227: u64 [s1 + 0x90] = a0\n 23231: a0 = u64 [s1 + 0x50]\n 23234: u64 [s1 + 0x88] = a0\n 23238: a0 = u64 [s1 + 0x58]\n 23241: u64 [s1 + 0x80] = a0\n 23245: u64 [s1 + 184] = 0\n 23249: u64 [s1 + 176] = 0\n 23253: u64 [s1 + 168] = 0\n 23257: u64 [s1 + 160] = 0\n 23261: a3 = u64 [0x20128]\n 23266: a4 = u64 [0x20130]\n 23271: a5 = u64 [0x20138]\n 23276: a0 = u64 [0x20140]\n 23281: u64 [s1 + 0xd8] = a3\n 23285: u64 [s1 + 0xd0] = a4\n 23289: u64 [s1 + 0xc8] = a5\n 23293: u64 [s1 + 0xc0] = a0\n 23297: u64 [s1 + 0x70] = a2\n 23300: u64 [s1 + 0x68] = a1\n 23303: a2 = s1 + 0xc0\n 23307: a3 = s1 + 0xa0\n 23311: a4 = s1 + 0x80\n 23315: a5 = s1 + 0x60\n 23318: u64 [s1 + 0x60] = t0\n 23321: a0 = 0\n 23323: a1 = 0\n 23325: ra = 854, jump @30\n      : @903 [@dyn 427] (gas: 2)\n 23331: a1 = 0x1\n 23334: fallthrough\n      : @904 (gas: 12)\n 23335: a2 = u64 [s1 + 0x38]\n 23338: u64 [a2] = a1\n 23340: u64 [a2 + 8] = 0\n 23343: u64 [a2 + 16] = 0\n 23346: u64 [a2 + 24] = 0\n 23349: sp = s0 + 0xfffffffffffffda0\n 23353: a0 = sp + 0x200\n 23357: ra = u64 [a0 + 0x58]\n 23360: s0 = u64 [a0 + 0x50]\n 23363: s1 = u64 [a0 + 0x48]\n 23366: sp = sp + 0x260\n 23370: ret\n      : @905 [@dyn 428] (gas: 7)\n 23372: a0 = u64 [0x20148]\n 23377: u64 [s1 + 0x20] = a0\n 23380: u64 [s1 + 0x238] = a0\n 23384: a1 = u64 [0x20150]\n 23389: a2 = u64 [0x20158]\n 23394: a0 = u64 [0x20160]\n 23399: t0 = 858, jump @1380\n      : @906 [@dyn 429] (gas: 1)\n 23405: ra = 860, jump @19\n      : @907 [@dyn 430] (gas: 1)\n 23411: t0 = 862, jump @1336\n      : @908 [@dyn 431] (gas: 1)\n 23417: ra = 864, jump @19\n      : @909 [@dyn 432] (gas: 3)\n 23423: a1 = 0x2026c\n 23428: a0 = i32 [0x2026c]\n 23433: jump @911 if a0 >u 63\n      : @910 (gas: 2)\n 23437: u32 [0x2026c] = 0x40\n 23443: fallthrough\n      : @911 (gas: 6)\n 23444: a0 = sp + 0xffffffffffffffe0\n 23447: a2 = a0 & 0xffffffffffffffe0\n 23450: u64 [s1 + 0x48] = a2\n 23453: sp = a2\n 23455: a0 = 0x20280\n 23460: t0 = 866, jump @1395\n      : @912 [@dyn 433] (gas: 4)\n 23466: ra = 0x364\n 23470: ecalli 6 // 'hash_keccak_256'\n 23472: t0 = 0x366\n 23476: jump @1322\n      : @913 [@dyn 434] (gas: 1)\n 23479: t0 = 870, jump @1322\n      : @914 [@dyn 435] (gas: 1)\n 23485: ra = 872, jump @19\n      : @915 [@dyn 436] (gas: 1)\n 23491: t0 = 874, jump @1346\n      : @916 [@dyn 437] (gas: 1)\n 23497: ra = 876, jump @19\n      : @917 [@dyn 438] (gas: 3)\n 23503: a1 = u64 [s1 + 0x68]\n 23506: a0 = i32 [a1]\n 23508: jump @919 if a0 >u 63\n      : @918 (gas: 3)\n 23512: u32 [a1 + 0] = 0x40\n 23515: t0 = 0x36e\n 23519: jump @1331\n      : @919 (gas: 1)\n 23522: t0 = 878, jump @1331\n      : @920 [@dyn 439] (gas: 4)\n 23528: ra = 0x370\n 23532: ecalli 6 // 'hash_keccak_256'\n 23534: t0 = 0x372\n 23538: jump @1329\n      : @921 [@dyn 440] (gas: 1)\n 23541: t0 = 882, jump @1329\n      : @922 [@dyn 441] (gas: 1)\n 23547: ra = 884, jump @21\n      : @923 [@dyn 442] (gas: 2)\n 23553: a0 = u8 [s1 + 0x1a0]\n 23557: jump @925 if a0 == 0\n      : @924 (gas: 5)\n 23560: a1 = 0\n 23562: a0 = 0\n 23564: a2 = u64 [s1 + 0x58]\n 23567: t0 = 0x39c\n 23571: jump @1334\n      : @925 (gas: 1)\n 23574: t0 = 886, jump @1365\n      : @926 [@dyn 443] (gas: 1)\n 23580: ra = 888, jump @19\n      : @927 [@dyn 444] (gas: 1)\n 23586: t0 = 890, jump @1335\n      : @928 [@dyn 445] (gas: 1)\n 23592: ra = 892, jump @19\n      : @929 [@dyn 446] (gas: 3)\n 23598: a1 = u64 [s1 + 0x68]\n 23601: a0 = i32 [a1]\n 23603: jump @931 if a0 >u 63\n      : @930 (gas: 3)\n 23607: u32 [a1 + 0] = 0x40\n 23610: t0 = 0x37e\n 23614: jump @1331\n      : @931 (gas: 1)\n 23617: t0 = 894, jump @1331\n      : @932 [@dyn 447] (gas: 4)\n 23623: ra = 0x380\n 23627: ecalli 6 // 'hash_keccak_256'\n 23629: t0 = 0x382\n 23633: jump @1323\n      : @933 [@dyn 448] (gas: 1)\n 23636: t0 = 898, jump @1323\n      : @934 [@dyn 449] (gas: 1)\n 23642: ra = 900, jump @19\n      : @935 [@dyn 450] (gas: 1)\n 23648: t0 = 902, jump @1345\n      : @936 [@dyn 451] (gas: 1)\n 23654: ra = 904, jump @19\n      : @937 [@dyn 452] (gas: 3)\n 23660: a1 = u64 [s1 + 0x68]\n 23663: a0 = i32 [a1]\n 23665: jump @939 if a0 >u 63\n      : @938 (gas: 2)\n 23669: u32 [a1 + 0] = 0x40\n 23672: fallthrough\n      : @939 (gas: 4)\n 23673: a0 = sp + 0xffffffffffffffe0\n 23676: a0 = a0 & 0xffffffffffffffe0\n 23679: u64 [s1 + 0x68] = a0\n 23682: t0 = 906, jump @1339\n      : @940 [@dyn 453] (gas: 4)\n 23688: ra = 0x38c\n 23692: ecalli 6 // 'hash_keccak_256'\n 23694: t0 = 0x38e\n 23698: jump @1328\n      : @941 [@dyn 454] (gas: 1)\n 23701: t0 = 910, jump @1328\n      : @942 [@dyn 455] (gas: 1)\n 23707: ra = 912, jump @21\n      : @943 [@dyn 456] (gas: 1)\n 23713: t0 = 914, jump @1333\n      : @944 [@dyn 457] (gas: 1)\n 23719: ra = 916, jump @24\n      : @945 [@dyn 458] (gas: 8)\n 23725: a0 = 0x30280\n 23730: u64 [s1 + 0x68] = a0\n 23733: i32 a0 = a0 + 0\n 23735: ra = 0x396\n 23739: ecalli 3 // 'caller'\n 23741: a2 = u64 [s1 + 0x68]\n 23744: t0 = 0x398\n 23748: jump @1325\n      : @946 [@dyn 459] (gas: 2)\n 23751: a2 = u64 [s1 + 0x68]\n 23754: t0 = 920, jump @1325\n      : @947 [@dyn 460] (gas: 40)\n 23760: t0 = a1 | a0\n 23763: a3 = a3 >> 0x20\n 23766: a2 = reverse a2\n 23768: a1 = a2 << 0x20\n 23771: a1 = a1 | a3\n 23774: a2 = a2 >> 0x20\n 23777: u64 [s1 + 152] = 0\n 23781: u64 [s1 + 184] = 0\n 23785: a0 = u64 [s1]\n 23787: u64 [s1 + 0xb0] = a0\n 23791: a0 = u64 [s1 + 0x70]\n 23794: u64 [s1 + 0xa8] = a0\n 23798: a0 = u64 [s1 + 0x78]\n 23801: u64 [s1 + 0xa0] = a0\n 23805: a0 = u64 [s1 + 0x20]\n 23808: u64 [s1 + 0xd8] = a0\n 23812: a0 = u64 [s1 + 0x18]\n 23815: u64 [s1 + 0xd0] = a0\n 23819: a0 = u64 [s1 + 0x10]\n 23822: u64 [s1 + 0xc8] = a0\n 23826: a0 = u64 [s1 + 0x8]\n 23829: u64 [s1 + 0xc0] = a0\n 23833: a3 = u64 [0x20168]\n 23838: a4 = u64 [0x20170]\n 23843: a5 = u64 [0x20178]\n 23848: a0 = u64 [0x20180]\n 23853: u64 [s1 + 0xf8] = a3\n 23857: u64 [s1 + 0xf0] = a4\n 23861: u64 [s1 + 0xe8] = a5\n 23865: u64 [s1 + 0xe0] = a0\n 23869: u64 [s1 + 0x90] = a2\n 23873: u64 [s1 + 0x88] = a1\n 23877: a2 = s1 + 0xe0\n 23881: a3 = s1 + 0xc0\n 23885: a4 = s1 + 0xa0\n 23889: a5 = s1 + 0x80\n 23893: u64 [s1 + 0x80] = t0\n 23897: a0 = 0\n 23899: a1 = 0\n 23901: ra = 922, jump @30\n      : @948 [@dyn 461] (gas: 4)\n 23907: a0 = 0\n 23909: a1 = 0x1\n 23912: a2 = u64 [s1 + 0x58]\n 23915: t0 = 924, jump @1334\n      : @949 [@dyn 462] (gas: 1)\n 23921: ret\n      : @950 [@dyn 463] (gas: 7)\n 23923: a0 = u64 [0x20188]\n 23928: u64 [s1 + 0x20] = a0\n 23931: u64 [s1 + 0x238] = a0\n 23935: a1 = u64 [0x20190]\n 23940: a2 = u64 [0x20198]\n 23945: a0 = u64 [0x201a0]\n 23950: t0 = 928, jump @1380\n      : @951 [@dyn 464] (gas: 1)\n 23956: ra = 930, jump @19\n      : @952 [@dyn 465] (gas: 1)\n 23962: t0 = 932, jump @1336\n      : @953 [@dyn 466] (gas: 1)\n 23968: ra = 934, jump @19\n      : @954 [@dyn 467] (gas: 3)\n 23974: a1 = 0x2026c\n 23979: a0 = i32 [0x2026c]\n 23984: jump @956 if a0 >u 63\n      : @955 (gas: 2)\n 23988: u32 [0x2026c] = 0x40\n 23994: fallthrough\n      : @956 (gas: 6)\n 23995: a0 = sp + 0xffffffffffffffe0\n 23998: a2 = a0 & 0xffffffffffffffe0\n 24001: u64 [s1 + 0x48] = a2\n 24004: sp = a2\n 24006: a0 = 0x20280\n 24011: t0 = 936, jump @1395\n      : @957 [@dyn 468] (gas: 4)\n 24017: ra = 0x3aa\n 24021: ecalli 6 // 'hash_keccak_256'\n 24023: t0 = 0x3ac\n 24027: jump @1322\n      : @958 [@dyn 469] (gas: 1)\n 24030: t0 = 940, jump @1322\n      : @959 [@dyn 470] (gas: 1)\n 24036: ra = 942, jump @19\n      : @960 [@dyn 471] (gas: 1)\n 24042: t0 = 944, jump @1346\n      : @961 [@dyn 472] (gas: 1)\n 24048: ra = 946, jump @19\n      : @962 [@dyn 473] (gas: 3)\n 24054: a1 = u64 [s1 + 0x68]\n 24057: a0 = i32 [a1]\n 24059: jump @964 if a0 >u 63\n      : @963 (gas: 3)\n 24063: u32 [a1 + 0] = 0x40\n 24066: t0 = 0x3b4\n 24070: jump @1331\n      : @964 (gas: 1)\n 24073: t0 = 948, jump @1331\n      : @965 [@dyn 474] (gas: 4)\n 24079: ra = 0x3b6\n 24083: ecalli 6 // 'hash_keccak_256'\n 24085: t0 = 0x3b8\n 24089: jump @1329\n      : @966 [@dyn 475] (gas: 1)\n 24092: t0 = 952, jump @1329\n      : @967 [@dyn 476] (gas: 1)\n 24098: ra = 954, jump @21\n      : @968 [@dyn 477] (gas: 2)\n 24104: a0 = u8 [s1 + 0x1a0]\n 24108: jump @970 if a0 == 0\n      : @969 (gas: 5)\n 24111: a1 = 0\n 24113: a0 = 0\n 24115: a2 = u64 [s1 + 0x58]\n 24118: t0 = 0x3e2\n 24122: jump @1334\n      : @970 (gas: 1)\n 24125: t0 = 956, jump @1365\n      : @971 [@dyn 478] (gas: 1)\n 24131: ra = 958, jump @19\n      : @972 [@dyn 479] (gas: 1)\n 24137: t0 = 960, jump @1335\n      : @973 [@dyn 480] (gas: 1)\n 24143: ra = 962, jump @19\n      : @974 [@dyn 481] (gas: 3)\n 24149: a1 = u64 [s1 + 0x68]\n 24152: a0 = i32 [a1]\n 24154: jump @976 if a0 >u 63\n      : @975 (gas: 3)\n 24158: u32 [a1 + 0] = 0x40\n 24161: t0 = 0x3c4\n 24165: jump @1331\n      : @976 (gas: 1)\n 24168: t0 = 964, jump @1331\n      : @977 [@dyn 482] (gas: 4)\n 24174: ra = 0x3c6\n 24178: ecalli 6 // 'hash_keccak_256'\n 24180: t0 = 0x3c8\n 24184: jump @1323\n      : @978 [@dyn 483] (gas: 1)\n 24187: t0 = 968, jump @1323\n      : @979 [@dyn 484] (gas: 1)\n 24193: ra = 970, jump @19\n      : @980 [@dyn 485] (gas: 1)\n 24199: t0 = 972, jump @1345\n      : @981 [@dyn 486] (gas: 1)\n 24205: ra = 974, jump @19\n      : @982 [@dyn 487] (gas: 3)\n 24211: a1 = u64 [s1 + 0x68]\n 24214: a0 = i32 [a1]\n 24216: jump @984 if a0 >u 63\n      : @983 (gas: 2)\n 24220: u32 [a1 + 0] = 0x40\n 24223: fallthrough\n      : @984 (gas: 4)\n 24224: a0 = sp + 0xffffffffffffffe0\n 24227: a0 = a0 & 0xffffffffffffffe0\n 24230: u64 [s1 + 0x68] = a0\n 24233: t0 = 976, jump @1339\n      : @985 [@dyn 488] (gas: 4)\n 24239: ra = 0x3d2\n 24243: ecalli 6 // 'hash_keccak_256'\n 24245: t0 = 0x3d4\n 24249: jump @1328\n      : @986 [@dyn 489] (gas: 1)\n 24252: t0 = 980, jump @1328\n      : @987 [@dyn 490] (gas: 1)\n 24258: ra = 982, jump @21\n      : @988 [@dyn 491] (gas: 1)\n 24264: t0 = 984, jump @1333\n      : @989 [@dyn 492] (gas: 1)\n 24270: ra = 986, jump @24\n      : @990 [@dyn 493] (gas: 8)\n 24276: a0 = 0x30280\n 24281: u64 [s1 + 0x68] = a0\n 24284: i32 a0 = a0 + 0\n 24286: ra = 0x3dc\n 24290: ecalli 3 // 'caller'\n 24292: a2 = u64 [s1 + 0x68]\n 24295: t0 = 0x3de\n 24299: jump @1325\n      : @991 [@dyn 494] (gas: 2)\n 24302: a2 = u64 [s1 + 0x68]\n 24305: t0 = 990, jump @1325\n      : @992 [@dyn 495] (gas: 40)\n 24311: t0 = a1 | a0\n 24314: a3 = a3 >> 0x20\n 24317: a2 = reverse a2\n 24319: a1 = a2 << 0x20\n 24322: a1 = a1 | a3\n 24325: a2 = a2 >> 0x20\n 24328: u64 [s1 + 152] = 0\n 24332: u64 [s1 + 184] = 0\n 24336: a0 = u64 [s1]\n 24338: u64 [s1 + 0xb0] = a0\n 24342: a0 = u64 [s1 + 0x70]\n 24345: u64 [s1 + 0xa8] = a0\n 24349: a0 = u64 [s1 + 0x78]\n 24352: u64 [s1 + 0xa0] = a0\n 24356: a0 = u64 [s1 + 0x20]\n 24359: u64 [s1 + 0xd8] = a0\n 24363: a0 = u64 [s1 + 0x18]\n 24366: u64 [s1 + 0xd0] = a0\n 24370: a0 = u64 [s1 + 0x10]\n 24373: u64 [s1 + 0xc8] = a0\n 24377: a0 = u64 [s1 + 0x8]\n 24380: u64 [s1 + 0xc0] = a0\n 24384: a3 = u64 [0x201a8]\n 24389: a4 = u64 [0x201b0]\n 24394: a5 = u64 [0x201b8]\n 24399: a0 = u64 [0x201c0]\n 24404: u64 [s1 + 0xf8] = a3\n 24408: u64 [s1 + 0xf0] = a4\n 24412: u64 [s1 + 0xe8] = a5\n 24416: u64 [s1 + 0xe0] = a0\n 24420: u64 [s1 + 0x90] = a2\n 24424: u64 [s1 + 0x88] = a1\n 24428: a2 = s1 + 0xe0\n 24432: a3 = s1 + 0xc0\n 24436: a4 = s1 + 0xa0\n 24440: a5 = s1 + 0x80\n 24444: u64 [s1 + 0x80] = t0\n 24448: a0 = 0\n 24450: a1 = 0\n 24452: ra = 992, jump @30\n      : @993 [@dyn 496] (gas: 4)\n 24458: a0 = 0\n 24460: a1 = 0x1\n 24463: a2 = u64 [s1 + 0x58]\n 24466: t0 = 994, jump @1334\n      : @994 [@dyn 497] (gas: 1)\n 24472: ret\n      : @995 (gas: 22)\n 24474: sp = sp + 0xfffffffffffffee0\n 24478: u64 [sp + 0x118] = ra\n 24482: u64 [sp + 0x110] = s0\n 24486: u64 [sp + 0x108] = s1\n 24490: s0 = sp + 0x120\n 24494: sp = sp & 0xfffffffffffffff0\n 24497: a4 = u64 [a1 + 0x10]\n 24500: a3 = u64 [a1 + 0x18]\n 24503: a5 = u64 [a1 + 0x8]\n 24506: t0 = u64 [a1]\n 24508: u64 [sp + 0x68] = a3\n 24511: u64 [sp + 0x78] = a5\n 24514: a1 = a5 | a3\n 24517: a3 = t0 | a4\n 24520: a3 = a3 | a1\n 24523: a3 = a3 >> 0x20\n 24526: u64 [sp + 0x70] = a4\n 24529: a1 = a1 | a4\n 24532: a1 = a1 << 0x20\n 24535: a1 = a1 | a3\n 24538: u64 [sp + 0x8] = a0\n 24541: jump @1010 if a1 != 0\n      : @996 (gas: 15)\n 24545: a0 = u64 [a2 + 0x18]\n 24548: u64 [sp + 0x48] = a0\n 24551: s1 = u64 [a2 + 0x10]\n 24554: a0 = u64 [a2 + 0x8]\n 24557: u64 [sp + 0x50] = a0\n 24560: a0 = u64 [a2]\n 24562: u64 [sp + 0x58] = a0\n 24565: u64 [sp + 248] = 0\n 24569: u64 [sp + 240] = 0\n 24573: u64 [sp + 232] = 0\n 24577: a1 = sp + 0xe0\n 24581: u64 [sp + 224] = 0x20\n 24586: a0 = t0\n 24588: u64 [sp + 0x60] = t0\n 24591: ra = 996, jump @19\n      : @997 [@dyn 498] (gas: 12)\n 24597: a1 = u64 [sp + 0x58]\n 24600: a0 = a1 | s1\n 24603: a2 = u64 [sp + 0x48]\n 24606: a3 = u64 [sp + 0x50]\n 24609: a2 = a2 | a3\n 24612: a0 = a0 | a2\n 24615: a0 = a0 >> 0x20\n 24618: u64 [sp + 0x20] = s1\n 24621: a2 = a2 | s1\n 24624: a2 = a2 << 0x20\n 24627: a0 = a0 | a2\n 24630: jump @1010 if a0 != 0\n      : @998 (gas: 2)\n 24634: a0 = sp + 0xc0\n 24638: ra = 998, jump @17\n      : @999 [@dyn 499] (gas: 13)\n 24644: a0 = u64 [sp + 0x70]\n 24647: a1 = u64 [sp + 0x68]\n 24650: a1 = a1 | a0\n 24653: a0 = 0x100000000\n 24663: u64 [sp + 0x10] = a0\n 24666: a0 = 0xffffffe0\n 24676: a2 = u64 [sp + 0x60]\n 24679: a0 = a2 <u a0\n 24682: a3 = u64 [sp + 0x78]\n 24685: a0 = 0 if a3 != 0\n 24687: u64 [sp + 0x18] = a1\n 24690: a0 = 0 if a1 != 0\n 24692: jump @1010 if a0 == 0\n      : @1000 (gas: 16)\n 24696: a3 = u64 [sp + 0xd8]\n 24700: a4 = u64 [sp + 0xd0]\n 24704: a5 = u64 [sp + 0xc8]\n 24708: a1 = u64 [sp + 0xc0]\n 24712: i32 a0 = a2 + 0x20\n 24715: u64 [sp + 0x28] = a1\n 24718: u64 [sp + 0xa0] = a1\n 24722: u64 [sp + 0x30] = a5\n 24725: u64 [sp + 0xa8] = a5\n 24729: u64 [sp + 0x38] = a4\n 24732: u64 [sp + 0xb0] = a4\n 24736: a1 = sp + 0xa0\n 24740: u64 [sp + 0x40] = a3\n 24743: u64 [sp + 0xb8] = a3\n 24747: s1 = a2\n 24749: ra = 1000, jump @19\n      : @1001 [@dyn 500] (gas: 8)\n 24755: a0 = u64 [sp + 0x10]\n 24758: a0 = a0 + 0xffffffffffffffc0\n 24761: a0 = s1 <u a0\n 24764: a1 = u64 [sp + 0x78]\n 24767: a0 = 0 if a1 != 0\n 24769: a1 = u64 [sp + 0x18]\n 24772: a0 = 0 if a1 != 0\n 24774: jump @1010 if a0 == 0\n      : @1002 (gas: 10)\n 24778: a0 = u64 [sp + 0x48]\n 24781: a1 = u64 [sp + 0x20]\n 24784: a0 = a0 | a1\n 24787: a1 = 0xffffffe0\n 24797: a3 = u64 [sp + 0x58]\n 24800: a1 = a3 <u a1\n 24803: a4 = u64 [sp + 0x50]\n 24806: a1 = 0 if a4 != 0\n 24808: a1 = 0 if a0 != 0\n 24810: jump @1010 if a1 == 0\n      : @1003 (gas: 13)\n 24814: a2 = s1\n 24816: a1 = u64 [sp + 0x28]\n 24819: a5 = u64 [sp + 0x38]\n 24822: a0 = a1 | a5\n 24825: a4 = u64 [sp + 0x40]\n 24828: s1 = u64 [sp + 0x30]\n 24831: a4 = a4 | s1\n 24834: a0 = a0 | a4\n 24837: a0 = a0 >> 0x20\n 24840: a4 = a4 | a5\n 24843: a4 = a4 << 0x20\n 24846: a0 = a0 | a4\n 24849: jump @1010 if a0 != 0\n      : @1004 (gas: 5)\n 24853: i32 a0 = a2 + 0x40\n 24856: i32 a3 = a3 + 0x20\n 24859: u64 [sp + 0x58] = a3\n 24862: s1 = a1\n 24864: ra = 1002, jump @33\n      : @1005 [@dyn 501] (gas: 4)\n 24870: u64 [sp + 0x50] = a0\n 24873: a0 = u64 [sp + 0x58]\n 24876: a1 = s1\n 24878: ra = 1004, jump @33\n      : @1006 [@dyn 502] (gas: 4)\n 24884: a1 = a0\n 24886: a0 = u64 [sp + 0x50]\n 24889: a2 = s1\n 24891: ra = 1006, jump @0\n      : @1007 [@dyn 503] (gas: 27)\n 24897: a0 = u64 [sp + 0x60]\n 24900: a0 = a0 + s1\n 24903: a1 = a0 <u s1\n 24906: a2 = u64 [sp + 0x78]\n 24909: a4 = u64 [sp + 0x30]\n 24912: a2 = a2 + a4\n 24915: a2 = a2 + a1\n 24918: a3 = a2 ^ a4\n 24921: a4 = a2 <u a4\n 24924: a4 = a1 if a3 == 0\n 24927: a1 = u64 [sp + 0x70]\n 24930: a3 = u64 [sp + 0x38]\n 24933: a1 = a1 + a3\n 24936: a3 = a1 <u a3\n 24939: a5 = u64 [sp + 0x68]\n 24942: s1 = u64 [sp + 0x40]\n 24945: a5 = a5 + s1\n 24948: a3 = a3 + a5\n 24951: a4 = a4 + a1\n 24954: a1 = a4 <u a1\n 24957: a1 = a1 + a3\n 24960: a1 = a1 | a4\n 24963: a3 = 0xffffffc0\n 24973: a3 = a0 <u a3\n 24976: a3 = 0 if a2 != 0\n 24978: a3 = 0 if a1 != 0\n 24980: jump @1010 if a3 == 0\n      : @1008 (gas: 7)\n 24984: i32 a0 = a0 + 0x40\n 24987: u64 [sp + 152] = 0\n 24991: u64 [sp + 144] = 0\n 24995: u64 [sp + 136] = 0\n 24999: a1 = sp + 0x80\n 25003: u64 [sp + 128] = 0\n 25007: ra = 1008, jump @19\n      : @1009 [@dyn 504] (gas: 35)\n 25013: s1 = u64 [sp + 0x28]\n 25016: s1 = s1 + 0x1f\n 25019: a0 = 0x1ffffffe0\n 25029: a0 = a0 & s1\n 25032: a1 = u64 [sp + 0x60]\n 25035: a0 = a0 + a1\n 25038: a1 = a0 <u a1\n 25041: a3 = u64 [sp + 0x78]\n 25044: a2 = a3 + a1\n 25047: a3 = a2 <u a3\n 25050: a3 = a1 if a1 == 0\n 25053: a1 = u64 [sp + 0x70]\n 25056: a3 = a3 + a1\n 25059: a1 = a3 <u a1\n 25062: a4 = u64 [sp + 0x68]\n 25065: a1 = a1 + a4\n 25068: a4 = a0 + 0x40\n 25071: a0 = a4 <u a0\n 25074: a5 = a2 + a0\n 25077: a2 = a5 <u a2\n 25080: a2 = a0 if a0 == 0\n 25083: a2 = a2 + a3\n 25086: a0 = a2 <u a3\n 25089: a0 = a0 + a1\n 25092: a1 = u64 [sp + 0x8]\n 25095: u64 [a1] = a4\n 25097: u64 [a1 + 0x8] = a5\n 25100: u64 [a1 + 0x10] = a2\n 25103: u64 [a1 + 0x18] = a0\n 25106: sp = s0 + 0xfffffffffffffee0\n 25110: ra = u64 [sp + 0x118]\n 25114: s0 = u64 [sp + 0x110]\n 25118: s1 = u64 [sp + 0x108]\n 25122: sp = sp + 0x120\n 25126: ret\n      : @1010 (gas: 1)\n 25128: trap\n      : @1011 [@dyn 505] (gas: 5)\n 25129: a1 = 0x4\n 25132: ra = 0x3f4\n 25136: ecalli 1 // 'call_data_load'\n 25138: t0 = 0x3f6\n 25142: jump @1370\n      : @1012 [@dyn 506] (gas: 1)\n 25145: t0 = 1014, jump @1370\n      : @1013 [@dyn 507] (gas: 1)\n 25151: jump @1016 if a3 == 0\n      : @1014 (gas: 1)\n 25154: t0 = 1016, jump @1382\n      : @1015 [@dyn 508] (gas: 1)\n 25160: ret\n      : @1016 (gas: 8)\n 25162: a1 = 0x20280\n 25167: i32 a1 = a1 + 0\n 25169: a0 = 0x1\n 25172: a2 = 0\n 25174: ra = 0x3fa\n 25178: ecalli 7 // 'seal_return'\n 25180: t0 = 0x3fc\n 25184: jump @1397\n      : @1017 [@dyn 509] (gas: 1)\n 25187: t0 = 1020, jump @1397\n      : @1018 [@dyn 510] (gas: 5)\n 25193: a1 = 0x24\n 25196: ra = 0x3fe\n 25200: ecalli 1 // 'call_data_load'\n 25202: t0 = 0x400\n 25206: jump @1370\n      : @1019 [@dyn 511] (gas: 1)\n 25209: t0 = 1024, jump @1370\n      : @1020 [@dyn 512] (gas: 1)\n 25215: jump @1023 if a3 == 0\n      : @1021 (gas: 1)\n 25218: t0 = 1026, jump @1382\n      : @1022 [@dyn 513] (gas: 1)\n 25224: ret\n      : @1023 (gas: 7)\n 25226: a1 = 0x20280\n 25231: i32 a1 = a1 + 0\n 25233: a0 = 0x1\n 25236: a2 = 0\n 25238: ra = 0x404\n 25242: ecalli 7 // 'seal_return'\n 25244: fallthrough\n      : @1024 [@dyn 514] (gas: 19)\n 25245: sp = sp + 0xffffffffffffff40\n 25249: u64 [sp + 0xb8] = ra\n 25253: u64 [sp + 0xb0] = s0\n 25257: u64 [sp + 0xa8] = s1\n 25261: s0 = sp + 0xc0\n 25265: sp = sp & 0xffffffffffffffe0\n 25268: s1 = sp\n 25270: a2 = u64 [a1]\n 25272: a3 = u64 [a1 + 0x8]\n 25275: a4 = u64 [a1 + 0x10]\n 25278: a1 = u64 [a1 + 0x18]\n 25281: u64 [s1 + 0x18] = a0\n 25284: u64 [s1 + 0x78] = a1\n 25287: u64 [s1 + 0x70] = a4\n 25290: u64 [s1 + 0x68] = a3\n 25293: a1 = s1 + 0x60\n 25296: u64 [s1 + 0x60] = a2\n 25299: a0 = 0\n 25301: ra = 1030, jump @19\n      : @1025 [@dyn 515] (gas: 7)\n 25307: u64 [s1 + 88] = 0\n 25310: u64 [s1 + 80] = 0\n 25313: u64 [s1 + 64] = 0x6\n 25317: a0 = 0x20\n 25320: a1 = s1 + 0x40\n 25323: u64 [s1 + 72] = 0\n 25326: ra = 1032, jump @19\n      : @1026 [@dyn 516] (gas: 2)\n 25332: a1 = i32 [0x2026c]\n 25337: jump @1028 if a1 >u 63\n      : @1027 (gas: 2)\n 25341: u32 [0x2026c] = 0x40\n 25347: fallthrough\n      : @1028 (gas: 11)\n 25348: a0 = sp + 0xffffffffffffffe0\n 25351: a2 = a0 & 0xffffffffffffffe0\n 25354: u64 [s1 + 0x10] = a2\n 25357: sp = a2\n 25359: a0 = 0x20280\n 25364: i32 a0 = a0 + 0\n 25366: i32 a2 = a2 + 0\n 25368: a1 = 0x40\n 25371: ra = 0x40a\n 25375: ecalli 6 // 'hash_keccak_256'\n 25377: fallthrough\n      : @1029 [@dyn 517] (gas: 6)\n 25378: a3 = u64 [s1 + 0x10]\n 25381: a0 = u64 [a3]\n 25383: a1 = u64 [a3 + 0x8]\n 25386: a2 = u64 [a3 + 0x10]\n 25389: a3 = u64 [a3 + 0x18]\n 25392: t0 = 1036, jump @1351\n      : @1030 [@dyn 518] (gas: 15)\n 25398: a3 = a3 + 0x1\n 25401: a4 = a3 <u 0x1\n 25404: a2 = a2 + a4\n 25407: a4 = a3 | a2\n 25410: a4 = a4 <u 0x1\n 25413: a4 = a4 + a1\n 25416: a1 = a4 <u a1\n 25419: a0 = a0 + a1\n 25422: u64 [s1 + 0x80] = a3\n 25426: u64 [s1 + 0x88] = a2\n 25430: u64 [s1 + 0x90] = a4\n 25434: u64 [s1 + 0x98] = a0\n 25438: a0 = s1 + 0x20\n 25441: a1 = s1 + 0x80\n 25445: ra = 1038, jump @21\n      : @1031 [@dyn 519] (gas: 15)\n 25451: a0 = u64 [s1 + 0x30]\n 25454: a1 = u64 [s1 + 0x38]\n 25457: a2 = u64 [s1 + 0x20]\n 25460: a3 = u64 [s1 + 0x28]\n 25463: a4 = u64 [s1 + 0x18]\n 25466: u64 [a4 + 0x10] = a0\n 25469: u64 [a4 + 0x18] = a1\n 25472: u64 [a4] = a2\n 25474: u64 [a4 + 0x8] = a3\n 25477: sp = s0 + 0xffffffffffffff40\n 25481: ra = u64 [sp + 0xb8]\n 25485: s0 = u64 [sp + 0xb0]\n 25489: s1 = u64 [sp + 0xa8]\n 25493: sp = sp + 0xc0\n 25497: ret\n      : @1032 (gas: 37)\n 25499: sp = sp + 0xfffffffffffffce0\n 25503: a3 = sp + 0x300\n 25507: u64 [a3 + 0x18] = ra\n 25510: u64 [a3 + 0x10] = s0\n 25513: u64 [a3 + 0x8] = s1\n 25516: s0 = sp + 0x320\n 25520: sp = sp & 0xffffffffffffffe0\n 25523: s1 = sp\n 25525: a3 = u64 [a2 + 0x18]\n 25528: u64 [s1 + 0x98] = a3\n 25532: a3 = u64 [a2 + 0x10]\n 25535: u64 [s1 + 0x90] = a3\n 25539: a3 = u64 [a2 + 0x8]\n 25542: u64 [s1 + 0xa0] = a3\n 25546: a2 = u64 [a2]\n 25548: u64 [s1 + 0xa8] = a2\n 25552: a2 = u64 [a1 + 0x10]\n 25555: u64 [s1 + 0x88] = a2\n 25559: a2 = u64 [a1 + 0x8]\n 25562: u64 [s1 + 0x80] = a2\n 25566: a1 = u64 [a1]\n 25568: u64 [s1 + 0x78] = a1\n 25571: a2 = u64 [a0]\n 25573: a1 = u64 [a0 + 0x8]\n 25576: a0 = u32 [a0 + 0x10]\n 25579: a3 = 0xffffffff\n 25589: u64 [s1 + 0x70] = a3\n 25592: u64 [s1 + 728] = 0\n 25596: u64 [s1 + 0x40] = a0\n 25599: u64 [s1 + 0x2d0] = a0\n 25603: u64 [s1 + 0x30] = a1\n 25606: u64 [s1 + 0x2c8] = a1\n 25610: a1 = s1 + 0x2c0\n 25614: u64 [s1 + 0x38] = a2\n 25617: u64 [s1 + 0x2c0] = a2\n 25621: a0 = 0\n 25623: ra = 1040, jump @19\n      : @1033 [@dyn 520] (gas: 7)\n 25629: u64 [s1 + 696] = 0\n 25633: u64 [s1 + 688] = 0\n 25637: u64 [s1 + 672] = 0x1\n 25642: a0 = 0x20\n 25645: a1 = s1 + 0x2a0\n 25649: u64 [s1 + 680] = 0\n 25653: ra = 1042, jump @19\n      : @1034 [@dyn 521] (gas: 3)\n 25659: a1 = 0x2026c\n 25664: a0 = i32 [0x2026c]\n 25669: jump @1036 if a0 >u 63\n      : @1035 (gas: 2)\n 25673: u32 [0x2026c] = 0x40\n 25679: fallthrough\n      : @1036 (gas: 15)\n 25680: a0 = sp + 0xffffffffffffffe0\n 25683: a2 = a0 & 0xffffffffffffffe0\n 25686: u64 [s1 + 0x68] = a2\n 25689: sp = a2\n 25691: a0 = 0x20280\n 25696: i32 a0 = a0 + 0\n 25698: i32 a2 = a2 + 0\n 25700: u64 [s1 + 0xb0] = a1\n 25704: a1 = 0x40\n 25707: u64 [s1 + 0xb8] = a0\n 25711: ra = 0x414\n 25715: ecalli 6 // 'hash_keccak_256'\n 25717: a3 = u64 [s1 + 0x68]\n 25720: t0 = 0x416\n 25724: jump @1349\n      : @1037 [@dyn 522] (gas: 2)\n 25727: a3 = u64 [s1 + 0x68]\n 25730: t0 = 1046, jump @1349\n      : @1038 [@dyn 523] (gas: 17)\n 25736: a0 = u64 [s1 + 0x78]\n 25739: a0 = a0 & 0xffffffffffffffff\n 25742: a1 = u64 [s1 + 0x80]\n 25746: a1 = a1 & 0xffffffffffffffff\n 25749: a2 = u64 [s1 + 0x88]\n 25753: a3 = u64 [s1 + 0x70]\n 25756: a2 = a2 & a3\n 25759: u64 [s1 + 664] = 0\n 25763: u64 [s1 + 0x78] = a2\n 25766: u64 [s1 + 0x290] = a2\n 25770: u64 [s1 + 0x80] = a1\n 25774: u64 [s1 + 0x288] = a1\n 25778: a1 = s1 + 0x280\n 25782: u64 [s1 + 0x88] = a0\n 25786: u64 [s1 + 0x280] = a0\n 25790: a0 = 0\n 25792: ra = 1048, jump @19\n      : @1039 [@dyn 524] (gas: 12)\n 25798: a0 = u64 [s1 + 0x48]\n 25801: a3 = s1 + 0x200\n 25805: u64 [a3 + 0x78] = a0\n 25808: a0 = u64 [s1 + 0x50]\n 25811: u64 [a3 + 0x70] = a0\n 25814: a0 = u64 [s1 + 0x58]\n 25817: u64 [a3 + 0x68] = a0\n 25820: a0 = 0x20\n 25823: a1 = s1 + 0x260\n 25827: a2 = u64 [s1 + 0x60]\n 25830: u64 [a3 + 0x60] = a2\n 25833: ra = 1050, jump @19\n      : @1040 [@dyn 525] (gas: 3)\n 25839: a1 = u64 [s1 + 0xb0]\n 25843: a0 = i32 [a1]\n 25845: jump @1042 if a0 >u 63\n      : @1041 (gas: 2)\n 25849: u32 [a1 + 0] = 0x40\n 25852: fallthrough\n      : @1042 (gas: 4)\n 25853: a0 = sp + 0xffffffffffffffe0\n 25856: a0 = a0 & 0xffffffffffffffe0\n 25859: u64 [s1 + 0x70] = a0\n 25862: t0 = 1052, jump @1385\n      : @1043 [@dyn 526] (gas: 5)\n 25868: ra = 0x41e\n 25872: ecalli 6 // 'hash_keccak_256'\n 25874: a3 = u64 [s1 + 0x70]\n 25877: t0 = 0x420\n 25881: jump @1359\n      : @1044 [@dyn 527] (gas: 2)\n 25884: a3 = u64 [s1 + 0x70]\n 25887: t0 = 1056, jump @1359\n      : @1045 [@dyn 528] (gas: 2)\n 25893: a0 = s1 + 0x240\n 25897: ra = 1058, jump @21\n      : @1046 [@dyn 529] (gas: 9)\n 25903: ra = u64 [s1 + 0x258]\n 25907: t1 = u64 [s1 + 0x250]\n 25911: a4 = u64 [s1 + 0x248]\n 25915: t0 = u64 [s1 + 0x240]\n 25919: a0 = a4 & ra\n 25922: a1 = t0 & t1\n 25925: a0 = a0 & a1\n 25928: a1 = 0xffffffffffffffff\n 25931: jump @1063 if a0 == a1\n      : @1047 (gas: 23)\n 25935: a0 = u64 [s1 + 0xa8]\n 25939: a2 = t0 <u a0\n 25942: a1 = u64 [s1 + 0xa0]\n 25946: a0 = a4 ^ a1\n 25949: a5 = a4 <u a1\n 25952: u64 [s1 + 0x50] = a2\n 25955: a5 = a2 if a0 == 0\n 25958: a2 = u64 [s1 + 0x90]\n 25962: a3 = t1 <u a2\n 25965: a1 = u64 [s1 + 0x98]\n 25969: a0 = ra ^ a1\n 25972: a1 = ra <u a1\n 25975: u64 [s1 + 0x28] = a3\n 25978: a1 = a3 if a0 == 0\n 25981: a2 = t1 ^ a2\n 25984: a0 = a0 | a2\n 25987: u64 [s1 + 0x48] = a5\n 25990: a1 = a5 if a0 == 0\n 25993: u64 [s1 + 0x70] = t0\n 25996: u64 [s1 + 0x68] = a4\n 25999: u64 [s1 + 0x60] = ra\n 26002: u64 [s1 + 0x58] = t1\n 26005: jump @1064 if a1 != 0\n      : @1048 (gas: 6)\n 26009: a3 = u64 [s1 + 0x40]\n 26012: a2 = u64 [s1 + 0x38]\n 26015: a0 = a2 | a3\n 26018: t2 = u64 [s1 + 0x30]\n 26021: a0 = a0 | t2\n 26024: jump @1071 if a0 == 0\n      : @1049 (gas: 6)\n 26028: a0 = u64 [s1 + 0x88]\n 26032: a1 = u64 [s1 + 0x78]\n 26035: a0 = a0 | a1\n 26038: a1 = u64 [s1 + 0x80]\n 26042: a0 = a0 | a1\n 26045: jump @1073 if a0 == 0\n      : @1050 (gas: 7)\n 26049: u64 [s1 + 568] = 0\n 26053: u64 [s1 + 0x220] = a2\n 26057: u64 [s1 + 0x228] = t2\n 26061: a1 = s1 + 0x220\n 26065: u64 [s1 + 0x230] = a3\n 26069: a0 = 0\n 26071: ra = 1060, jump @19\n      : @1051 [@dyn 530] (gas: 7)\n 26077: u64 [s1 + 536] = 0\n 26081: u64 [s1 + 528] = 0\n 26085: u64 [s1 + 512] = 0x1\n 26090: a0 = 0x20\n 26093: a1 = s1 + 0x200\n 26097: u64 [s1 + 520] = 0\n 26101: ra = 1062, jump @19\n      : @1052 [@dyn 531] (gas: 3)\n 26107: a1 = u64 [s1 + 0xb0]\n 26111: a0 = i32 [a1]\n 26113: jump @1054 if a0 >u 63\n      : @1053 (gas: 2)\n 26117: u32 [a1 + 0] = 0x40\n 26120: fallthrough\n      : @1054 (gas: 4)\n 26121: a0 = sp + 0xffffffffffffffe0\n 26124: a0 = a0 & 0xffffffffffffffe0\n 26127: u64 [s1 + 0x40] = a0\n 26130: t0 = 1064, jump @1385\n      : @1055 [@dyn 532] (gas: 5)\n 26136: ra = 0x42a\n 26140: ecalli 6 // 'hash_keccak_256'\n 26142: a3 = u64 [s1 + 0x40]\n 26145: t0 = 0x42c\n 26149: jump @1383\n      : @1056 [@dyn 533] (gas: 2)\n 26152: a3 = u64 [s1 + 0x40]\n 26155: t0 = 1068, jump @1383\n      : @1057 [@dyn 534] (gas: 21)\n 26161: u64 [s1 + 0x38] = a0\n 26164: a0 = reverse a1\n 26166: u64 [s1 + 0x30] = a0\n 26169: a0 = reverse a2\n 26171: u64 [s1 + 0x20] = a0\n 26174: a0 = reverse a3\n 26176: u64 [s1 + 0x18] = a0\n 26179: a0 = sp + 0xffffffffffffffe0\n 26182: a0 = a0 & 0xffffffffffffffe0\n 26185: u64 [s1 + 0x40] = a0\n 26188: sp = a0\n 26190: u64 [s1 + 504] = 0\n 26194: a0 = u64 [s1 + 0x78]\n 26197: u64 [s1 + 0x1f0] = a0\n 26201: a0 = u64 [s1 + 0x80]\n 26205: u64 [s1 + 0x1e8] = a0\n 26209: a1 = s1 + 0x1e0\n 26213: a0 = u64 [s1 + 0x88]\n 26217: u64 [s1 + 0x1e0] = a0\n 26221: a0 = 0\n 26223: ra = 1070, jump @19\n      : @1058 [@dyn 535] (gas: 12)\n 26229: a0 = u64 [s1 + 0x18]\n 26232: a3 = s1 + 0x100\n 26236: u64 [a3 + 0xd8] = a0\n 26240: a0 = u64 [s1 + 0x20]\n 26243: u64 [a3 + 0xd0] = a0\n 26247: a0 = u64 [s1 + 0x30]\n 26250: u64 [a3 + 0xc8] = a0\n 26254: a0 = 0x20\n 26257: a1 = s1 + 0x1c0\n 26261: a2 = u64 [s1 + 0x38]\n 26264: u64 [a3 + 0xc0] = a2\n 26268: ra = 1072, jump @19\n      : @1059 [@dyn 536] (gas: 3)\n 26274: a1 = u64 [s1 + 0xb0]\n 26278: a0 = i32 [a1]\n 26280: jump @1061 if a0 >u 63\n      : @1060 (gas: 2)\n 26284: u32 [a1 + 0] = 0x40\n 26287: fallthrough\n      : @1061 (gas: 4)\n 26288: a0 = sp + 0xffffffffffffffe0\n 26291: a0 = a0 & 0xffffffffffffffe0\n 26294: u64 [s1 + 0xb0] = a0\n 26298: t0 = 1074, jump @1385\n      : @1062 [@dyn 537] (gas: 43)\n 26304: ecalli 6 // 'hash_keccak_256'\n 26306: a2 = u64 [s1 + 0xb0]\n 26310: a0 = u64 [a2]\n 26312: a0 = reverse a0\n 26314: a1 = u64 [a2 + 0x8]\n 26317: a5 = u64 [s1 + 0x40]\n 26320: u64 [a5 + 0x18] = a0\n 26323: a0 = u64 [a2 + 0x10]\n 26326: a2 = u64 [a2 + 0x18]\n 26329: a1 = reverse a1\n 26331: u64 [a5 + 0x10] = a1\n 26334: a0 = reverse a0\n 26336: u64 [a5 + 0x8] = a0\n 26339: a0 = reverse a2\n 26341: u64 [a5] = a0\n 26343: a0 = u64 [s1 + 0x90]\n 26347: a1 = u64 [s1 + 0x58]\n 26350: a0 = a1 - a0\n 26353: a2 = u64 [s1 + 0x48]\n 26356: a1 = a0 - a2\n 26359: a0 = a0 <u a2\n 26362: a2 = u64 [s1 + 0x98]\n 26366: a3 = u64 [s1 + 0x60]\n 26369: a2 = a3 - a2\n 26372: a3 = u64 [s1 + 0x28]\n 26375: a2 = a2 - a3\n 26378: a2 = a2 - a0\n 26381: a0 = u64 [s1 + 0xa0]\n 26385: a3 = u64 [s1 + 0x68]\n 26388: a0 = a3 - a0\n 26391: a3 = u64 [s1 + 0x50]\n 26394: a0 = a0 - a3\n 26397: a3 = u64 [s1 + 0xa8]\n 26401: a4 = u64 [s1 + 0x70]\n 26404: a3 = a4 - a3\n 26407: a4 = s1 + 0x200\n 26411: u64 [a4 + 0xf8] = a2\n 26415: u64 [a4 + 0xf0] = a1\n 26419: u64 [a4 + 0xe8] = a0\n 26423: u64 [a4 + 0xe0] = a3\n 26427: a1 = s1 + 0x2e0\n 26431: a0 = a5\n 26433: ra = 1076, jump @24\n      : @1063 [@dyn 538] (gas: 7)\n 26439: sp = s0 + 0xfffffffffffffce0\n 26443: a0 = sp + 0x300\n 26447: ra = u64 [a0 + 0x18]\n 26450: s0 = u64 [a0 + 0x10]\n 26453: s1 = u64 [a0 + 0x8]\n 26456: sp = sp + 0x320\n 26460: ret\n      : @1064 (gas: 8)\n 26462: u64 [s1 + 304] = 0\n 26466: u64 [s1 + 296] = 0\n 26470: u64 [s1 + 288] = 0\n 26474: a0 = 0xfb8f41b200000000\n 26484: a1 = s1 + 0x120\n 26488: u64 [s1 + 0x138] = a0\n 26492: a0 = 0\n 26494: ra = 1078, jump @19\n      : @1065 [@dyn 539] (gas: 11)\n 26500: u64 [s1 + 280] = 0\n 26504: a0 = u64 [s1 + 0x78]\n 26507: a3 = s1 + 0x100\n 26511: u64 [a3 + 0x10] = a0\n 26514: a0 = u64 [s1 + 0x80]\n 26518: u64 [a3 + 0x8] = a0\n 26521: a0 = 0x4\n 26524: a1 = s1 + 0x100\n 26528: a2 = u64 [s1 + 0x88]\n 26532: u64 [a3] = a2\n 26534: ra = 1080, jump @19\n      : @1066 [@dyn 540] (gas: 11)\n 26540: a0 = u64 [s1 + 0x60]\n 26543: u64 [s1 + 0xf8] = a0\n 26547: a0 = u64 [s1 + 0x58]\n 26550: u64 [s1 + 0xf0] = a0\n 26554: a0 = u64 [s1 + 0x68]\n 26557: u64 [s1 + 0xe8] = a0\n 26561: a0 = 0x24\n 26564: a1 = s1 + 0xe0\n 26568: a2 = u64 [s1 + 0x70]\n 26571: u64 [s1 + 0xe0] = a2\n 26575: ra = 1082, jump @19\n      : @1067 [@dyn 541] (gas: 11)\n 26581: a0 = u64 [s1 + 0x98]\n 26585: u64 [s1 + 0xd8] = a0\n 26589: a0 = u64 [s1 + 0x90]\n 26593: u64 [s1 + 0xd0] = a0\n 26597: a0 = u64 [s1 + 0xa0]\n 26601: u64 [s1 + 0xc8] = a0\n 26605: a0 = 0x44\n 26608: a1 = s1 + 0xc0\n 26612: a2 = u64 [s1 + 0xa8]\n 26616: u64 [s1 + 0xc0] = a2\n 26620: ra = 1084, jump @19\n      : @1068 [@dyn 542] (gas: 3)\n 26626: a0 = u64 [s1 + 0xb0]\n 26630: a0 = i32 [a0]\n 26632: jump @1070 if a0 >u 127\n      : @1069 (gas: 5)\n 26636: a1 = u64 [s1 + 0xb0]\n 26640: u32 [a1 + 0] = 0x80\n 26644: a0 = 0x1\n 26647: a2 = 0x64\n 26650: jump @1078\n      : @1070 (gas: 6)\n 26653: a0 = 0x1\n 26656: a2 = 0x64\n 26659: a1 = u64 [s1 + 0xb8]\n 26663: ra = 0x444\n 26667: ecalli 7 // 'seal_return'\n 26669: jump @1079\n      : @1071 (gas: 8)\n 26672: u64 [s1 + 368] = 0\n 26676: u64 [s1 + 360] = 0\n 26680: u64 [s1 + 352] = 0\n 26684: a0 = 0xe602df0500000000\n 26694: a1 = s1 + 0x160\n 26698: u64 [s1 + 0x178] = a0\n 26702: a0 = 0\n 26704: ra = 1086, jump @19\n      : @1072 [@dyn 543] (gas: 8)\n 26710: u64 [s1 + 344] = 0\n 26714: u64 [s1 + 336] = 0\n 26718: u64 [s1 + 328] = 0\n 26722: a0 = 0x4\n 26725: a1 = s1 + 0x140\n 26729: u64 [s1 + 320] = 0\n 26733: ra = 0x442\n 26737: jump @19\n      : @1073 (gas: 8)\n 26740: u64 [s1 + 432] = 0\n 26744: u64 [s1 + 424] = 0\n 26748: u64 [s1 + 416] = 0\n 26752: a0 = 0x94280d6200000000\n 26762: a1 = s1 + 0x1a0\n 26766: u64 [s1 + 0x1b8] = a0\n 26770: a0 = 0\n 26772: ra = 1088, jump @19\n      : @1074 [@dyn 544] (gas: 7)\n 26778: u64 [s1 + 408] = 0\n 26782: u64 [s1 + 400] = 0\n 26786: u64 [s1 + 392] = 0\n 26790: a0 = 0x4\n 26793: a1 = s1 + 0x180\n 26797: u64 [s1 + 384] = 0\n 26801: ra = 1090, jump @19\n      : @1075 [@dyn 545] (gas: 3)\n 26807: a0 = u64 [s1 + 0xb0]\n 26811: a0 = i32 [a0]\n 26813: jump @1077 if a0 >u 63\n      : @1076 (gas: 5)\n 26817: a1 = u64 [s1 + 0xb0]\n 26821: u32 [a1 + 0] = 0x40\n 26824: a0 = 0x1\n 26827: a2 = 0x24\n 26830: jump @1078\n      : @1077 (gas: 6)\n 26832: a0 = 0x1\n 26835: a2 = 0x24\n 26838: a1 = u64 [s1 + 0xb8]\n 26842: ra = 0x444\n 26846: ecalli 7 // 'seal_return'\n 26848: jump @1079\n      : @1078 (gas: 4)\n 26850: a1 = u64 [s1 + 0xb8]\n 26854: ra = 0x444\n 26858: ecalli 7 // 'seal_return'\n 26860: fallthrough\n      : @1079 [@dyn 546] (gas: 17)\n 26861: sp = sp + 0xfffffffffffffc20\n 26865: a3 = sp + 0x300\n 26869: u64 [a3 + 0xd8] = ra\n 26873: u64 [a3 + 0xd0] = s0\n 26877: u64 [a3 + 0xc8] = s1\n 26881: s0 = sp + 0x3e0\n 26885: sp = sp & 0xffffffffffffffe0\n 26888: s1 = sp\n 26890: a5 = u32 [a0 + 0x10]\n 26893: a3 = u64 [a0]\n 26895: a4 = u64 [a0 + 0x8]\n 26898: u64 [s1 + 0x78] = a3\n 26901: u64 [s1 + 0x68] = a5\n 26904: a0 = a3 | a5\n 26907: u64 [s1 + 0x70] = a4\n 26910: a0 = a0 | a4\n 26913: jump @1113 if a0 == 0\n      : @1080 (gas: 14)\n 26917: a0 = u64 [a1 + 0x10]\n 26920: a3 = u64 [a1 + 0x8]\n 26923: a1 = u64 [a1]\n 26925: a4 = 0xffffffffffffffff\n 26928: a5 = 0xffffffff\n 26938: a3 = a3 & a4\n 26941: a1 = a1 & a4\n 26944: a0 = a0 & a5\n 26947: u64 [s1 + 0x48] = a1\n 26950: u64 [s1 + 0x38] = a0\n 26953: a0 = a0 | a1\n 26956: u64 [s1 + 0x40] = a3\n 26959: a0 = a0 | a3\n 26962: jump @1118 if a0 == 0\n      : @1081 (gas: 9)\n 26966: a0 = u64 [a2 + 0x18]\n 26969: u64 [s1 + 0x98] = a0\n 26973: a0 = u64 [a2 + 0x10]\n 26976: u64 [s1 + 0x88] = a0\n 26980: a0 = u64 [a2 + 0x8]\n 26983: u64 [s1 + 0x80] = a0\n 26987: a0 = u64 [a2]\n 26989: u64 [s1 + 0x90] = a0\n 26993: ra = 1094, jump @1312\n      : @1082 [@dyn 547] (gas: 11)\n 26999: u64 [s1 + 824] = 0\n 27003: a0 = u64 [s1 + 0x68]\n 27006: a2 = s1 + 0x300\n 27010: u64 [a2 + 0x30] = a0\n 27013: a0 = u64 [s1 + 0x70]\n 27016: u64 [a2 + 0x28] = a0\n 27019: a1 = s1 + 0x320\n 27023: a0 = u64 [s1 + 0x78]\n 27026: u64 [a2 + 0x20] = a0\n 27029: a0 = 0\n 27031: ra = 1096, jump @19\n      : @1083 [@dyn 548] (gas: 7)\n 27037: u64 [s1 + 792] = 0\n 27041: u64 [s1 + 784] = 0\n 27045: u64 [s1 + 776] = 0\n 27049: a0 = 0x20\n 27052: a1 = s1 + 0x300\n 27056: u64 [s1 + 768] = 0\n 27060: ra = 1098, jump @19\n      : @1084 [@dyn 549] (gas: 3)\n 27066: a2 = 0x2026c\n 27071: a0 = i32 [0x2026c]\n 27076: jump @1086 if a0 >u 63\n      : @1085 (gas: 2)\n 27080: u32 [0x2026c] = 0x40\n 27086: fallthrough\n      : @1086 (gas: 15)\n 27087: u64 [s1 + 0x58] = a2\n 27090: a0 = sp + 0xffffffffffffffe0\n 27093: a2 = a0 & 0xffffffffffffffe0\n 27096: u64 [s1 + 0x50] = a2\n 27099: sp = a2\n 27101: a0 = 0x20280\n 27106: i32 a0 = a0 + 0\n 27108: i32 a2 = a2 + 0\n 27110: a1 = 0x40\n 27113: u64 [s1 + 0x60] = a0\n 27116: ra = 0x44c\n 27120: ecalli 6 // 'hash_keccak_256'\n 27122: a3 = u64 [s1 + 0x50]\n 27125: t0 = 0x44e\n 27129: jump @1373\n      : @1087 [@dyn 550] (gas: 2)\n 27132: a3 = u64 [s1 + 0x50]\n 27135: t0 = 1102, jump @1373\n      : @1088 [@dyn 551] (gas: 7)\n 27141: u64 [a4 + 0x58] = a3\n 27144: u64 [a4 + 0x50] = a2\n 27147: u64 [a4 + 0x48] = a1\n 27150: u64 [a4 + 0x40] = a0\n 27153: a0 = s1 + 0x2e0\n 27157: a1 = s1 + 0x340\n 27161: ra = 1104, jump @21\n      : @1089 [@dyn 552] (gas: 28)\n 27167: a1 = s1 + 0x200\n 27171: a2 = u64 [a1 + 0xf8]\n 27175: a0 = u64 [a1 + 0xf0]\n 27179: a5 = u64 [a1 + 0xe8]\n 27183: a4 = u64 [a1 + 0xe0]\n 27187: a1 = u64 [s1 + 0x98]\n 27191: t1 = a2 ^ a1\n 27194: u64 [s1 + 0x28] = a2\n 27197: a1 = a2 <u a1\n 27200: a2 = u64 [s1 + 0x88]\n 27204: a3 = a0 <u a2\n 27207: u64 [s1 + 0x10] = a3\n 27210: a1 = a3 if t1 == 0\n 27213: a3 = u64 [s1 + 0x80]\n 27217: t0 = a5 ^ a3\n 27220: u64 [s1 + 0x30] = a5\n 27223: a5 = a5 <u a3\n 27226: a3 = u64 [s1 + 0x90]\n 27230: u64 [s1 + 0x50] = a4\n 27233: a3 = a4 <u a3\n 27236: u64 [s1 + 0x18] = a3\n 27239: a5 = a3 if t0 == 0\n 27242: u64 [s1 + 0x20] = a0\n 27245: a2 = a2 ^ a0\n 27248: a0 = a2 | t1\n 27251: u64 [s1 + 0x8] = a5\n 27254: a1 = a5 if a0 == 0\n 27257: jump @1124 if a1 != 0\n      : @1090 (gas: 11)\n 27261: u64 [s1 + 728] = 0\n 27265: a0 = u64 [s1 + 0x78]\n 27268: a2 = s1 + 0x200\n 27272: u64 [a2 + 0xc0] = a0\n 27276: a0 = u64 [s1 + 0x70]\n 27279: u64 [a2 + 0xc8] = a0\n 27283: a1 = s1 + 0x2c0\n 27287: a0 = u64 [s1 + 0x68]\n 27290: u64 [a2 + 0xd0] = a0\n 27294: a0 = 0\n 27296: ra = 1106, jump @19\n      : @1091 [@dyn 553] (gas: 7)\n 27302: u64 [s1 + 696] = 0\n 27306: u64 [s1 + 688] = 0\n 27310: u64 [s1 + 680] = 0\n 27314: a0 = 0x20\n 27317: a1 = s1 + 0x2a0\n 27321: u64 [s1 + 672] = 0\n 27325: ra = 1108, jump @19\n      : @1092 [@dyn 554] (gas: 28)\n 27331: a0 = u64 [s1 + 0x88]\n 27335: a1 = u64 [s1 + 0x20]\n 27338: a0 = a1 - a0\n 27341: a2 = u64 [s1 + 0x8]\n 27344: a1 = a0 - a2\n 27347: u64 [s1 + 0x20] = a1\n 27350: a0 = a0 <u a2\n 27353: a1 = u64 [s1 + 0x98]\n 27357: a2 = u64 [s1 + 0x28]\n 27360: a1 = a2 - a1\n 27363: a2 = u64 [s1 + 0x10]\n 27366: a1 = a1 - a2\n 27369: a1 = a1 - a0\n 27372: u64 [s1 + 0x28] = a1\n 27375: a2 = u64 [s1 + 0x58]\n 27378: a0 = i32 [a2]\n 27380: a1 = u64 [s1 + 0x80]\n 27384: a3 = u64 [s1 + 0x30]\n 27387: a1 = a3 - a1\n 27390: a3 = u64 [s1 + 0x18]\n 27393: a1 = a1 - a3\n 27396: u64 [s1 + 0x30] = a1\n 27399: a4 = 0x3f\n 27402: a1 = u64 [s1 + 0x90]\n 27406: a3 = u64 [s1 + 0x50]\n 27409: a3 = a3 - a1\n 27412: u64 [s1 + 0x50] = a3\n 27415: jump @1094 if a4 <u a0\n      : @1093 (gas: 2)\n 27418: u32 [a2 + 0] = 0x40\n 27421: fallthrough\n      : @1094 (gas: 4)\n 27422: a0 = sp + 0xffffffffffffffe0\n 27425: a0 = a0 & 0xffffffffffffffe0\n 27428: u64 [s1 + 0x18] = a0\n 27431: t0 = 1110, jump @1339\n      : @1095 [@dyn 555] (gas: 5)\n 27437: ra = 0x458\n 27441: ecalli 6 // 'hash_keccak_256'\n 27443: a3 = u64 [s1 + 0x18]\n 27446: t0 = 0x45a\n 27450: jump @1373\n      : @1096 [@dyn 556] (gas: 2)\n 27453: a3 = u64 [s1 + 0x18]\n 27456: t0 = 1114, jump @1373\n      : @1097 [@dyn 557] (gas: 15)\n 27462: u64 [a4 + 0x78] = a3\n 27465: u64 [a4 + 0x70] = a2\n 27468: u64 [a4 + 0x68] = a1\n 27471: u64 [a4 + 0x60] = a0\n 27474: a0 = u64 [s1 + 0x28]\n 27477: u64 [a4 + 0x98] = a0\n 27481: a0 = u64 [s1 + 0x20]\n 27484: u64 [a4 + 0x90] = a0\n 27488: a0 = u64 [s1 + 0x30]\n 27491: u64 [a4 + 0x88] = a0\n 27495: a0 = u64 [s1 + 0x50]\n 27498: u64 [a4 + 0x80] = a0\n 27502: a0 = s1 + 0x360\n 27506: a1 = s1 + 0x380\n 27510: ra = 1116, jump @24\n      : @1098 [@dyn 558] (gas: 11)\n 27516: u64 [s1 + 664] = 0\n 27520: a0 = u64 [s1 + 0x38]\n 27523: a2 = s1 + 0x200\n 27527: u64 [a2 + 0x90] = a0\n 27531: a0 = u64 [s1 + 0x40]\n 27534: u64 [a2 + 0x88] = a0\n 27538: a1 = s1 + 0x280\n 27542: a0 = u64 [s1 + 0x48]\n 27545: u64 [a2 + 0x80] = a0\n 27549: a0 = 0\n 27551: ra = 1118, jump @19\n      : @1099 [@dyn 559] (gas: 1)\n 27557: t0 = 1120, jump @1377\n      : @1100 [@dyn 560] (gas: 1)\n 27563: ra = 1122, jump @19\n      : @1101 [@dyn 561] (gas: 7)\n 27569: a1 = u64 [s1 + 0x58]\n 27572: a0 = sp + 0xffffffffffffffe0\n 27575: a0 = a0 & 0xffffffffffffffe0\n 27578: u64 [s1 + 0x50] = a0\n 27581: sp = a0\n 27583: a0 = i32 [a1]\n 27585: jump @1103 if a0 >u 63\n      : @1102 (gas: 2)\n 27589: u32 [a1 + 0] = 0x40\n 27592: fallthrough\n      : @1103 (gas: 4)\n 27593: a0 = sp + 0xffffffffffffffe0\n 27596: a0 = a0 & 0xffffffffffffffe0\n 27599: u64 [s1 + 0x58] = a0\n 27602: t0 = 1124, jump @1339\n      : @1104 [@dyn 562] (gas: 17)\n 27608: ecalli 6 // 'hash_keccak_256'\n 27610: a3 = u64 [s1 + 0x58]\n 27613: a0 = u64 [a3 + 0x18]\n 27616: a1 = u64 [a3 + 0x10]\n 27619: a2 = u64 [a3 + 0x8]\n 27622: a3 = u64 [a3]\n 27624: a0 = reverse a0\n 27626: a4 = reverse a1\n 27628: a2 = reverse a2\n 27630: a3 = reverse a3\n 27632: a1 = u64 [s1 + 0x50]\n 27635: u64 [a1 + 0x18] = a3\n 27638: u64 [a1 + 0x10] = a2\n 27641: u64 [a1 + 0x8] = a4\n 27644: u64 [a1] = a0\n 27646: a0 = s1 + 0x240\n 27650: ra = 1126, jump @21\n      : @1105 [@dyn 563] (gas: 30)\n 27656: a0 = u64 [s1 + 0x248]\n 27660: a1 = u64 [s1 + 0x240]\n 27664: t0 = u64 [s1 + 0x258]\n 27668: a3 = u64 [s1 + 0x250]\n 27672: a4 = u64 [s1 + 0x80]\n 27676: a4 = a4 + a0\n 27679: a5 = u64 [s1 + 0x90]\n 27683: a5 = a5 + a1\n 27686: a1 = a5 <u a1\n 27689: a4 = a4 + a1\n 27692: a2 = a4 ^ a0\n 27695: a0 = a4 <u a0\n 27698: a0 = a1 if a2 == 0\n 27701: a1 = u64 [s1 + 0x88]\n 27705: a1 = a1 + a3\n 27708: a2 = u64 [s1 + 0x98]\n 27712: t0 = t0 + a2\n 27715: a2 = a1 <u a3\n 27718: a2 = a2 + t0\n 27721: a0 = a0 + a1\n 27724: a1 = a0 <u a1\n 27727: a1 = a1 + a2\n 27730: a2 = s1 + 0x300\n 27734: u64 [a2 + 0xa0] = a5\n 27738: u64 [a2 + 0xa8] = a4\n 27742: u64 [a2 + 0xb0] = a0\n 27746: u64 [a2 + 0xb8] = a1\n 27750: a1 = s1 + 0x3a0\n 27754: a0 = u64 [s1 + 0x50]\n 27757: ra = 1128, jump @24\n      : @1106 [@dyn 564] (gas: 3)\n 27763: a0 = s1 + 0x220\n 27767: a1 = 0x40\n 27770: ra = 1130, jump @17\n      : @1107 [@dyn 565] (gas: 6)\n 27776: a4 = s1 + 0x200\n 27780: a3 = u64 [a4 + 0x38]\n 27783: a1 = u64 [a4 + 0x30]\n 27786: a2 = u64 [a4 + 0x28]\n 27789: a0 = u64 [a4 + 0x20]\n 27792: t0 = 1132, jump @1332\n      : @1108 [@dyn 566] (gas: 1)\n 27798: jump @1112 if a1 != 0\n      : @1109 (gas: 12)\n 27802: a1 = u64 [s1 + 0x90]\n 27806: a3 = s1 + 0x200\n 27810: u64 [a3] = a1\n 27812: a1 = u64 [s1 + 0x80]\n 27816: u64 [a3 + 0x8] = a1\n 27819: a1 = u64 [s1 + 0x88]\n 27823: u64 [a3 + 0x10] = a1\n 27826: a1 = s1 + 0x200\n 27830: a2 = u64 [s1 + 0x98]\n 27834: u64 [a3 + 0x18] = a2\n 27837: u64 [s1 + 0x98] = a0\n 27841: ra = 1134, jump @19\n      : @1110 [@dyn 567] (gas: 29)\n 27847: u64 [s1 + 440] = 0\n 27851: a0 = u64 [s1 + 0x38]\n 27854: a5 = s1 + 0x100\n 27858: u64 [a5 + 0xb0] = a0\n 27862: a0 = u64 [s1 + 0x40]\n 27865: u64 [a5 + 0xa8] = a0\n 27869: a0 = u64 [s1 + 0x48]\n 27872: u64 [a5 + 0xa0] = a0\n 27876: u64 [s1 + 472] = 0\n 27880: a0 = u64 [s1 + 0x68]\n 27883: u64 [a5 + 0xd0] = a0\n 27887: a0 = u64 [s1 + 0x70]\n 27890: u64 [a5 + 0xc8] = a0\n 27894: a0 = u64 [0x201c8]\n 27899: a1 = u64 [0x201d0]\n 27904: a2 = u64 [0x201d8]\n 27909: a3 = u64 [s1 + 0x78]\n 27912: u64 [a5 + 0xc0] = a3\n 27916: u64 [a5 + 0xf8] = a0\n 27920: u64 [a5 + 0xf0] = a1\n 27924: u64 [a5 + 0xe8] = a2\n 27928: a0 = u64 [0x201e0]\n 27933: a1 = 0x20\n 27936: a2 = s1 + 0x1e0\n 27940: a3 = s1 + 0x1c0\n 27944: a4 = s1 + 0x1a0\n 27948: u64 [a5 + 0xe0] = a0\n 27952: a0 = u64 [s1 + 0x98]\n 27956: ra = 1136, jump @27\n      : @1111 [@dyn 568] (gas: 7)\n 27962: sp = s0 + 0xfffffffffffffc20\n 27966: a0 = sp + 0x300\n 27970: ra = u64 [a0 + 0xd8]\n 27974: s0 = u64 [a0 + 0xd0]\n 27978: s1 = u64 [a0 + 0xc8]\n 27982: sp = sp + 0x3e0\n 27986: ret\n      : @1112 (gas: 1)\n 27988: trap\n      : @1113 (gas: 8)\n 27989: u64 [s1 + 208] = 0\n 27993: u64 [s1 + 200] = 0\n 27997: u64 [s1 + 192] = 0\n 28001: a0 = 0x96c6fd1e00000000\n 28011: a1 = s1 + 0xc0\n 28015: u64 [s1 + 0xd8] = a0\n 28019: a0 = 0\n 28021: ra = 1138, jump @19\n      : @1114 [@dyn 569] (gas: 7)\n 28027: u64 [s1 + 184] = 0\n 28031: u64 [s1 + 176] = 0\n 28035: u64 [s1 + 168] = 0\n 28039: a0 = 0x4\n 28042: a1 = s1 + 0xa0\n 28046: u64 [s1 + 160] = 0\n 28050: ra = 1140, jump @19\n      : @1115 [@dyn 570] (gas: 2)\n 28056: a1 = i32 [0x2026c]\n 28061: jump @1117 if a1 >u 63\n      : @1116 (gas: 3)\n 28065: u32 [0x2026c] = 0x40\n 28071: a1 = 0x20280\n 28076: jump @1123\n      : @1117 (gas: 2)\n 28078: a1 = 0x20280\n 28083: jump @1123\n      : @1118 (gas: 8)\n 28085: u64 [s1 + 272] = 0\n 28089: u64 [s1 + 264] = 0\n 28093: u64 [s1 + 256] = 0\n 28097: a0 = 0xec442f0500000000\n 28107: a1 = s1 + 0x100\n 28111: u64 [s1 + 0x118] = a0\n 28115: a0 = 0\n 28117: ra = 1142, jump @19\n      : @1119 [@dyn 571] (gas: 7)\n 28123: u64 [s1 + 248] = 0\n 28127: u64 [s1 + 240] = 0\n 28131: u64 [s1 + 232] = 0\n 28135: a0 = 0x4\n 28138: a1 = s1 + 0xe0\n 28142: u64 [s1 + 224] = 0\n 28146: ra = 1144, jump @19\n      : @1120 [@dyn 572] (gas: 2)\n 28152: a1 = i32 [0x2026c]\n 28157: jump @1122 if a1 >u 63\n      : @1121 (gas: 3)\n 28161: u32 [0x2026c] = 0x40\n 28167: a1 = 0x20280\n 28172: jump @1123\n      : @1122 (gas: 2)\n 28174: a1 = 0x20280\n 28179: fallthrough\n      : @1123 (gas: 5)\n 28180: i32 a1 = a1 + 0\n 28182: a0 = 0x1\n 28185: a2 = 0x24\n 28188: ecalli 7 // 'seal_return'\n 28190: fallthrough\n      : @1124 (gas: 8)\n 28191: u64 [s1 + 400] = 0\n 28195: u64 [s1 + 392] = 0\n 28199: u64 [s1 + 384] = 0\n 28203: a0 = 0xe450d38c00000000\n 28213: a1 = s1 + 0x180\n 28217: u64 [s1 + 0x198] = a0\n 28221: a0 = 0\n 28223: ra = 1146, jump @19\n      : @1125 [@dyn 573] (gas: 10)\n 28229: u64 [s1 + 376] = 0\n 28233: a0 = u64 [s1 + 0x68]\n 28236: u64 [s1 + 0x170] = a0\n 28240: a0 = u64 [s1 + 0x70]\n 28243: u64 [s1 + 0x168] = a0\n 28247: a0 = 0x4\n 28250: a1 = s1 + 0x160\n 28254: a2 = u64 [s1 + 0x78]\n 28257: u64 [s1 + 0x160] = a2\n 28261: ra = 1148, jump @19\n      : @1126 [@dyn 574] (gas: 11)\n 28267: a0 = u64 [s1 + 0x28]\n 28270: u64 [s1 + 0x158] = a0\n 28274: a0 = u64 [s1 + 0x20]\n 28277: u64 [s1 + 0x150] = a0\n 28281: a0 = u64 [s1 + 0x30]\n 28284: u64 [s1 + 0x148] = a0\n 28288: a0 = 0x24\n 28291: a1 = s1 + 0x140\n 28295: a2 = u64 [s1 + 0x50]\n 28298: u64 [s1 + 0x140] = a2\n 28302: ra = 1150, jump @19\n      : @1127 [@dyn 575] (gas: 12)\n 28308: a0 = u64 [s1 + 0x98]\n 28312: a3 = s1 + 0x100\n 28316: u64 [a3 + 0x38] = a0\n 28319: a0 = u64 [s1 + 0x88]\n 28323: u64 [a3 + 0x30] = a0\n 28326: a0 = u64 [s1 + 0x80]\n 28330: u64 [a3 + 0x28] = a0\n 28333: a0 = 0x44\n 28336: a1 = s1 + 0x120\n 28340: a2 = u64 [s1 + 0x90]\n 28344: u64 [a3 + 0x20] = a2\n 28347: ra = 1152, jump @19\n      : @1128 [@dyn 576] (gas: 3)\n 28353: a0 = u64 [s1 + 0x58]\n 28356: a0 = i32 [a0]\n 28358: jump @1130 if a0 >u 127\n      : @1129 (gas: 3)\n 28362: a1 = u64 [s1 + 0x58]\n 28365: u32 [a1 + 0] = 0x80\n 28369: fallthrough\n      : @1130 (gas: 6)\n 28370: a0 = 0x1\n 28373: a2 = 0x64\n 28376: a1 = u64 [s1 + 0x60]\n 28379: ra = 0x482\n 28383: ecalli 7 // 'seal_return'\n 28385: fallthrough\n      : @1131 [@dyn 577] (gas: 22)\n 28386: sp = sp + 0xfffffffffffffe60\n 28390: u64 [sp + 0x198] = ra\n 28394: u64 [sp + 0x190] = s0\n 28398: u64 [sp + 0x188] = s1\n 28402: s0 = sp + 0x1a0\n 28406: sp = sp & 0xffffffffffffffe0\n 28409: s1 = sp\n 28411: a0 = u64 [0x201e8]\n 28416: u64 [s1 + 0x38] = a0\n 28419: u64 [s1 + 0x178] = a0\n 28423: a1 = u64 [0x201f0]\n 28428: a2 = u64 [0x201f8]\n 28433: a0 = u64 [0x20200]\n 28438: u64 [s1 + 0x28] = a1\n 28441: u64 [s1 + 0x170] = a1\n 28445: u64 [s1 + 0x20] = a2\n 28448: u64 [s1 + 0x168] = a2\n 28452: a1 = s1 + 0x160\n 28456: u64 [s1 + 0x30] = a0\n 28459: u64 [s1 + 0x160] = a0\n 28463: a0 = 0\n 28465: ra = 1156, jump @19\n      : @1132 [@dyn 578] (gas: 1)\n 28471: t0 = 1158, jump @1347\n      : @1133 [@dyn 579] (gas: 1)\n 28477: ra = 1160, jump @19\n      : @1134 [@dyn 580] (gas: 3)\n 28483: a1 = 0x2026c\n 28488: a0 = i32 [0x2026c]\n 28493: jump @1136 if a0 >u 63\n      : @1135 (gas: 2)\n 28497: u32 [0x2026c] = 0x40\n 28503: fallthrough\n      : @1136 (gas: 14)\n 28504: a0 = sp + 0xffffffffffffffe0\n 28507: a2 = a0 & 0xffffffffffffffe0\n 28510: u64 [s1 + 0x68] = a2\n 28513: sp = a2\n 28515: a0 = 0x20280\n 28520: i32 a0 = a0 + 0\n 28522: i32 a2 = a2 + 0\n 28524: u64 [s1 + 0x78] = a1\n 28527: a1 = 0x40\n 28530: u64 [s1 + 0x70] = a0\n 28533: ra = 0x48a\n 28537: ecalli 6 // 'hash_keccak_256'\n 28539: t0 = 0x48c\n 28543: jump @1348\n      : @1137 [@dyn 581] (gas: 1)\n 28546: t0 = 1164, jump @1348\n      : @1138 [@dyn 582] (gas: 8)\n 28552: a0 = 0x30280\n 28557: u64 [s1 + 0x68] = a0\n 28560: i32 a0 = a0 + 0\n 28562: u64 [s1 + 0x18] = a0\n 28565: ra = 0x48e\n 28569: ecalli 3 // 'caller'\n 28571: t0 = 0x490\n 28575: jump @1337\n      : @1139 [@dyn 583] (gas: 1)\n 28578: t0 = 1168, jump @1337\n      : @1140 [@dyn 584] (gas: 1)\n 28584: ra = 1170, jump @19\n      : @1141 [@dyn 585] (gas: 1)\n 28590: t0 = 1172, jump @1369\n      : @1142 [@dyn 586] (gas: 1)\n 28596: ra = 1174, jump @19\n      : @1143 [@dyn 587] (gas: 3)\n 28602: a1 = u64 [s1 + 0x78]\n 28605: a0 = i32 [a1]\n 28607: jump @1145 if a0 >u 63\n      : @1144 (gas: 3)\n 28611: u32 [a1 + 0] = 0x40\n 28614: t0 = 0x498\n 28618: jump @1390\n      : @1145 (gas: 1)\n 28621: t0 = 1176, jump @1390\n      : @1146 [@dyn 588] (gas: 4)\n 28627: ra = 0x49a\n 28631: ecalli 6 // 'hash_keccak_256'\n 28633: t0 = 0x49c\n 28637: jump @1350\n      : @1147 [@dyn 589] (gas: 1)\n 28640: t0 = 1180, jump @1350\n      : @1148 [@dyn 590] (gas: 1)\n 28646: ra = 1182, jump @21\n      : @1149 [@dyn 591] (gas: 2)\n 28652: a0 = u8 [s1 + 0xe0]\n 28656: jump @1151 if a0 == 0\n      : @1150 (gas: 6)\n 28659: sp = s0 + 0xfffffffffffffe60\n 28663: ra = u64 [sp + 0x198]\n 28667: s0 = u64 [sp + 0x190]\n 28671: s1 = u64 [sp + 0x188]\n 28675: sp = sp + 0x1a0\n 28679: ret\n      : @1151 (gas: 1)\n 28681: t0 = 1184, jump @1363\n      : @1152 [@dyn 592] (gas: 1)\n 28687: ra = 1186, jump @19\n      : @1153 [@dyn 593] (gas: 5)\n 28693: a0 = u64 [s1 + 0x18]\n 28696: ra = 0x4a4\n 28700: ecalli 3 // 'caller'\n 28702: t0 = 0x4a6\n 28706: jump @1343\n      : @1154 [@dyn 594] (gas: 1)\n 28709: t0 = 1190, jump @1343\n      : @1155 [@dyn 595] (gas: 1)\n 28715: ra = 1192, jump @19\n      : @1156 [@dyn 596] (gas: 11)\n 28721: a0 = u64 [s1 + 0x38]\n 28724: u64 [s1 + 0x98] = a0\n 28728: a0 = u64 [s1 + 0x28]\n 28731: u64 [s1 + 0x90] = a0\n 28735: a0 = u64 [s1 + 0x20]\n 28738: u64 [s1 + 0x88] = a0\n 28742: a0 = 0x24\n 28745: a1 = s1 + 0x80\n 28749: a2 = u64 [s1 + 0x30]\n 28752: u64 [s1 + 0x80] = a2\n 28756: ra = 1194, jump @19\n      : @1157 [@dyn 597] (gas: 3)\n 28762: a0 = u64 [s1 + 0x78]\n 28765: a0 = i32 [a0]\n 28767: jump @1159 if a0 >u 95\n      : @1158 (gas: 3)\n 28771: a1 = u64 [s1 + 0x78]\n 28774: u32 [a1 + 0] = 0x60\n 28777: fallthrough\n      : @1159 (gas: 6)\n 28778: a0 = 0x1\n 28781: a2 = 0x44\n 28784: a1 = u64 [s1 + 0x70]\n 28787: ra = 0x4ac\n 28791: ecalli 7 // 'seal_return'\n 28793: fallthrough\n      : @1160 [@dyn 598] (gas: 22)\n 28794: sp = sp + 0xfffffffffffffe60\n 28798: u64 [sp + 0x198] = ra\n 28802: u64 [sp + 0x190] = s0\n 28806: u64 [sp + 0x188] = s1\n 28810: s0 = sp + 0x1a0\n 28814: sp = sp & 0xffffffffffffffe0\n 28817: s1 = sp\n 28819: a2 = u64 [a0]\n 28821: a1 = u64 [a0 + 0x8]\n 28824: a3 = u64 [a0 + 0x10]\n 28827: a0 = u64 [a0 + 0x18]\n 28830: u64 [s1 + 0x20] = a0\n 28833: u64 [s1 + 0x178] = a0\n 28837: u64 [s1 + 0x28] = a3\n 28840: u64 [s1 + 0x170] = a3\n 28844: u64 [s1 + 0x30] = a1\n 28847: u64 [s1 + 0x168] = a1\n 28851: a1 = s1 + 0x160\n 28855: u64 [s1 + 0x38] = a2\n 28858: u64 [s1 + 0x160] = a2\n 28862: a0 = 0\n 28864: ra = 1198, jump @19\n      : @1161 [@dyn 599] (gas: 1)\n 28870: t0 = 1200, jump @1347\n      : @1162 [@dyn 600] (gas: 1)\n 28876: ra = 1202, jump @19\n      : @1163 [@dyn 601] (gas: 3)\n 28882: a1 = 0x2026c\n 28887: a0 = i32 [0x2026c]\n 28892: jump @1165 if a0 >u 63\n      : @1164 (gas: 2)\n 28896: u32 [0x2026c] = 0x40\n 28902: fallthrough\n      : @1165 (gas: 14)\n 28903: a0 = sp + 0xffffffffffffffe0\n 28906: a2 = a0 & 0xffffffffffffffe0\n 28909: u64 [s1 + 0x68] = a2\n 28912: sp = a2\n 28914: a0 = 0x20280\n 28919: i32 a0 = a0 + 0\n 28921: i32 a2 = a2 + 0\n 28923: u64 [s1 + 0x78] = a1\n 28926: a1 = 0x40\n 28929: u64 [s1 + 0x70] = a0\n 28932: ra = 0x4b4\n 28936: ecalli 6 // 'hash_keccak_256'\n 28938: t0 = 0x4b6\n 28942: jump @1348\n      : @1166 [@dyn 602] (gas: 1)\n 28945: t0 = 1206, jump @1348\n      : @1167 [@dyn 603] (gas: 8)\n 28951: a0 = 0x30280\n 28956: u64 [s1 + 0x68] = a0\n 28959: i32 a0 = a0 + 0\n 28961: u64 [s1 + 0x18] = a0\n 28964: ra = 0x4b8\n 28968: ecalli 3 // 'caller'\n 28970: t0 = 0x4ba\n 28974: jump @1337\n      : @1168 [@dyn 604] (gas: 1)\n 28977: t0 = 1210, jump @1337\n      : @1169 [@dyn 605] (gas: 1)\n 28983: ra = 1212, jump @19\n      : @1170 [@dyn 606] (gas: 1)\n 28989: t0 = 1214, jump @1369\n      : @1171 [@dyn 607] (gas: 1)\n 28995: ra = 1216, jump @19\n      : @1172 [@dyn 608] (gas: 3)\n 29001: a1 = u64 [s1 + 0x78]\n 29004: a0 = i32 [a1]\n 29006: jump @1174 if a0 >u 63\n      : @1173 (gas: 3)\n 29010: u32 [a1 + 0] = 0x40\n 29013: t0 = 0x4c2\n 29017: jump @1390\n      : @1174 (gas: 1)\n 29020: t0 = 1218, jump @1390\n      : @1175 [@dyn 609] (gas: 4)\n 29026: ra = 0x4c4\n 29030: ecalli 6 // 'hash_keccak_256'\n 29032: t0 = 0x4c6\n 29036: jump @1350\n      : @1176 [@dyn 610] (gas: 1)\n 29039: t0 = 1222, jump @1350\n      : @1177 [@dyn 611] (gas: 1)\n 29045: ra = 1224, jump @21\n      : @1178 [@dyn 612] (gas: 2)\n 29051: a0 = u8 [s1 + 0xe0]\n 29055: jump @1180 if a0 == 0\n      : @1179 (gas: 6)\n 29058: sp = s0 + 0xfffffffffffffe60\n 29062: ra = u64 [sp + 0x198]\n 29066: s0 = u64 [sp + 0x190]\n 29070: s1 = u64 [sp + 0x188]\n 29074: sp = sp + 0x1a0\n 29078: ret\n      : @1180 (gas: 1)\n 29080: t0 = 1226, jump @1363\n      : @1181 [@dyn 613] (gas: 1)\n 29086: ra = 1228, jump @19\n      : @1182 [@dyn 614] (gas: 5)\n 29092: a0 = u64 [s1 + 0x18]\n 29095: ra = 0x4ce\n 29099: ecalli 3 // 'caller'\n 29101: t0 = 0x4d0\n 29105: jump @1343\n      : @1183 [@dyn 615] (gas: 1)\n 29108: t0 = 1232, jump @1343\n      : @1184 [@dyn 616] (gas: 1)\n 29114: ra = 1234, jump @19\n      : @1185 [@dyn 617] (gas: 11)\n 29120: a0 = u64 [s1 + 0x20]\n 29123: u64 [s1 + 0x98] = a0\n 29127: a0 = u64 [s1 + 0x28]\n 29130: u64 [s1 + 0x90] = a0\n 29134: a0 = u64 [s1 + 0x30]\n 29137: u64 [s1 + 0x88] = a0\n 29141: a0 = 0x24\n 29144: a1 = s1 + 0x80\n 29148: a2 = u64 [s1 + 0x38]\n 29151: u64 [s1 + 0x80] = a2\n 29155: ra = 1236, jump @19\n      : @1186 [@dyn 618] (gas: 3)\n 29161: a0 = u64 [s1 + 0x78]\n 29164: a0 = i32 [a0]\n 29166: jump @1188 if a0 >u 95\n      : @1187 (gas: 3)\n 29170: a1 = u64 [s1 + 0x78]\n 29173: u32 [a1 + 0] = 0x60\n 29176: fallthrough\n      : @1188 (gas: 7)\n 29177: a0 = 0x1\n 29180: a2 = 0x44\n 29183: a1 = u64 [s1 + 0x70]\n 29186: ra = 0x4d6\n 29190: ecalli 7 // 'seal_return'\n 29192: t0 = 0x4d8\n 29196: jump @1381\n      : @1189 [@dyn 619] (gas: 1)\n 29199: t0 = 1240, jump @1381\n      : @1190 [@dyn 620] (gas: 21)\n 29205: u64 [s1 + 0x50] = a3\n 29208: a3 = u64 [a2 + 0x8]\n 29211: u64 [s1 + 0x70] = a3\n 29214: a2 = u64 [a2]\n 29216: u64 [s1 + 0x78] = a2\n 29219: a2 = u64 [a1]\n 29221: a3 = u64 [a1 + 0x8]\n 29224: a4 = u64 [a1 + 0x10]\n 29227: a1 = u64 [a1 + 0x18]\n 29230: u64 [s1 + 0x58] = a0\n 29233: u64 [s1 + 0x8] = a1\n 29236: u64 [s1 + 0x238] = a1\n 29240: u64 [s1 + 0x10] = a4\n 29243: u64 [s1 + 0x230] = a4\n 29247: u64 [s1 + 0x18] = a3\n 29250: u64 [s1 + 0x228] = a3\n 29254: a1 = s1 + 0x220\n 29258: u64 [s1 + 0x20] = a2\n 29261: u64 [s1 + 0x220] = a2\n 29265: a0 = 0\n 29267: ra = 1242, jump @19\n      : @1191 [@dyn 621] (gas: 1)\n 29273: t0 = 1244, jump @1336\n      : @1192 [@dyn 622] (gas: 1)\n 29279: ra = 1246, jump @19\n      : @1193 [@dyn 623] (gas: 3)\n 29285: a1 = 0x2026c\n 29290: a0 = i32 [0x2026c]\n 29295: jump @1195 if a0 >u 63\n      : @1194 (gas: 2)\n 29299: u32 [0x2026c] = 0x40\n 29305: fallthrough\n      : @1195 (gas: 6)\n 29306: a0 = sp + 0xffffffffffffffe0\n 29309: a2 = a0 & 0xffffffffffffffe0\n 29312: u64 [s1 + 0x48] = a2\n 29315: sp = a2\n 29317: a0 = 0x20280\n 29322: t0 = 1248, jump @1395\n      : @1196 [@dyn 624] (gas: 4)\n 29328: ra = 0x4e2\n 29332: ecalli 6 // 'hash_keccak_256'\n 29334: t0 = 0x4e4\n 29338: jump @1322\n      : @1197 [@dyn 625] (gas: 1)\n 29341: t0 = 1252, jump @1322\n      : @1198 [@dyn 626] (gas: 1)\n 29347: ra = 1254, jump @19\n      : @1199 [@dyn 627] (gas: 1)\n 29353: t0 = 1256, jump @1346\n      : @1200 [@dyn 628] (gas: 1)\n 29359: ra = 1258, jump @19\n      : @1201 [@dyn 629] (gas: 3)\n 29365: a1 = u64 [s1 + 0x68]\n 29368: a0 = i32 [a1]\n 29370: jump @1203 if a0 >u 63\n      : @1202 (gas: 3)\n 29374: u32 [a1 + 0] = 0x40\n 29377: t0 = 0x4ec\n 29381: jump @1331\n      : @1203 (gas: 1)\n 29384: t0 = 1260, jump @1331\n      : @1204 [@dyn 630] (gas: 4)\n 29390: ra = 0x4ee\n 29394: ecalli 6 // 'hash_keccak_256'\n 29396: t0 = 0x4f0\n 29400: jump @1329\n      : @1205 [@dyn 631] (gas: 1)\n 29403: t0 = 1264, jump @1329\n      : @1206 [@dyn 632] (gas: 1)\n 29409: ra = 1266, jump @21\n      : @1207 [@dyn 633] (gas: 2)\n 29415: a0 = u8 [s1 + 0x1a0]\n 29419: jump @1209 if a0 == 0\n      : @1208 (gas: 5)\n 29422: a1 = 0\n 29424: a0 = 0\n 29426: a2 = u64 [s1 + 0x58]\n 29429: t0 = 0x518\n 29433: jump @1334\n      : @1209 (gas: 11)\n 29436: a0 = u64 [s1 + 0x20]\n 29439: u64 [s1 + 0x180] = a0\n 29443: a0 = u64 [s1 + 0x18]\n 29446: u64 [s1 + 0x188] = a0\n 29450: a0 = u64 [s1 + 0x10]\n 29453: u64 [s1 + 0x190] = a0\n 29457: a1 = s1 + 0x180\n 29461: a0 = u64 [s1 + 0x8]\n 29464: u64 [s1 + 0x198] = a0\n 29468: a0 = 0\n 29470: ra = 1268, jump @19\n      : @1210 [@dyn 634] (gas: 1)\n 29476: t0 = 1270, jump @1335\n      : @1211 [@dyn 635] (gas: 1)\n 29482: ra = 1272, jump @19\n      : @1212 [@dyn 636] (gas: 3)\n 29488: a1 = u64 [s1 + 0x68]\n 29491: a0 = i32 [a1]\n 29493: jump @1214 if a0 >u 63\n      : @1213 (gas: 3)\n 29497: u32 [a1 + 0] = 0x40\n 29500: t0 = 0x4fa\n 29504: jump @1331\n      : @1214 (gas: 1)\n 29507: t0 = 1274, jump @1331\n      : @1215 [@dyn 637] (gas: 4)\n 29513: ra = 0x4fc\n 29517: ecalli 6 // 'hash_keccak_256'\n 29519: t0 = 0x4fe\n 29523: jump @1323\n      : @1216 [@dyn 638] (gas: 1)\n 29526: t0 = 1278, jump @1323\n      : @1217 [@dyn 639] (gas: 1)\n 29532: ra = 1280, jump @19\n      : @1218 [@dyn 640] (gas: 1)\n 29538: t0 = 1282, jump @1345\n      : @1219 [@dyn 641] (gas: 1)\n 29544: ra = 1284, jump @19\n      : @1220 [@dyn 642] (gas: 3)\n 29550: a1 = u64 [s1 + 0x68]\n 29553: a0 = i32 [a1]\n 29555: jump @1222 if a0 >u 63\n      : @1221 (gas: 2)\n 29559: u32 [a1 + 0] = 0x40\n 29562: fallthrough\n      : @1222 (gas: 4)\n 29563: a0 = sp + 0xffffffffffffffe0\n 29566: a0 = a0 & 0xffffffffffffffe0\n 29569: u64 [s1 + 0x68] = a0\n 29572: t0 = 1286, jump @1339\n      : @1223 [@dyn 643] (gas: 4)\n 29578: ra = 0x508\n 29582: ecalli 6 // 'hash_keccak_256'\n 29584: t0 = 0x50a\n 29588: jump @1328\n      : @1224 [@dyn 644] (gas: 1)\n 29591: t0 = 1290, jump @1328\n      : @1225 [@dyn 645] (gas: 1)\n 29597: ra = 1292, jump @21\n      : @1226 [@dyn 646] (gas: 1)\n 29603: t0 = 1294, jump @1333\n      : @1227 [@dyn 647] (gas: 1)\n 29609: ra = 1296, jump @24\n      : @1228 [@dyn 648] (gas: 8)\n 29615: a0 = 0x30280\n 29620: u64 [s1 + 0x68] = a0\n 29623: i32 a0 = a0 + 0\n 29625: ra = 0x512\n 29629: ecalli 3 // 'caller'\n 29631: a2 = u64 [s1 + 0x68]\n 29634: t0 = 0x514\n 29638: jump @1325\n      : @1229 [@dyn 649] (gas: 2)\n 29641: a2 = u64 [s1 + 0x68]\n 29644: t0 = 1300, jump @1325\n      : @1230 [@dyn 650] (gas: 40)\n 29650: t0 = a1 | a0\n 29653: a3 = a3 >> 0x20\n 29656: a2 = reverse a2\n 29658: a1 = a2 << 0x20\n 29661: a1 = a1 | a3\n 29664: a2 = a2 >> 0x20\n 29667: u64 [s1 + 152] = 0\n 29671: u64 [s1 + 184] = 0\n 29675: a0 = u64 [s1]\n 29677: u64 [s1 + 0xb0] = a0\n 29681: a0 = u64 [s1 + 0x70]\n 29684: u64 [s1 + 0xa8] = a0\n 29688: a0 = u64 [s1 + 0x78]\n 29691: u64 [s1 + 0xa0] = a0\n 29695: a0 = u64 [s1 + 0x8]\n 29698: u64 [s1 + 0xd8] = a0\n 29702: a0 = u64 [s1 + 0x10]\n 29705: u64 [s1 + 0xd0] = a0\n 29709: a0 = u64 [s1 + 0x18]\n 29712: u64 [s1 + 0xc8] = a0\n 29716: a0 = u64 [s1 + 0x20]\n 29719: u64 [s1 + 0xc0] = a0\n 29723: a3 = u64 [0x20208]\n 29728: a4 = u64 [0x20210]\n 29733: a5 = u64 [0x20218]\n 29738: a0 = u64 [0x20220]\n 29743: u64 [s1 + 0xf8] = a3\n 29747: u64 [s1 + 0xf0] = a4\n 29751: u64 [s1 + 0xe8] = a5\n 29755: u64 [s1 + 0xe0] = a0\n 29759: u64 [s1 + 0x90] = a2\n 29763: u64 [s1 + 0x88] = a1\n 29767: a2 = s1 + 0xe0\n 29771: a3 = s1 + 0xc0\n 29775: a4 = s1 + 0xa0\n 29779: a5 = s1 + 0x80\n 29783: u64 [s1 + 0x80] = t0\n 29787: a0 = 0\n 29789: a1 = 0\n 29791: ra = 1302, jump @30\n      : @1231 [@dyn 651] (gas: 4)\n 29797: a0 = 0\n 29799: a1 = 0x1\n 29802: a2 = u64 [s1 + 0x58]\n 29805: t0 = 1304, jump @1334\n      : @1232 [@dyn 652] (gas: 1)\n 29811: ret\n      : @1233 [@dyn 653] (gas: 21)\n 29813: u64 [s1 + 0x38] = a3\n 29816: a3 = u64 [a2 + 0x8]\n 29819: u64 [s1 + 0x70] = a3\n 29822: a2 = u64 [a2]\n 29824: u64 [s1 + 0x78] = a2\n 29827: a2 = u64 [a1]\n 29829: a3 = u64 [a1 + 0x8]\n 29832: a4 = u64 [a1 + 0x10]\n 29835: a1 = u64 [a1 + 0x18]\n 29838: u64 [s1 + 0x30] = a0\n 29841: u64 [s1 + 0x40] = a1\n 29844: u64 [s1 + 0x238] = a1\n 29848: u64 [s1 + 0x48] = a4\n 29851: u64 [s1 + 0x230] = a4\n 29855: u64 [s1 + 0x50] = a3\n 29858: u64 [s1 + 0x228] = a3\n 29862: a1 = s1 + 0x220\n 29866: u64 [s1 + 0x58] = a2\n 29869: u64 [s1 + 0x220] = a2\n 29873: a0 = 0\n 29875: ra = 1308, jump @19\n      : @1234 [@dyn 654] (gas: 1)\n 29881: t0 = 1310, jump @1336\n      : @1235 [@dyn 655] (gas: 1)\n 29887: ra = 1312, jump @19\n      : @1236 [@dyn 656] (gas: 3)\n 29893: a1 = 0x2026c\n 29898: a0 = i32 [0x2026c]\n 29903: jump @1238 if a0 >u 63\n      : @1237 (gas: 2)\n 29907: u32 [0x2026c] = 0x40\n 29913: fallthrough\n      : @1238 (gas: 6)\n 29914: a0 = sp + 0xffffffffffffffe0\n 29917: a2 = a0 & 0xffffffffffffffe0\n 29920: u64 [s1 + 0x28] = a2\n 29923: sp = a2\n 29925: a0 = 0x20280\n 29930: t0 = 1314, jump @1395\n      : @1239 [@dyn 657] (gas: 4)\n 29936: ra = 0x524\n 29940: ecalli 6 // 'hash_keccak_256'\n 29942: t0 = 0x526\n 29946: jump @1326\n      : @1240 [@dyn 658] (gas: 1)\n 29949: t0 = 1318, jump @1326\n      : @1241 [@dyn 659] (gas: 13)\n 29955: a0 = u64 [s1 + 0x38]\n 29958: a0 = a0 << 0x20\n 29961: a0 = a0 >> 0x20\n 29964: u64 [s1 + 504] = 0\n 29968: u64 [s1 + 0x38] = a0\n 29971: u64 [s1 + 0x1f0] = a0\n 29975: a0 = u64 [s1 + 0x70]\n 29978: u64 [s1 + 0x1e8] = a0\n 29982: a1 = s1 + 0x1e0\n 29986: a0 = u64 [s1 + 0x78]\n 29989: u64 [s1 + 0x1e0] = a0\n 29993: a0 = 0\n 29995: ra = 1320, jump @19\n      : @1242 [@dyn 660] (gas: 12)\n 30001: a0 = u64 [s1 + 0x8]\n 30004: a3 = s1 + 0x100\n 30008: u64 [a3 + 0xd8] = a0\n 30012: a0 = u64 [s1 + 0x10]\n 30015: u64 [a3 + 0xd0] = a0\n 30019: a0 = u64 [s1 + 0x18]\n 30022: u64 [a3 + 0xc8] = a0\n 30026: a0 = 0x20\n 30029: a1 = s1 + 0x1c0\n 30033: a2 = u64 [s1 + 0x20]\n 30036: u64 [a3 + 0xc0] = a2\n 30040: ra = 1322, jump @19\n      : @1243 [@dyn 661] (gas: 3)\n 30046: a1 = u64 [s1 + 0x68]\n 30049: a0 = i32 [a1]\n 30051: jump @1245 if a0 >u 63\n      : @1244 (gas: 2)\n 30055: u32 [a1 + 0] = 0x40\n 30058: fallthrough\n      : @1245 (gas: 4)\n 30059: a0 = sp + 0xffffffffffffffe0\n 30062: a0 = a0 & 0xffffffffffffffe0\n 30065: u64 [s1 + 0x20] = a0\n 30068: t0 = 1324, jump @1339\n      : @1246 [@dyn 662] (gas: 5)\n 30074: ra = 0x52e\n 30078: ecalli 6 // 'hash_keccak_256'\n 30080: a3 = u64 [s1 + 0x20]\n 30083: t0 = 0x530\n 30087: jump @1338\n      : @1247 [@dyn 663] (gas: 2)\n 30090: a3 = u64 [s1 + 0x20]\n 30093: t0 = 1328, jump @1338\n      : @1248 [@dyn 664] (gas: 2)\n 30099: a0 = s1 + 0x1a0\n 30103: ra = 1330, jump @21\n      : @1249 [@dyn 665] (gas: 2)\n 30109: a0 = u8 [s1 + 0x1a0]\n 30113: jump @1271 if a0 == 0\n      : @1250 (gas: 11)\n 30117: a0 = u64 [s1 + 0x58]\n 30120: u64 [s1 + 0x180] = a0\n 30124: a0 = u64 [s1 + 0x50]\n 30127: u64 [s1 + 0x188] = a0\n 30131: a0 = u64 [s1 + 0x48]\n 30134: u64 [s1 + 0x190] = a0\n 30138: a1 = s1 + 0x180\n 30142: a0 = u64 [s1 + 0x40]\n 30145: u64 [s1 + 0x198] = a0\n 30149: a0 = 0\n 30151: ra = 1332, jump @19\n      : @1251 [@dyn 666] (gas: 1)\n 30157: t0 = 1334, jump @1335\n      : @1252 [@dyn 667] (gas: 1)\n 30163: ra = 1336, jump @19\n      : @1253 [@dyn 668] (gas: 3)\n 30169: a1 = u64 [s1 + 0x68]\n 30172: a0 = i32 [a1]\n 30174: jump @1255 if a0 >u 63\n      : @1254 (gas: 2)\n 30178: u32 [a1 + 0] = 0x40\n 30181: fallthrough\n      : @1255 (gas: 4)\n 30182: a0 = sp + 0xffffffffffffffe0\n 30185: a0 = a0 & 0xffffffffffffffe0\n 30188: u64 [s1 + 0x28] = a0\n 30191: t0 = 1338, jump @1339\n      : @1256 [@dyn 669] (gas: 4)\n 30197: ra = 0x53c\n 30201: ecalli 6 // 'hash_keccak_256'\n 30203: t0 = 0x53e\n 30207: jump @1326\n      : @1257 [@dyn 670] (gas: 1)\n 30210: t0 = 1342, jump @1326\n      : @1258 [@dyn 671] (gas: 10)\n 30216: u64 [s1 + 344] = 0\n 30220: a0 = u64 [s1 + 0x38]\n 30223: u64 [s1 + 0x150] = a0\n 30227: a0 = u64 [s1 + 0x70]\n 30230: u64 [s1 + 0x148] = a0\n 30234: a1 = s1 + 0x140\n 30238: a0 = u64 [s1 + 0x78]\n 30241: u64 [s1 + 0x140] = a0\n 30245: a0 = 0\n 30247: ra = 1344, jump @19\n      : @1259 [@dyn 672] (gas: 12)\n 30253: a0 = u64 [s1 + 0x8]\n 30256: a3 = s1 + 0x100\n 30260: u64 [a3 + 0x38] = a0\n 30263: a0 = u64 [s1 + 0x10]\n 30266: u64 [a3 + 0x30] = a0\n 30269: a0 = u64 [s1 + 0x18]\n 30272: u64 [a3 + 0x28] = a0\n 30275: a0 = 0x20\n 30278: a1 = s1 + 0x120\n 30282: a2 = u64 [s1 + 0x20]\n 30285: u64 [a3 + 0x20] = a2\n 30288: ra = 1346, jump @19\n      : @1260 [@dyn 673] (gas: 3)\n 30294: a1 = u64 [s1 + 0x68]\n 30297: a0 = i32 [a1]\n 30299: jump @1262 if a0 >u 63\n      : @1261 (gas: 2)\n 30303: u32 [a1 + 0] = 0x40\n 30306: fallthrough\n      : @1262 (gas: 4)\n 30307: a0 = sp + 0xffffffffffffffe0\n 30310: a0 = a0 & 0xffffffffffffffe0\n 30313: u64 [s1 + 0x68] = a0\n 30316: t0 = 1348, jump @1339\n      : @1263 [@dyn 674] (gas: 5)\n 30322: ra = 0x546\n 30326: ecalli 6 // 'hash_keccak_256'\n 30328: a3 = u64 [s1 + 0x68]\n 30331: t0 = 0x548\n 30335: jump @1338\n      : @1264 [@dyn 675] (gas: 2)\n 30338: a3 = u64 [s1 + 0x68]\n 30341: t0 = 1352, jump @1338\n      : @1265 [@dyn 676] (gas: 2)\n 30347: a0 = s1 + 0x100\n 30351: ra = 1354, jump @21\n      : @1266 [@dyn 677] (gas: 14)\n 30357: a4 = s1 + 0x100\n 30361: a0 = u64 [a4]\n 30363: a1 = u64 [a4 + 0x18]\n 30366: a2 = u64 [a4 + 0x10]\n 30369: a3 = u64 [a4 + 0x8]\n 30372: a0 = a0 & 0xffffffffffffff00\n 30376: a4 = s1 + 0x200\n 30380: u64 [a4 + 0x58] = a1\n 30383: u64 [a4 + 0x50] = a2\n 30386: u64 [a4 + 0x48] = a3\n 30389: u64 [a4 + 0x40] = a0\n 30392: a1 = s1 + 0x240\n 30396: a0 = u64 [s1 + 0x28]\n 30399: ra = 1356, jump @24\n      : @1267 [@dyn 678] (gas: 8)\n 30405: a0 = 0x30280\n 30410: u64 [s1 + 0x68] = a0\n 30413: i32 a0 = a0 + 0\n 30415: ra = 0x54e\n 30419: ecalli 3 // 'caller'\n 30421: a2 = u64 [s1 + 0x68]\n 30424: t0 = 0x550\n 30428: jump @1325\n      : @1268 [@dyn 679] (gas: 2)\n 30431: a2 = u64 [s1 + 0x68]\n 30434: t0 = 1360, jump @1325\n      : @1269 [@dyn 680] (gas: 40)\n 30440: t0 = a1 | a0\n 30443: a3 = a3 >> 0x20\n 30446: a2 = reverse a2\n 30448: a1 = a2 << 0x20\n 30451: a1 = a1 | a3\n 30454: a2 = a2 >> 0x20\n 30457: u64 [s1 + 152] = 0\n 30461: u64 [s1 + 184] = 0\n 30465: a0 = u64 [s1 + 0x38]\n 30468: u64 [s1 + 0xb0] = a0\n 30472: a0 = u64 [s1 + 0x70]\n 30475: u64 [s1 + 0xa8] = a0\n 30479: a0 = u64 [s1 + 0x78]\n 30482: u64 [s1 + 0xa0] = a0\n 30486: a0 = u64 [s1 + 0x40]\n 30489: u64 [s1 + 0xd8] = a0\n 30493: a0 = u64 [s1 + 0x48]\n 30496: u64 [s1 + 0xd0] = a0\n 30500: a0 = u64 [s1 + 0x50]\n 30503: u64 [s1 + 0xc8] = a0\n 30507: a0 = u64 [s1 + 0x58]\n 30510: u64 [s1 + 0xc0] = a0\n 30514: a3 = u64 [0x20228]\n 30519: a4 = u64 [0x20230]\n 30524: a5 = u64 [0x20238]\n 30529: a0 = u64 [0x20240]\n 30534: u64 [s1 + 0xf8] = a3\n 30538: u64 [s1 + 0xf0] = a4\n 30542: u64 [s1 + 0xe8] = a5\n 30546: u64 [s1 + 0xe0] = a0\n 30550: u64 [s1 + 0x90] = a2\n 30554: u64 [s1 + 0x88] = a1\n 30558: a2 = s1 + 0xe0\n 30562: a3 = s1 + 0xc0\n 30566: a4 = s1 + 0xa0\n 30570: a5 = s1 + 0x80\n 30574: u64 [s1 + 0x80] = t0\n 30578: a0 = 0\n 30580: a1 = 0\n 30582: ra = 1362, jump @30\n      : @1270 [@dyn 681] (gas: 5)\n 30588: a0 = 0\n 30590: a1 = 0x1\n 30593: a2 = u64 [s1 + 0x30]\n 30596: t0 = 0x554\n 30600: jump @1334\n      : @1271 (gas: 3)\n 30603: a1 = 0\n 30605: a2 = u64 [s1 + 0x30]\n 30608: t0 = 1364, jump @1334\n      : @1272 [@dyn 682] (gas: 1)\n 30614: ret\n      : @1273 (gas: 17)\n 30616: sp = sp + 0xfffffffffffffc80\n 30620: a2 = sp + 0x300\n 30624: u64 [a2 + 0x78] = ra\n 30627: u64 [a2 + 0x70] = s0\n 30630: u64 [a2 + 0x68] = s1\n 30633: s0 = sp + 0x380\n 30637: sp = sp & 0xffffffffffffffe0\n 30640: s1 = sp\n 30642: a3 = u32 [a0 + 0x10]\n 30645: a2 = u64 [a0]\n 30647: a4 = u64 [a0 + 0x8]\n 30650: u64 [s1 + 0x58] = a2\n 30653: u64 [s1 + 0x48] = a3\n 30656: a0 = a2 | a3\n 30659: u64 [s1 + 0x50] = a4\n 30662: a0 = a0 | a4\n 30665: jump @1300 if a0 == 0\n      : @1274 (gas: 9)\n 30669: a0 = u64 [a1 + 0x18]\n 30672: u64 [s1 + 0x78] = a0\n 30675: a0 = u64 [a1 + 0x10]\n 30678: u64 [s1 + 0x68] = a0\n 30681: a0 = u64 [a1 + 0x8]\n 30684: u64 [s1 + 0x60] = a0\n 30687: a0 = u64 [a1]\n 30689: u64 [s1 + 0x70] = a0\n 30692: ra = 1366, jump @1312\n      : @1275 [@dyn 683] (gas: 11)\n 30698: u64 [s1 + 664] = 0\n 30702: a0 = u64 [s1 + 0x48]\n 30705: a2 = s1 + 0x200\n 30709: u64 [a2 + 0x90] = a0\n 30713: a0 = u64 [s1 + 0x50]\n 30716: u64 [a2 + 0x88] = a0\n 30720: a1 = s1 + 0x280\n 30724: a0 = u64 [s1 + 0x58]\n 30727: u64 [a2 + 0x80] = a0\n 30731: a0 = 0\n 30733: ra = 1368, jump @19\n      : @1276 [@dyn 684] (gas: 1)\n 30739: t0 = 1370, jump @1377\n      : @1277 [@dyn 685] (gas: 1)\n 30745: ra = 1372, jump @19\n      : @1278 [@dyn 686] (gas: 3)\n 30751: a2 = 0x2026c\n 30756: a0 = i32 [0x2026c]\n 30761: jump @1280 if a0 >u 63\n      : @1279 (gas: 2)\n 30765: u32 [0x2026c] = 0x40\n 30771: fallthrough\n      : @1280 (gas: 13)\n 30772: u64 [s1 + 0x38] = a2\n 30775: a0 = sp + 0xffffffffffffffe0\n 30778: a2 = a0 & 0xffffffffffffffe0\n 30781: u64 [s1 + 0x30] = a2\n 30784: sp = a2\n 30786: a0 = 0x20280\n 30791: i32 a0 = a0 + 0\n 30793: i32 a2 = a2 + 0\n 30795: a1 = 0x40\n 30798: u64 [s1 + 0x40] = a0\n 30801: ra = 0x55e\n 30805: ecalli 6 // 'hash_keccak_256'\n 30807: fallthrough\n      : @1281 [@dyn 687] (gas: 6)\n 30808: a3 = u64 [s1 + 0x30]\n 30811: a0 = u64 [a3 + 0x18]\n 30814: a1 = u64 [a3 + 0x10]\n 30817: a2 = u64 [a3 + 0x8]\n 30820: a3 = u64 [a3]\n 30822: t0 = 1376, jump @1351\n      : @1282 [@dyn 688] (gas: 7)\n 30828: u64 [s1 + 0x2b8] = a3\n 30832: u64 [s1 + 0x2b0] = a2\n 30836: u64 [s1 + 0x2a8] = a1\n 30840: u64 [s1 + 0x2a0] = a0\n 30844: a0 = s1 + 0x240\n 30848: a1 = s1 + 0x2a0\n 30852: ra = 1378, jump @21\n      : @1283 [@dyn 689] (gas: 28)\n 30858: a1 = s1 + 0x200\n 30862: a2 = u64 [a1 + 0x58]\n 30865: a0 = u64 [a1 + 0x50]\n 30868: a5 = u64 [a1 + 0x48]\n 30871: a4 = u64 [a1 + 0x40]\n 30874: a1 = u64 [s1 + 0x78]\n 30877: t1 = a2 ^ a1\n 30880: u64 [s1 + 0x20] = a2\n 30883: a1 = a2 <u a1\n 30886: a2 = u64 [s1 + 0x68]\n 30889: a3 = a0 <u a2\n 30892: u64 [s1 + 0x8] = a3\n 30895: a1 = a3 if t1 == 0\n 30898: a3 = u64 [s1 + 0x60]\n 30901: t0 = a5 ^ a3\n 30904: u64 [s1 + 0x28] = a5\n 30907: a5 = a5 <u a3\n 30910: a3 = u64 [s1 + 0x70]\n 30913: u64 [s1 + 0x30] = a4\n 30916: a3 = a4 <u a3\n 30919: u64 [s1 + 0x10] = a3\n 30922: a5 = a3 if t0 == 0\n 30925: u64 [s1 + 0x18] = a0\n 30928: a2 = a2 ^ a0\n 30931: a0 = a2 | t1\n 30934: u64 [s1] = a5\n 30936: a1 = a5 if a0 == 0\n 30939: jump @1305 if a1 != 0\n      : @1284 (gas: 11)\n 30943: u64 [s1 + 568] = 0\n 30947: a0 = u64 [s1 + 0x58]\n 30950: a2 = s1 + 0x200\n 30954: u64 [a2 + 0x20] = a0\n 30957: a0 = u64 [s1 + 0x50]\n 30960: u64 [a2 + 0x28] = a0\n 30963: a1 = s1 + 0x220\n 30967: a0 = u64 [s1 + 0x48]\n 30970: u64 [a2 + 0x30] = a0\n 30973: a0 = 0\n 30975: ra = 1380, jump @19\n      : @1285 [@dyn 690] (gas: 7)\n 30981: u64 [s1 + 536] = 0\n 30985: u64 [s1 + 528] = 0\n 30989: u64 [s1 + 520] = 0\n 30993: a0 = 0x20\n 30996: a1 = s1 + 0x200\n 31000: u64 [s1 + 512] = 0\n 31004: ra = 1382, jump @19\n      : @1286 [@dyn 691] (gas: 27)\n 31010: a0 = u64 [s1 + 0x68]\n 31013: a1 = u64 [s1 + 0x18]\n 31016: a0 = a1 - a0\n 31019: a2 = u64 [s1]\n 31021: a1 = a0 - a2\n 31024: u64 [s1 + 0x18] = a1\n 31027: a0 = a0 <u a2\n 31030: a1 = u64 [s1 + 0x78]\n 31033: a2 = u64 [s1 + 0x20]\n 31036: a1 = a2 - a1\n 31039: a2 = u64 [s1 + 0x8]\n 31042: a1 = a1 - a2\n 31045: a1 = a1 - a0\n 31048: u64 [s1 + 0x20] = a1\n 31051: a2 = u64 [s1 + 0x38]\n 31054: a0 = i32 [a2]\n 31056: a1 = u64 [s1 + 0x60]\n 31059: a3 = u64 [s1 + 0x28]\n 31062: a1 = a3 - a1\n 31065: a3 = u64 [s1 + 0x10]\n 31068: a1 = a1 - a3\n 31071: u64 [s1 + 0x28] = a1\n 31074: a3 = u64 [s1 + 0x70]\n 31077: a4 = u64 [s1 + 0x30]\n 31080: a4 = a4 - a3\n 31083: u64 [s1 + 0x30] = a4\n 31086: jump @1288 if a0 >u 63\n      : @1287 (gas: 2)\n 31090: u32 [a2 + 0] = 0x40\n 31093: fallthrough\n      : @1288 (gas: 10)\n 31094: a0 = sp + 0xffffffffffffffe0\n 31097: a0 = a0 & 0xffffffffffffffe0\n 31100: u64 [s1 + 0x38] = a0\n 31103: sp = a0\n 31105: i32 a2 = a0 + 0\n 31107: a1 = 0x40\n 31110: a0 = u64 [s1 + 0x40]\n 31113: ra = 0x568\n 31117: ecalli 6 // 'hash_keccak_256'\n 31119: fallthrough\n      : @1289 [@dyn 692] (gas: 6)\n 31120: a3 = u64 [s1 + 0x38]\n 31123: a0 = u64 [a3 + 0x18]\n 31126: a1 = u64 [a3 + 0x10]\n 31129: a2 = u64 [a3 + 0x8]\n 31132: a3 = u64 [a3]\n 31134: t0 = 1386, jump @1351\n      : @1290 [@dyn 693] (gas: 16)\n 31140: a4 = s1 + 0x200\n 31144: u64 [a4 + 0xd8] = a3\n 31148: u64 [a4 + 0xd0] = a2\n 31152: u64 [a4 + 0xc8] = a1\n 31156: u64 [a4 + 0xc0] = a0\n 31160: a0 = u64 [s1 + 0x20]\n 31163: u64 [a4 + 0xf8] = a0\n 31167: a0 = u64 [s1 + 0x18]\n 31170: u64 [a4 + 0xf0] = a0\n 31174: a0 = u64 [s1 + 0x28]\n 31177: u64 [a4 + 0xe8] = a0\n 31181: a0 = u64 [s1 + 0x30]\n 31184: u64 [a4 + 0xe0] = a0\n 31188: a0 = s1 + 0x2c0\n 31192: a1 = s1 + 0x2e0\n 31196: ra = 1388, jump @24\n      : @1291 [@dyn 694] (gas: 7)\n 31202: u64 [s1 + 792] = 0\n 31206: u64 [s1 + 784] = 0\n 31210: u64 [s1 + 776] = 0\n 31214: u64 [s1 + 768] = 0x2\n 31219: a0 = s1 + 0x1e0\n 31223: a1 = s1 + 0x300\n 31227: ra = 1390, jump @21\n      : @1292 [@dyn 695] (gas: 34)\n 31233: a1 = u64 [s1 + 0x1e8]\n 31237: t0 = u64 [s1 + 0x1f8]\n 31241: t1 = u64 [s1 + 0x1e0]\n 31245: a3 = u64 [s1 + 0x1f0]\n 31249: a4 = u64 [s1 + 0x60]\n 31252: a0 = a1 ^ a4\n 31255: a5 = a1 <u a4\n 31258: ra = u64 [s1 + 0x70]\n 31261: t2 = t1 <u ra\n 31264: a5 = t2 if a0 == 0\n 31267: a0 = u64 [s1 + 0x68]\n 31270: a2 = a3 - a0\n 31273: a3 = a3 <u a0\n 31276: a0 = u64 [s1 + 0x78]\n 31279: a0 = t0 - a0\n 31282: a0 = a0 - a3\n 31285: a3 = a2 <u a5\n 31288: a0 = a0 - a3\n 31291: a3 = a2 - a5\n 31294: a1 = a1 - a4\n 31297: a1 = a1 - t2\n 31300: a4 = s1 + 0x300\n 31304: u64 [a4 + 32] = 0x2\n 31308: a2 = t1 - ra\n 31311: u64 [a4 + 0x40] = a2\n 31314: u64 [a4 + 0x48] = a1\n 31317: u64 [a4 + 0x50] = a3\n 31320: u64 [a4 + 0x58] = a0\n 31323: u64 [s1 + 824] = 0\n 31327: u64 [s1 + 816] = 0\n 31331: u64 [s1 + 808] = 0\n 31335: a0 = s1 + 0x320\n 31339: a1 = s1 + 0x340\n 31343: ra = 1392, jump @24\n      : @1293 [@dyn 696] (gas: 3)\n 31349: a0 = s1 + 0x1c0\n 31353: a1 = 0x40\n 31356: ra = 1394, jump @17\n      : @1294 [@dyn 697] (gas: 6)\n 31362: a4 = s1 + 0x100\n 31366: a3 = u64 [a4 + 0xd8]\n 31370: a1 = u64 [a4 + 0xd0]\n 31374: a2 = u64 [a4 + 0xc8]\n 31378: a0 = u64 [a4 + 0xc0]\n 31382: t0 = 1396, jump @1332\n      : @1295 [@dyn 698] (gas: 1)\n 31388: jump @1299 if a1 != 0\n      : @1296 (gas: 11)\n 31392: a1 = u64 [s1 + 0x70]\n 31395: u64 [s1 + 0x1a0] = a1\n 31399: a1 = u64 [s1 + 0x60]\n 31402: u64 [s1 + 0x1a8] = a1\n 31406: a1 = u64 [s1 + 0x68]\n 31409: u64 [s1 + 0x1b0] = a1\n 31413: a1 = s1 + 0x1a0\n 31417: a2 = u64 [s1 + 0x78]\n 31420: u64 [s1 + 0x1b8] = a2\n 31424: u64 [s1 + 0x78] = a0\n 31427: ra = 1398, jump @19\n      : @1297 [@dyn 699] (gas: 26)\n 31433: u64 [s1 + 344] = 0\n 31437: u64 [s1 + 336] = 0\n 31441: u64 [s1 + 328] = 0\n 31445: u64 [s1 + 320] = 0\n 31449: u64 [s1 + 376] = 0\n 31453: a0 = u64 [s1 + 0x48]\n 31456: a5 = s1 + 0x100\n 31460: u64 [a5 + 0x70] = a0\n 31463: a0 = u64 [s1 + 0x50]\n 31466: u64 [a5 + 0x68] = a0\n 31469: a0 = u64 [0x20248]\n 31474: a1 = u64 [0x20250]\n 31479: a2 = u64 [0x20258]\n 31484: a3 = u64 [s1 + 0x58]\n 31487: u64 [a5 + 0x60] = a3\n 31490: u64 [a5 + 0x98] = a0\n 31494: u64 [a5 + 0x90] = a1\n 31498: u64 [a5 + 0x88] = a2\n 31502: a0 = u64 [0x20260]\n 31507: a1 = 0x20\n 31510: a2 = s1 + 0x180\n 31514: a3 = s1 + 0x160\n 31518: a4 = s1 + 0x140\n 31522: u64 [a5 + 0x80] = a0\n 31526: a0 = u64 [s1 + 0x78]\n 31529: ra = 1400, jump @27\n      : @1298 [@dyn 700] (gas: 7)\n 31535: sp = s0 + 0xfffffffffffffc80\n 31539: a0 = sp + 0x300\n 31543: ra = u64 [a0 + 0x78]\n 31546: s0 = u64 [a0 + 0x70]\n 31549: s1 = u64 [a0 + 0x68]\n 31552: sp = sp + 0x380\n 31556: ret\n      : @1299 (gas: 1)\n 31558: trap\n      : @1300 (gas: 8)\n 31559: u64 [s1 + 176] = 0\n 31563: u64 [s1 + 168] = 0\n 31567: u64 [s1 + 160] = 0\n 31571: a0 = 0x96c6fd1e00000000\n 31581: a1 = s1 + 0xa0\n 31585: u64 [s1 + 0xb8] = a0\n 31589: a0 = 0\n 31591: ra = 1402, jump @19\n      : @1301 [@dyn 701] (gas: 7)\n 31597: u64 [s1 + 152] = 0\n 31601: u64 [s1 + 144] = 0\n 31605: u64 [s1 + 136] = 0\n 31609: a0 = 0x4\n 31612: a1 = s1 + 0x80\n 31616: u64 [s1 + 128] = 0\n 31620: ra = 1404, jump @19\n      : @1302 [@dyn 702] (gas: 2)\n 31626: a1 = i32 [0x2026c]\n 31631: jump @1304 if a1 >u 63\n      : @1303 (gas: 2)\n 31635: u32 [0x2026c] = 0x40\n 31641: fallthrough\n      : @1304 (gas: 6)\n 31642: a1 = 0x20280\n 31647: i32 a1 = a1 + 0\n 31649: a0 = 0x1\n 31652: a2 = 0x24\n 31655: ecalli 7 // 'seal_return'\n 31657: fallthrough\n      : @1305 (gas: 8)\n 31658: u64 [s1 + 304] = 0\n 31662: u64 [s1 + 296] = 0\n 31666: u64 [s1 + 288] = 0\n 31670: a0 = 0xe450d38c00000000\n 31680: a1 = s1 + 0x120\n 31684: u64 [s1 + 0x138] = a0\n 31688: a0 = 0\n 31690: ra = 1406, jump @19\n      : @1306 [@dyn 703] (gas: 11)\n 31696: u64 [s1 + 280] = 0\n 31700: a0 = u64 [s1 + 0x48]\n 31703: a3 = s1 + 0x100\n 31707: u64 [a3 + 0x10] = a0\n 31710: a0 = u64 [s1 + 0x50]\n 31713: u64 [a3 + 0x8] = a0\n 31716: a0 = 0x4\n 31719: a1 = s1 + 0x100\n 31723: a2 = u64 [s1 + 0x58]\n 31726: u64 [a3] = a2\n 31728: ra = 1408, jump @19\n      : @1307 [@dyn 704] (gas: 11)\n 31734: a0 = u64 [s1 + 0x20]\n 31737: u64 [s1 + 0xf8] = a0\n 31741: a0 = u64 [s1 + 0x18]\n 31744: u64 [s1 + 0xf0] = a0\n 31748: a0 = u64 [s1 + 0x28]\n 31751: u64 [s1 + 0xe8] = a0\n 31755: a0 = 0x24\n 31758: a1 = s1 + 0xe0\n 31762: a2 = u64 [s1 + 0x30]\n 31765: u64 [s1 + 0xe0] = a2\n 31769: ra = 1410, jump @19\n      : @1308 [@dyn 705] (gas: 11)\n 31775: a0 = u64 [s1 + 0x78]\n 31778: u64 [s1 + 0xd8] = a0\n 31782: a0 = u64 [s1 + 0x68]\n 31785: u64 [s1 + 0xd0] = a0\n 31789: a0 = u64 [s1 + 0x60]\n 31792: u64 [s1 + 0xc8] = a0\n 31796: a0 = 0x44\n 31799: a1 = s1 + 0xc0\n 31803: a2 = u64 [s1 + 0x70]\n 31806: u64 [s1 + 0xc0] = a2\n 31810: ra = 1412, jump @19\n      : @1309 [@dyn 706] (gas: 3)\n 31816: a0 = u64 [s1 + 0x38]\n 31819: a0 = i32 [a0]\n 31821: jump @1311 if a0 >u 127\n      : @1310 (gas: 3)\n 31825: a1 = u64 [s1 + 0x38]\n 31828: u32 [a1 + 0] = 0x80\n 31832: fallthrough\n      : @1311 (gas: 6)\n 31833: a0 = 0x1\n 31836: a2 = 0x64\n 31839: a1 = u64 [s1 + 0x40]\n 31842: ra = 0x586\n 31846: ecalli 7 // 'seal_return'\n 31848: fallthrough\n      : @1312 [@dyn 707] (gas: 12)\n 31849: sp = sp + 0xffffffffffffff80\n 31852: u64 [sp + 0x78] = ra\n 31855: u64 [sp + 0x70] = s0\n 31858: s0 = sp + 0x80\n 31862: sp = sp & 0xffffffffffffffe0\n 31865: u64 [sp + 88] = 0\n 31868: u64 [sp + 80] = 0\n 31871: u64 [sp + 72] = 0\n 31874: u64 [sp + 64] = 0x5\n 31878: a0 = sp + 0x20\n 31881: a1 = sp + 0x40\n 31884: ra = 1416, jump @21\n      : @1313 [@dyn 708] (gas: 2)\n 31890: a0 = u8 [sp + 0x20]\n 31893: jump @1315 if a0 != 0\n      : @1314 (gas: 5)\n 31896: sp = s0 + 0xffffffffffffff80\n 31899: ra = u64 [sp + 0x78]\n 31902: s0 = u64 [sp + 0x70]\n 31905: sp = sp + 0x80\n 31909: ret\n      : @1315 (gas: 8)\n 31911: u64 [sp + 16] = 0\n 31914: u64 [sp + 8] = 0\n 31917: u64 [sp + 0] = 0\n 31919: a0 = 0xd93c066500000000\n 31929: a1 = sp\n 31931: u64 [sp + 0x18] = a0\n 31934: a0 = 0\n 31936: ra = 1418, jump @19\n      : @1316 [@dyn 709] (gas: 2)\n 31942: a1 = i32 [0x2026c]\n 31947: jump @1318 if a1 >u 31\n      : @1317 (gas: 2)\n 31951: u32 [0x2026c] = 0x20\n 31957: fallthrough\n      : @1318 (gas: 8)\n 31958: a1 = 0x20280\n 31963: i32 a1 = a1 + 0\n 31965: a0 = 0x1\n 31968: a2 = 0x4\n 31971: ecalli 7 // 'seal_return'\n 31973: a0 = 0\n 31975: ra = 0x58c\n 31979: jump @39\n      : @1319 [export #0: 'call'] (gas: 2)\n 31982: a0 = 0\n 31984: ra = 1420, jump @39\n      : @1320 [@dyn 710] [export #1: 'deploy'] (gas: 2)\n 31990: a0 = 0x1\n 31993: ra = 1422, jump @39\n      : @1321 [@dyn 711] (gas: 16)\n 31999: a0 = u64 [a2 + 0x8]\n 32002: a1 = i32 [a2 + 0x10]\n 32005: a2 = u64 [a2]\n 32007: a0 = reverse a0\n 32009: a3 = a0 << 0x20\n 32012: a1 = reverse a1\n 32014: a1 = a1 >> 0x20\n 32017: a3 = a3 | a1\n 32020: a0 = a0 >> 0x20\n 32023: a1 = reverse a2\n 32025: a2 = a1 << 0x20\n 32028: a0 = a0 | a2\n 32031: a1 = a1 >> 0x20\n 32034: a2 = s1 + 0x7ff\n 32038: a2 = a2 + 0x39\n 32041: jump [t0]\n      : @1322 (gas: 30)\n 32043: a3 = u64 [s1 + 0x48]\n 32046: a0 = u64 [a3 + 0x18]\n 32049: a1 = u64 [a3 + 0x10]\n 32052: a2 = u64 [a3 + 0x8]\n 32055: a3 = u64 [a3]\n 32057: a0 = reverse a0\n 32059: u64 [s1 + 0x40] = a0\n 32062: a0 = reverse a1\n 32064: u64 [s1 + 0x38] = a0\n 32067: a0 = reverse a2\n 32069: u64 [s1 + 0x30] = a0\n 32072: a0 = reverse a3\n 32074: u64 [s1 + 0x28] = a0\n 32077: a0 = sp + 0xffffffffffffffe0\n 32080: a0 = a0 & 0xffffffffffffffe0\n 32083: u64 [s1 + 0x48] = a0\n 32086: sp = a0\n 32088: a0 = u64 [s1 + 0x50]\n 32091: a0 = a0 << 0x20\n 32094: a0 = a0 >> 0x20\n 32097: u64 [s1 + 504] = 0\n 32101: u64 [s1] = a0\n 32103: u64 [s1 + 0x1f0] = a0\n 32107: a0 = u64 [s1 + 0x70]\n 32110: u64 [s1 + 0x1e8] = a0\n 32114: a1 = s1 + 0x1e0\n 32118: a0 = u64 [s1 + 0x78]\n 32121: u64 [s1 + 0x1e0] = a0\n 32125: a0 = 0\n 32127: jump [t0]\n      : @1323 (gas: 27)\n 32129: a3 = u64 [s1 + 0x50]\n 32132: a0 = u64 [a3 + 0x18]\n 32135: a1 = u64 [a3 + 0x10]\n 32138: a2 = u64 [a3 + 0x8]\n 32141: a3 = u64 [a3]\n 32143: a0 = reverse a0\n 32145: u64 [s1 + 0x48] = a0\n 32148: a0 = reverse a1\n 32150: u64 [s1 + 0x40] = a0\n 32153: a0 = reverse a2\n 32155: u64 [s1 + 0x38] = a0\n 32158: a0 = reverse a3\n 32160: u64 [s1 + 0x30] = a0\n 32163: a0 = sp + 0xffffffffffffffe0\n 32166: a0 = a0 & 0xffffffffffffffe0\n 32169: u64 [s1 + 0x50] = a0\n 32172: sp = a0\n 32174: u64 [s1 + 344] = 0\n 32178: a0 = u64 [s1]\n 32180: u64 [s1 + 0x150] = a0\n 32184: a0 = u64 [s1 + 0x70]\n 32187: u64 [s1 + 0x148] = a0\n 32191: a1 = s1 + 0x140\n 32195: a0 = u64 [s1 + 0x78]\n 32198: u64 [s1 + 0x140] = a0\n 32202: a0 = 0\n 32204: jump [t0]\n      : @1324 (gas: 15)\n 32206: a2 = u64 [s1 + 0x138]\n 32210: a0 = u64 [a2 + 0x8]\n 32213: a1 = i32 [a2 + 0x10]\n 32216: a2 = u64 [a2]\n 32218: a0 = reverse a0\n 32220: a3 = a0 << 0x20\n 32223: a1 = reverse a1\n 32225: a1 = a1 >> 0x20\n 32228: a3 = a3 | a1\n 32231: a0 = a0 >> 0x20\n 32234: a1 = reverse a2\n 32236: a2 = a1 << 0x20\n 32239: a0 = a0 | a2\n 32242: a1 = a1 >> 0x20\n 32245: jump [t0]\n      : @1325 (gas: 8)\n 32247: a0 = u64 [a2 + 0x8]\n 32250: a1 = i32 [a2 + 0x10]\n 32253: a2 = u64 [a2]\n 32255: a3 = reverse a0\n 32257: a0 = a3 << 0x20\n 32260: a1 = reverse a1\n 32262: a1 = a1 >> 0x20\n 32265: jump [t0]\n      : @1326 (gas: 18)\n 32267: a3 = u64 [s1 + 0x28]\n 32270: a0 = u64 [a3 + 0x18]\n 32273: a1 = u64 [a3 + 0x10]\n 32276: a2 = u64 [a3 + 0x8]\n 32279: a3 = u64 [a3]\n 32281: a0 = reverse a0\n 32283: u64 [s1 + 0x20] = a0\n 32286: a0 = reverse a1\n 32288: u64 [s1 + 0x18] = a0\n 32291: a0 = reverse a2\n 32293: u64 [s1 + 0x10] = a0\n 32296: a0 = reverse a3\n 32298: u64 [s1 + 0x8] = a0\n 32301: a0 = sp + 0xffffffffffffffe0\n 32304: a0 = a0 & 0xffffffffffffffe0\n 32307: u64 [s1 + 0x28] = a0\n 32310: sp = a0\n 32312: jump [t0]\n      : @1327 (gas: 26)\n 32314: a3 = u64 [s1 + 0x80]\n 32318: a3 = a3 + 0x1\n 32321: a0 = a3 <u 0x1\n 32324: ra = u64 [s1 + 0x88]\n 32328: ra = ra + a0\n 32331: a0 = a3 | ra\n 32334: a0 = a0 <u 0x1\n 32337: a1 = u64 [s1 + 0x78]\n 32340: t2 = a1 + a0\n 32343: a1 = t2 <u a1\n 32346: a0 = u64 [s1 + 0x90]\n 32350: a0 = a0 + a1\n 32353: a1 = u64 [s1 + 0xb8]\n 32357: t1 = a1 + 0x20\n 32360: a2 = t1 <u a1\n 32363: a4 = u64 [s1 + 0xa0]\n 32367: a1 = a4 + a2\n 32370: a4 = a1 <u a4\n 32373: a4 = a2 if a2 == 0\n 32376: a2 = u64 [s1 + 0xa8]\n 32380: a4 = a4 + a2\n 32383: a2 = a4 <u a2\n 32386: a5 = u64 [s1 + 0xb0]\n 32390: a5 = a5 + a2\n 32393: u64 [s1 + 0xb0] = a5\n 32397: jump [t0]\n      : @1328 (gas: 16)\n 32399: a3 = u64 [s1 + 0x68]\n 32402: a0 = u64 [a3 + 0x18]\n 32405: a1 = u64 [a3 + 0x10]\n 32408: a2 = u64 [a3 + 0x8]\n 32411: a3 = u64 [a3]\n 32413: a0 = reverse a0\n 32415: a4 = reverse a1\n 32417: a2 = reverse a2\n 32419: a3 = reverse a3\n 32421: a1 = u64 [s1 + 0x50]\n 32424: u64 [a1 + 0x18] = a3\n 32427: u64 [a1 + 0x10] = a2\n 32430: u64 [a1 + 0x8] = a4\n 32433: u64 [a1] = a0\n 32435: a0 = s1 + 0x100\n 32439: jump [t0]\n      : @1329 (gas: 16)\n 32441: a3 = u64 [s1 + 0x50]\n 32444: a0 = u64 [a3 + 0x18]\n 32447: a1 = u64 [a3 + 0x10]\n 32450: a2 = u64 [a3 + 0x8]\n 32453: a3 = u64 [a3]\n 32455: a0 = reverse a0\n 32457: a4 = reverse a1\n 32459: a2 = reverse a2\n 32461: a3 = reverse a3\n 32463: a1 = u64 [s1 + 0x48]\n 32466: u64 [a1 + 0x18] = a3\n 32469: u64 [a1 + 0x10] = a2\n 32472: u64 [a1 + 0x8] = a4\n 32475: u64 [a1] = a0\n 32477: a0 = s1 + 0x1a0\n 32481: jump [t0]\n      : @1330 (gas: 9)\n 32483: a0 = u64 [a3 + 0x18]\n 32486: a1 = u64 [a3 + 0x10]\n 32489: a2 = u64 [a3 + 0x8]\n 32492: a3 = u64 [a3]\n 32494: a0 = reverse a0\n 32496: a4 = reverse a1\n 32498: a2 = reverse a2\n 32500: a3 = reverse a3\n 32502: jump [t0]\n      : @1331 (gas: 8)\n 32504: a0 = sp + 0xffffffffffffffe0\n 32507: a0 = a0 & 0xffffffffffffffe0\n 32510: u64 [s1 + 0x50] = a0\n 32513: sp = a0\n 32515: i32 a2 = a0 + 0\n 32517: a1 = 0x40\n 32520: a0 = u64 [s1 + 0x60]\n 32523: jump [t0]\n      : @1332 (gas: 8)\n 32525: a3 = a3 | a2\n 32528: a2 = a0 | a1\n 32531: a2 = a2 | a3\n 32534: a2 = a2 >> 0x20\n 32537: a1 = a1 | a3\n 32540: a1 = a1 << 0x20\n 32543: a1 = a1 | a2\n 32546: jump [t0]\n      : @1333 (gas: 15)\n 32548: a4 = s1 + 0x100\n 32552: a0 = u64 [a4]\n 32554: a1 = u64 [a4 + 0x8]\n 32557: a2 = u64 [a4 + 0x18]\n 32560: a3 = u64 [a4 + 0x10]\n 32563: a0 = a0 & 0xffffffffffffff00\n 32567: a0 = a0 | 0x1\n 32570: a4 = s1 + 0x200\n 32574: u64 [a4 + 0x58] = a2\n 32577: u64 [a4 + 0x50] = a3\n 32580: u64 [a4 + 0x48] = a1\n 32583: u64 [a4 + 0x40] = a0\n 32586: a1 = s1 + 0x240\n 32590: a0 = u64 [s1 + 0x50]\n 32593: jump [t0]\n      : @1334 (gas: 11)\n 32595: u64 [a2] = a1\n 32597: u64 [a2 + 0x8] = a0\n 32600: u64 [a2 + 0x10] = a0\n 32603: u64 [a2 + 0x18] = a0\n 32606: sp = s0 + 0xfffffffffffffd80\n 32610: a0 = sp + 0x200\n 32614: ra = u64 [a0 + 0x78]\n 32617: s0 = u64 [a0 + 0x70]\n 32620: s1 = u64 [a0 + 0x68]\n 32623: sp = sp + 0x280\n 32627: jump [t0]\n      : @1335 (gas: 7)\n 32629: u64 [s1 + 376] = 0\n 32633: u64 [s1 + 368] = 0\n 32637: u64 [s1 + 352] = 0x6\n 32642: a0 = 0x20\n 32645: a1 = s1 + 0x160\n 32649: u64 [s1 + 360] = 0\n 32653: jump [t0]\n      : @1336 (gas: 7)\n 32655: u64 [s1 + 536] = 0\n 32659: u64 [s1 + 528] = 0\n 32663: u64 [s1 + 512] = 0x6\n 32668: a0 = 0x20\n 32671: a1 = s1 + 0x200\n 32675: u64 [s1 + 520] = 0\n 32679: jump [t0]\n      : @1337 (gas: 21)\n 32681: a2 = u64 [s1 + 0x68]\n 32684: a0 = u64 [a2 + 0x8]\n 32687: a1 = i32 [a2 + 0x10]\n 32690: a2 = u64 [a2]\n 32692: a0 = reverse a0\n 32694: a3 = a0 << 0x20\n 32697: a1 = reverse a1\n 32699: a1 = a1 >> 0x20\n 32702: a3 = a3 | a1\n 32705: a0 = a0 >> 0x20\n 32708: a1 = reverse a2\n 32710: a2 = a1 << 0x20\n 32713: a0 = a0 | a2\n 32716: a1 = a1 >> 0x20\n 32719: u64 [s1 + 312] = 0\n 32723: u64 [s1 + 0x130] = a1\n 32727: u64 [s1 + 0x128] = a0\n 32731: a1 = s1 + 0x120\n 32735: u64 [s1 + 0x120] = a3\n 32739: a0 = 0\n 32741: jump [t0]\n      : @1338 (gas: 14)\n 32743: a0 = u64 [a3 + 0x18]\n 32746: a1 = u64 [a3 + 0x10]\n 32749: a2 = u64 [a3 + 0x8]\n 32752: a3 = u64 [a3]\n 32754: a0 = reverse a0\n 32756: a4 = reverse a1\n 32758: a2 = reverse a2\n 32760: a3 = reverse a3\n 32762: a1 = u64 [s1 + 0x28]\n 32765: u64 [a1 + 0x18] = a3\n 32768: u64 [a1 + 0x10] = a2\n 32771: u64 [a1 + 0x8] = a4\n 32774: u64 [a1] = a0\n 32776: jump [t0]\n      : @1339 (gas: 5)\n 32778: sp = a0\n 32780: i32 a2 = a0 + 0\n 32782: a1 = 0x40\n 32785: a0 = u64 [s1 + 0x60]\n 32788: jump [t0]\n      : @1340 (gas: 19)\n 32790: u64 [s1 + 0x90] = ra\n 32794: a0 = u64 [s1 + 0x70]\n 32797: a1 = u64 [s1 + 0xb8]\n 32801: a0 = a1 <u a0\n 32804: a2 = u64 [s1 + 0x60]\n 32807: a1 = t2 ^ a2\n 32810: a2 = t2 <u a2\n 32813: a2 = a0 if a1 == 0\n 32816: a4 = u64 [s1 + 0x68]\n 32819: a0 = t1 <u a4\n 32822: a3 = u64 [s1 + 0x58]\n 32825: a1 = u64 [s1 + 0xb0]\n 32829: a5 = a1 ^ a3\n 32832: a3 = a1 <u a3\n 32835: a3 = a0 if a5 == 0\n 32838: a0 = t1 ^ a4\n 32841: a0 = a0 | a5\n 32844: a3 = a2 if a0 == 0\n 32847: jump [t0]\n      : @1341 (gas: 8)\n 32849: a4 = a4 | a2\n 32852: a2 = a0 | a1\n 32855: a2 = a2 | a4\n 32858: a2 = a2 >> 0x20\n 32861: a1 = a1 | a4\n 32864: a1 = a1 << 0x20\n 32867: a1 = a1 | a2\n 32870: jump [t0]\n      : @1342 (gas: 16)\n 32872: a4 = u64 [s1 + 0x138]\n 32876: a2 = a4 <u 0x80\n 32880: a3 = u64 [s1 + 0xf0]\n 32884: a1 = a3 if a2 != 0\n 32887: a5 = u64 [s1 + 0xf8]\n 32891: a3 = u64 [s1 + 0x108]\n 32895: a3 = a3 | a5\n 32898: a3 = a0 if a2 == 0\n 32901: a1 = 0xffffffffffffffff if a4 == 0\n 32904: a3 = 0xffffffffffffffff if a4 == 0\n 32907: a4 = u64 [s1 + 0x100]\n 32911: a4 = 0 if a2 == 0\n 32913: a5 = 0 if a2 == 0\n 32915: a0 = u64 [s1 + 0x110]\n 32919: a0 = a0 & ~a3\n 32922: jump [t0]\n      : @1343 (gas: 21)\n 32924: a2 = u64 [s1 + 0x68]\n 32927: a0 = u64 [a2 + 0x8]\n 32930: a1 = i32 [a2 + 0x10]\n 32933: a2 = u64 [a2]\n 32935: a0 = reverse a0\n 32937: a3 = a0 << 0x20\n 32940: a1 = reverse a1\n 32942: a1 = a1 >> 0x20\n 32945: a3 = a3 | a1\n 32948: a0 = a0 >> 0x20\n 32951: a1 = reverse a2\n 32953: a2 = a1 << 0x20\n 32956: a0 = a0 | a2\n 32959: a1 = a1 >> 0x20\n 32962: u64 [s1 + 184] = 0\n 32966: u64 [s1 + 0xb0] = a1\n 32970: u64 [s1 + 0xa8] = a0\n 32974: a0 = 0x4\n 32977: a1 = s1 + 0xa0\n 32981: u64 [s1 + 0xa0] = a3\n 32985: jump [t0]\n      : @1344 (gas: 15)\n 32987: t2 = u64 [s1 + 0xb8]\n 32991: t1 = u64 [s1 + 0xa0]\n 32995: ra = u64 [s1 + 0xa8]\n 32999: a1 = u64 [s1 + 0x50]\n 33002: a0 = a1 + t2\n 33005: a1 = a0 <u a1\n 33008: a4 = u64 [s1 + 0x48]\n 33011: a2 = a4 + t1\n 33014: a2 = a2 + a1\n 33017: a5 = a2 ^ a4\n 33020: a4 = a2 <u a4\n 33023: a4 = a1 if a5 == 0\n 33026: a5 = u64 [s1 + 0x40]\n 33029: a1 = a5 + ra\n 33032: jump [t0]\n      : @1345 (gas: 12)\n 33034: a0 = u64 [s1 + 0x30]\n 33037: a3 = s1 + 0x100\n 33041: u64 [a3 + 0x38] = a0\n 33044: a0 = u64 [s1 + 0x38]\n 33047: u64 [a3 + 0x30] = a0\n 33050: a0 = u64 [s1 + 0x40]\n 33053: u64 [a3 + 0x28] = a0\n 33056: a0 = 0x20\n 33059: a1 = s1 + 0x120\n 33063: a2 = u64 [s1 + 0x48]\n 33066: u64 [a3 + 0x20] = a2\n 33069: jump [t0]\n      : @1346 (gas: 12)\n 33071: a0 = u64 [s1 + 0x28]\n 33074: a3 = s1 + 0x100\n 33078: u64 [a3 + 0xd8] = a0\n 33082: a0 = u64 [s1 + 0x30]\n 33085: u64 [a3 + 0xd0] = a0\n 33089: a0 = u64 [s1 + 0x38]\n 33092: u64 [a3 + 0xc8] = a0\n 33096: a0 = 0x20\n 33099: a1 = s1 + 0x1c0\n 33103: a2 = u64 [s1 + 0x40]\n 33106: u64 [a3 + 0xc0] = a2\n 33110: jump [t0]\n      : @1347 (gas: 7)\n 33112: u64 [s1 + 344] = 0\n 33116: u64 [s1 + 336] = 0\n 33120: u64 [s1 + 320] = 0x6\n 33125: a0 = 0x20\n 33128: a1 = s1 + 0x140\n 33132: u64 [s1 + 328] = 0\n 33136: jump [t0]\n      : @1348 (gas: 18)\n 33138: a3 = u64 [s1 + 0x68]\n 33141: a0 = u64 [a3 + 0x18]\n 33144: a1 = u64 [a3 + 0x10]\n 33147: a2 = u64 [a3 + 0x8]\n 33150: a3 = u64 [a3]\n 33152: a0 = reverse a0\n 33154: u64 [s1 + 0x58] = a0\n 33157: a0 = reverse a1\n 33159: u64 [s1 + 0x50] = a0\n 33162: a0 = reverse a2\n 33164: u64 [s1 + 0x48] = a0\n 33167: a0 = reverse a3\n 33169: u64 [s1 + 0x40] = a0\n 33172: a0 = sp + 0xffffffffffffffe0\n 33175: a0 = a0 & 0xffffffffffffffe0\n 33178: u64 [s1 + 0x60] = a0\n 33181: sp = a0\n 33183: jump [t0]\n      : @1349 (gas: 17)\n 33185: a0 = u64 [a3 + 0x18]\n 33188: a1 = u64 [a3 + 0x10]\n 33191: a2 = u64 [a3 + 0x8]\n 33194: a3 = u64 [a3]\n 33196: a0 = reverse a0\n 33198: u64 [s1 + 0x60] = a0\n 33201: a0 = reverse a1\n 33203: u64 [s1 + 0x58] = a0\n 33206: a0 = reverse a2\n 33208: u64 [s1 + 0x50] = a0\n 33211: a0 = reverse a3\n 33213: u64 [s1 + 0x48] = a0\n 33216: a0 = sp + 0xffffffffffffffe0\n 33219: a0 = a0 & 0xffffffffffffffe0\n 33222: u64 [s1 + 0x68] = a0\n 33225: sp = a0\n 33227: jump [t0]\n      : @1350 (gas: 16)\n 33229: a3 = u64 [s1 + 0x58]\n 33232: a0 = u64 [a3 + 0x18]\n 33235: a1 = u64 [a3 + 0x10]\n 33238: a2 = u64 [a3 + 0x8]\n 33241: a3 = u64 [a3]\n 33243: a0 = reverse a0\n 33245: a4 = reverse a1\n 33247: a2 = reverse a2\n 33249: a3 = reverse a3\n 33251: a1 = u64 [s1 + 0x60]\n 33254: u64 [a1 + 0x18] = a3\n 33257: u64 [a1 + 0x10] = a2\n 33260: u64 [a1 + 0x8] = a4\n 33263: u64 [a1] = a0\n 33265: a0 = s1 + 0xe0\n 33269: jump [t0]\n      : @1351 (gas: 5)\n 33271: a0 = reverse a0\n 33273: a1 = reverse a1\n 33275: a2 = reverse a2\n 33277: a3 = reverse a3\n 33279: jump [t0]\n      : @1352 (gas: 14)\n 33281: a3 = a3 + a4\n 33284: u64 [s1 + 0x108] = a3\n 33288: a3 = a3 << 0x3b\n 33291: a4 = a2 >> 0x5\n 33294: a4 = a4 | a3\n 33297: a0 = u64 [s1 + 0x128]\n 33301: t1 = u64 [a0 + 0x18]\n 33304: a2 = a2 << 0x3b\n 33307: a3 = u64 [a0 + 0x10]\n 33310: a1 = a1 >> 0x5\n 33313: a0 = a1 | a2\n 33316: t2 = reverse t1\n 33318: a2 = reverse a3\n 33320: jump [t0]\n      : @1353 (gas: 15)\n 33322: a2 = u64 [s1 + 0x78]\n 33325: a0 = u64 [a2 + 0x8]\n 33328: a1 = i32 [a2 + 0x10]\n 33331: a2 = u64 [a2]\n 33333: a0 = reverse a0\n 33335: a3 = a0 << 0x20\n 33338: a1 = reverse a1\n 33340: a1 = a1 >> 0x20\n 33343: a1 = a1 | a3\n 33346: a0 = a0 >> 0x20\n 33349: a2 = reverse a2\n 33351: a3 = a2 << 0x20\n 33354: a0 = a0 | a3\n 33357: a2 = a2 >> 0x20\n 33360: jump [t0]\n      : @1354 (gas: 4)\n 33362: a0 = 0x1038\n 33366: a3 = s1 + a0\n 33369: a4 = a3 + 0x600\n 33373: jump [t0]\n      : @1355 (gas: 14)\n 33375: a5 = a5 + a2\n 33378: a4 = a5 <u a2\n 33381: a0 = u64 [s1 + 0x130]\n 33385: a2 = a2 <u a0\n 33388: a0 = t2 + a2\n 33391: a0 = a0 + a4\n 33394: a2 = a1 | a5\n 33397: a0 = a0 | a3\n 33400: a2 = a2 | a0\n 33403: a2 = a2 >> 0x20\n 33406: a0 = a0 | a5\n 33409: a0 = a0 << 0x20\n 33412: a0 = a0 | a2\n 33415: jump [t0]\n      : @1356 (gas: 10)\n 33417: a4 = 0 if a2 == 0\n 33419: a1 = u64 [s1 + 0x118]\n 33423: a1 = a1 & ~a3\n 33426: a2 = u64 [s1 + 0x120]\n 33430: a0 = a2 & ~a0\n 33433: a2 = u64 [s1 + 0x128]\n 33437: a2 = a2 & ~a4\n 33440: a3 = u64 [s1 + 0x130]\n 33444: a3 = a3 & ~a5\n 33447: jump [t0]\n      : @1357 (gas: 13)\n 33449: a4 = a0 << 0x3f\n 33452: a5 = a1 >> 0x1\n 33455: t1 = a5 | a4\n 33458: a5 = a3 << 0x3f\n 33461: a0 = a0 >> 0x1\n 33464: a0 = a0 | a5\n 33467: a1 = a1 << 0x3f\n 33470: a5 = a2 >> 0x1\n 33473: a1 = a1 | a5\n 33476: a3 = a3 >> 0x1\n 33479: a2 = a2 & 0x1\n 33482: a5 = -a2\n 33484: jump [t0]\n      : @1358 (gas: 16)\n 33486: sp = sp + 0xfffffffffffffd80\n 33490: a2 = sp + 0x200\n 33494: u64 [a2 + 0x78] = ra\n 33497: u64 [a2 + 0x70] = s0\n 33500: u64 [a2 + 0x68] = s1\n 33503: s0 = sp + 0x280\n 33507: sp = sp & 0xffffffffffffffe0\n 33510: s1 = sp\n 33512: a2 = u64 [a1 + 0x10]\n 33515: u64 [s1 + 0x50] = a2\n 33518: a2 = u64 [a1 + 0x8]\n 33521: u64 [s1 + 0x70] = a2\n 33524: a1 = u64 [a1]\n 33526: u64 [s1 + 0x78] = a1\n 33529: u64 [s1 + 0x58] = a0\n 33532: jump [t0]\n      : @1359 (gas: 14)\n 33534: a0 = u64 [a3 + 0x18]\n 33537: a1 = u64 [a3 + 0x10]\n 33540: a2 = u64 [a3 + 0x8]\n 33543: a3 = u64 [a3]\n 33545: a0 = reverse a0\n 33547: a4 = reverse a1\n 33549: a2 = reverse a2\n 33551: a3 = reverse a3\n 33553: a1 = u64 [s1 + 0x68]\n 33556: u64 [a1 + 0x18] = a3\n 33559: u64 [a1 + 0x10] = a2\n 33562: u64 [a1 + 0x8] = a4\n 33565: u64 [a1] = a0\n 33567: jump [t0]\n      : @1360 (gas: 13)\n 33569: a5 = a5 + a2\n 33572: a3 = a5 <u a2\n 33575: a2 = a2 <u t2\n 33578: a0 = t1 + a2\n 33581: a0 = a0 + a3\n 33584: a2 = a1 | a5\n 33587: a0 = a0 | a4\n 33590: a2 = a2 | a0\n 33593: a2 = a2 >> 0x20\n 33596: a0 = a0 | a5\n 33599: a0 = a0 << 0x20\n 33602: a0 = a0 | a2\n 33605: jump [t0]\n      : @1361 (gas: 4)\n 33607: a0 = 0x1838\n 33611: a3 = s1 + a0\n 33614: a4 = a3 + 0x200\n 33618: jump [t0]\n      : @1362 (gas: 8)\n 33620: a0 = u64 [a4 + 0x18]\n 33623: a1 = u64 [a4 + 0x20]\n 33626: a2 = u64 [a4 + 0x10]\n 33629: a3 = u64 [a4 + 0x8]\n 33632: a1 = a1 | a2\n 33635: a0 = a0 | a3\n 33638: a0 = a0 | a1\n 33641: jump [t0]\n      : @1363 (gas: 8)\n 33643: u64 [s1 + 208] = 0\n 33647: u64 [s1 + 200] = 0\n 33651: u64 [s1 + 192] = 0\n 33655: a0 = 0xe2517d3f00000000\n 33665: a1 = s1 + 0xc0\n 33669: u64 [s1 + 0xd8] = a0\n 33673: a0 = 0\n 33675: jump [t0]\n      : @1364 (gas: 10)\n 33677: a2 = a0 if a1 == 0\n 33680: a0 = u64 [s1 + 0x28]\n 33683: t2 = a4 <u a0\n 33686: a1 = a5 ^ t1\n 33689: a3 = a5 <u t1\n 33692: a3 = t2 if a1 == 0\n 33695: a0 = a0 ^ a4\n 33698: a0 = a0 | a1\n 33701: a3 = a2 if a0 == 0\n 33704: jump [t0]\n      : @1365 (gas: 11)\n 33706: a0 = u64 [s1 + 0x20]\n 33709: u64 [s1 + 0x198] = a0\n 33713: a0 = u64 [s1 + 0x18]\n 33716: u64 [s1 + 0x190] = a0\n 33720: a0 = u64 [s1 + 0x10]\n 33723: u64 [s1 + 0x188] = a0\n 33727: a1 = s1 + 0x180\n 33731: a0 = u64 [s1 + 0x8]\n 33734: u64 [s1 + 0x180] = a0\n 33738: a0 = 0\n 33740: jump [t0]\n      : @1366 (gas: 10)\n 33742: a1 = u64 [s1 + 0xb8]\n 33746: a0 = a1 + 0x3f\n 33749: a1 = a0 <u a1\n 33752: a2 = t2 + a1\n 33755: a0 = a0 & 0xffffffffffffffe0\n 33758: ra = u64 [s1 + 0x30]\n 33761: ra = ra + a0\n 33764: u64 [s1 + 0xb8] = ra\n 33768: a0 = ra <u a0\n 33771: jump [t0]\n      : @1367 (gas: 16)\n 33773: a4 = u64 [a3]\n 33775: u64 [sp + 0x18] = a4\n 33778: a4 = u64 [a3 + 0x8]\n 33781: u64 [sp + 0x20] = a4\n 33784: a4 = u64 [a3 + 0x10]\n 33787: u64 [sp + 0x28] = a4\n 33790: a3 = u64 [a3 + 0x18]\n 33793: u64 [sp + 0x30] = a3\n 33796: s1 = u64 [a2]\n 33798: a3 = u64 [a2 + 0x8]\n 33801: u64 [sp] = a3\n 33803: a3 = u64 [a2 + 0x10]\n 33806: u64 [sp + 0x8] = a3\n 33809: a2 = u64 [a2 + 0x18]\n 33812: u64 [sp + 0x10] = a2\n 33815: jump [t0]\n      : @1368 (gas: 8)\n 33817: a2 = a4 >u 0\n 33819: a1 = a1 ^ 0x1\n 33822: a1 = a2 if a4 != 0\n 33825: a2 = t2 >u 0\n 33827: a3 = a5 >u 0\n 33829: a3 = a2 if a5 == 0\n 33832: a3 = a1 if a0 == 0\n 33835: jump [t0]\n      : @1369 (gas: 12)\n 33837: a0 = u64 [s1 + 0x40]\n 33840: a3 = s1 + 0x100\n 33844: u64 [a3 + 0x18] = a0\n 33847: a0 = u64 [s1 + 0x48]\n 33850: u64 [a3 + 0x10] = a0\n 33853: a0 = u64 [s1 + 0x50]\n 33856: u64 [a3 + 0x8] = a0\n 33859: a0 = 0x20\n 33862: a1 = s1 + 0x100\n 33866: a2 = u64 [s1 + 0x58]\n 33869: u64 [a3] = a2\n 33871: jump [t0]\n      : @1370 (gas: 10)\n 33873: a0 = u64 [sp + 0x10]\n 33876: a1 = u64 [sp + 0x18]\n 33879: a2 = 0x100000000\n 33889: a2 = a2 ^ a0\n 33892: a2 = a2 | a1\n 33895: a3 = a0 >> 0x20\n 33898: a3 = a3 <u 0x1\n 33901: a3 = 0 if a1 != 0\n 33903: a3 = 0 if a2 == 0\n 33905: jump [t0]\n      : @1371 (gas: 8)\n 33907: a1 = a2 & ~a1\n 33910: a2 = u64 [s1 + 0x128]\n 33914: a2 = a2 & ~a5\n 33917: a3 = u64 [s1 + 0x130]\n 33921: a3 = a3 & ~a4\n 33924: a4 = s1 + 0x7ff\n 33928: a4 = a4 + 0xb9\n 33932: jump [t0]\n      : @1372 (gas: 10)\n 33934: a0 = u64 [s1 + 0x28]\n 33937: a1 = u64 [s1 + 0x18]\n 33940: a0 = a0 | a1\n 33943: a1 = 0xffffffe0\n 33953: a3 = u64 [s1 + 0x30]\n 33956: a1 = a3 <u a1\n 33959: a2 = u64 [s1 + 0x20]\n 33962: a1 = 0 if a2 != 0\n 33964: a1 = 0 if a0 != 0\n 33966: jump [t0]\n      : @1373 (gas: 10)\n 33968: a0 = u64 [a3 + 0x18]\n 33971: a1 = u64 [a3 + 0x10]\n 33974: a2 = u64 [a3 + 0x8]\n 33977: a3 = u64 [a3]\n 33979: a0 = reverse a0\n 33981: a1 = reverse a1\n 33983: a2 = reverse a2\n 33985: a3 = reverse a3\n 33987: a4 = s1 + 0x300\n 33991: jump [t0]\n      : @1374 (gas: 8)\n 33993: a0 = u64 [a4 + 0x58]\n 33996: a1 = u64 [a4 + 0x60]\n 33999: a2 = u64 [a4 + 0x50]\n 34002: a3 = u64 [a4 + 0x48]\n 34005: a1 = a1 | a2\n 34008: a0 = a0 | a3\n 34011: a0 = a0 | a1\n 34014: jump [t0]\n      : @1375 (gas: 8)\n 34016: a4 = a2 + a0\n 34019: a4 = a4 + a3\n 34022: a3 = a4 ^ a2\n 34025: u64 [s1 + 0x110] = a4\n 34029: a2 = a4 <u a2\n 34032: a2 = a0 if a3 == 0\n 34035: a4 = u64 [s1 + 0x108]\n 34039: jump [t0]\n      : @1376 (gas: 4)\n 34041: a0 = 0x1838\n 34045: a3 = s1 + a0\n 34048: a4 = a3 + 0x100\n 34052: jump [t0]\n      : @1377 (gas: 7)\n 34054: u64 [s1 + 632] = 0\n 34058: u64 [s1 + 624] = 0\n 34062: u64 [s1 + 616] = 0\n 34066: a0 = 0x20\n 34069: a1 = s1 + 0x260\n 34073: u64 [s1 + 608] = 0\n 34077: jump [t0]\n      : @1378 (gas: 11)\n 34079: a4 = a4 + a1\n 34082: a1 = a4 <u a1\n 34085: a1 = a1 + a5\n 34088: a1 = a1 | a2\n 34091: a2 = a0 | a4\n 34094: a2 = a2 | a1\n 34097: a1 = a1 | a4\n 34100: a2 = a2 >> 0x20\n 34103: a1 = a1 << 0x20\n 34106: a1 = a1 | a2\n 34109: jump [t0]\n      : @1379 (gas: 10)\n 34111: u64 [s1 + 0xf8] = a0\n 34115: u64 [s1 + 0x100] = a1\n 34119: a0 = u64 [s1 + 0xf0]\n 34123: a0 = a0 | a1\n 34126: u64 [s1 + 0xf0] = a0\n 34130: a0 = u64 [s1 + 0x138]\n 34134: a2 = a0 + 0xffffffffffffff80\n 34137: a0 = 0xffffffffffffffff\n 34140: a1 = 0xffffffffffffffff\n 34143: jump [t0]\n      : @1380 (gas: 9)\n 34145: u64 [s1 + 0x18] = a1\n 34148: u64 [s1 + 0x230] = a1\n 34152: u64 [s1 + 0x10] = a2\n 34155: u64 [s1 + 0x228] = a2\n 34159: a1 = s1 + 0x220\n 34163: u64 [s1 + 0x8] = a0\n 34166: u64 [s1 + 0x220] = a0\n 34170: a0 = 0\n 34172: jump [t0]\n      : @1381 (gas: 10)\n 34174: sp = sp + 0xfffffffffffffd80\n 34178: a3 = sp + 0x200\n 34182: u64 [a3 + 0x78] = ra\n 34185: u64 [a3 + 0x70] = s0\n 34188: u64 [a3 + 0x68] = s1\n 34191: s0 = sp + 0x280\n 34195: sp = sp & 0xffffffffffffffe0\n 34198: s1 = sp\n 34200: a3 = u64 [a2 + 0x10]\n 34203: jump [t0]\n      : @1382 (gas: 12)\n 34205: a2 = u64 [sp]\n 34207: a3 = u64 [sp + 0x8]\n 34210: u64 [s1] = a2\n 34212: u64 [s1 + 0x8] = a3\n 34215: u64 [s1 + 0x10] = a0\n 34218: u64 [s1 + 0x18] = a1\n 34221: sp = s0 + 0xffffffffffffffc0\n 34224: ra = u64 [sp + 0x38]\n 34227: s0 = u64 [sp + 0x30]\n 34230: s1 = u64 [sp + 0x28]\n 34233: sp = sp + 0x40\n 34236: jump [t0]\n      : @1383 (gas: 6)\n 34238: a0 = u64 [a3 + 0x18]\n 34241: a1 = u64 [a3 + 0x10]\n 34244: a2 = u64 [a3 + 0x8]\n 34247: a3 = u64 [a3]\n 34249: a0 = reverse a0\n 34251: jump [t0]\n      : @1384 (gas: 8)\n 34253: a0 = a0 | a2\n 34256: a2 = a3 | a1\n 34259: a2 = a2 | a0\n 34262: a2 = a2 >> 0x20\n 34265: a0 = a0 | a1\n 34268: a0 = a0 << 0x20\n 34271: a0 = a0 | a2\n 34274: jump [t0]\n      : @1385 (gas: 5)\n 34276: sp = a0\n 34278: i32 a2 = a0 + 0\n 34280: a1 = 0x40\n 34283: a0 = u64 [s1 + 0xb8]\n 34287: jump [t0]\n      : @1386 (gas: 12)\n 34289: a0 = u64 [a5 + 0xa0]\n 34293: a1 = u64 [a5 + 0x98]\n 34297: a2 = u64 [a5 + 0x90]\n 34301: a4 = u64 [a5 + 0x88]\n 34305: a0 = a0 | a2\n 34308: a2 = a4 | a1\n 34311: a2 = a2 | a0\n 34314: a2 = a2 >> 0x20\n 34317: a0 = a0 | a1\n 34320: a0 = a0 << 0x20\n 34323: a0 = a0 | a2\n 34326: jump [t0]\n      : @1387 (gas: 13)\n 34328: a0 = u64 [s1 + 0xb0]\n 34332: a1 = u64 [s1 + 0xa0]\n 34336: a0 = a0 | a1\n 34339: a1 = u64 [s1 + 0xb8]\n 34343: a4 = a1\n 34345: a2 = u64 [s1 + 0xa8]\n 34349: a1 = a1 | a2\n 34352: a1 = a1 | a0\n 34355: a1 = a1 >> 0x20\n 34358: a0 = a0 | a2\n 34361: a0 = a0 << 0x20\n 34364: a0 = a0 | a1\n 34367: jump [t0]\n      : @1388 (gas: 7)\n 34369: a0 = a0 << 0x3b\n 34372: a1 = a0 >> 0x38\n 34375: u64 [s1 + 0x138] = a1\n 34379: a2 = 0x80 - a1\n 34383: a0 = 0xffffffffffffffff\n 34386: a1 = 0xffffffffffffffff\n 34389: jump [t0]\n      : @1389 (gas: 9)\n 34391: a0 = sp + 0xffffffffffffffe0\n 34394: a4 = a0 & 0xffffffffffffffe0\n 34397: sp = a4\n 34399: a0 = 0\n 34401: u64 [s1 + 184] = 0\n 34405: t2 = 0\n 34407: t1 = 0\n 34409: u64 [s1 + 176] = 0\n 34413: jump [t0]\n      : @1390 (gas: 8)\n 34415: a0 = sp + 0xffffffffffffffe0\n 34418: a0 = a0 & 0xffffffffffffffe0\n 34421: u64 [s1 + 0x58] = a0\n 34424: sp = a0\n 34426: i32 a2 = a0 + 0\n 34428: a1 = 0x40\n 34431: a0 = u64 [s1 + 0x70]\n 34434: jump [t0]\n      : @1391 (gas: 8)\n 34436: a0 = sp + 0xffffffffffffffe0\n 34439: a0 = a0 & 0xffffffffffffffe0\n 34442: u64 [s1 + 0x30] = a0\n 34445: sp = a0\n 34447: i32 a2 = a0 + 0\n 34449: a1 = 0x40\n 34452: a0 = u64 [s1 + 0x40]\n 34455: jump [t0]\n      : @1392 (gas: 8)\n 34457: a0 = u64 [a4 + 0xd8]\n 34461: a1 = u64 [a4 + 0xe0]\n 34465: a2 = u64 [a4 + 0xd0]\n 34469: a3 = u64 [a4 + 0xc8]\n 34473: a1 = a1 | a2\n 34476: a0 = a0 | a3\n 34479: a0 = a0 | a1\n 34482: jump [t0]\n      : @1393 (gas: 8)\n 34484: a0 = a0 + a4\n 34487: a3 = a3 + a1\n 34490: a5 = a3 <u a1\n 34493: a0 = a0 + a5\n 34496: ra = u64 [s1 + 0x100]\n 34500: ra = ra + a3\n 34503: a3 = ra <u a3\n 34506: jump [t0]\n      : @1394 (gas: 6)\n 34508: a1 = a3 << 0x3\n 34511: u64 [s1 + 0x138] = a1\n 34515: i32 a2 = 0x80 - a1\n 34519: a0 = 0xffffffffffffffff\n 34522: a1 = 0xffffffffffffffff\n 34525: jump [t0]\n      : @1395 (gas: 6)\n 34527: i32 a0 = a0 + 0\n 34529: i32 a2 = a2 + 0\n 34531: u64 [s1 + 0x68] = a1\n 34534: a1 = 0x40\n 34537: u64 [s1 + 0x60] = a0\n 34540: jump [t0]\n      : @1396 (gas: 7)\n 34542: a3 = a3 | a5\n 34545: a3 = a1 if a2 == 0\n 34548: a1 = 0xffffffffffffffff\n 34551: a0 = a1 if a4 == 0\n 34554: a3 = a1 if a4 == 0\n 34557: a5 = 0 if a2 == 0\n 34559: jump [t0]\n      : @1397 (gas: 9)\n 34561: sp = sp + 0xffffffffffffffc0\n 34564: u64 [sp + 0x38] = ra\n 34567: u64 [sp + 0x30] = s0\n 34570: u64 [sp + 0x28] = s1\n 34573: s0 = sp + 0x40\n 34576: sp = sp & 0xffffffffffffffe0\n 34579: s1 = a0\n 34581: i32 a0 = sp + 0\n 34583: jump [t0]\n      : @1398 (gas: 4)\n 34585: a0 = 0x1038\n 34589: a3 = s1 + a0\n 34592: a4 = a3 + 0x500\n 34596: jump [t0]\n      : @1399 (gas: 2)\n 34598: a3 = a2 & 0x40\n 34601: jump @1403 if a3 != 0\n      : @1400 (gas: 1)\n 34604: jump @1402 if a2 == 0\n      : @1401 (gas: 6)\n 34607: i32 a3 = 0x40 - a2\n 34610: a3 = a1 << a3\n 34613: a1 = a1 >> a2\n 34616: a0 = a0 >> a2\n 34619: a0 = a0 | a3\n 34622: ret\n      : @1402 (gas: 1)\n 34624: ret\n      : @1403 (gas: 4)\n 34626: a0 = a2 + 0xffffffffffffffc0\n 34629: a0 = a1 >> a0\n 34632: a1 = 0\n 34634: ret\n      : @1404 (gas: 2)\n 34636: a3 = a2 & 0x40\n 34639: jump @1408 if a3 != 0\n      : @1405 (gas: 1)\n 34642: jump @1407 if a2 == 0\n      : @1406 (gas: 6)\n 34645: i32 a3 = 0x40 - a2\n 34648: a3 = a0 >> a3\n 34651: a0 = a0 << a2\n 34654: a1 = a1 << a2\n 34657: a1 = a1 | a3\n 34660: ret\n      : @1407 (gas: 1)\n 34662: ret\n      : @1408 (gas: 4)\n 34664: a1 = a2 + 0xffffffffffffffc0\n 34667: a1 = a0 << a1\n 34670: a0 = 0\n 34672: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "MINTER_ROLE()": "d5391393",
              "PAUSER_ROLE()": "e63ab1e9",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "unpause()": "3f4ba83a"
            }
          },
          "irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 2:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 6:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 8:\"@openzeppelin/contracts/utils/Pausable.sol\", 9:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 10:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 12:\"contracts/MyToken.sol\"\nobject \"MyToken_1498\" {\n    code {\n        {\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MyToken_1498\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            if slt(sub(add(memoryDataOffset, argSize), memoryDataOffset), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let value := mload(memoryDataOffset)\n            let memPtr := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let size := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            size := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            memPtr := allocate_memory(64)\n            mstore(memPtr, 7)\n            mstore(add(memPtr, 32), \"MyToken\")\n            let memPtr_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            memPtr_1 := allocate_memory(64)\n            mstore(memPtr_1, 3)\n            mstore(add(memPtr_1, 32), \"MTK\")\n            let newLen := mload(memPtr)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            let _1 := sload(3)\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            length := shr(1, _1)\n            let outOfPlaceEncoding := and(_1, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 34)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 3)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 31)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _2 := add(data, shr(5, add(length, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            srcOffset := 32\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 3)\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(3, add(shl(1, newLen), 1))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                if newLen\n                {\n                    value_1 := mload(add(memPtr, srcOffset))\n                }\n                sstore(3, or(and(value_1, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n            }\n            let newLen_1 := mload(memPtr_1)\n            if gt(newLen_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            let _3 := sload(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            length_1 := shr(1, _3)\n            let outOfPlaceEncoding_1 := and(_3, 1)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 34)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            if gt(length_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                let _4 := add(data_1, shr(5, add(length_1, 31)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _4) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            srcOffset_1 := 32\n            switch gt(newLen_1, 31)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ srcOffset_1)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, 1)\n                    srcOffset_1 := add(srcOffset_1, 32)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ add(shl(1, newLen_1), 1))\n            }\n            default {\n                let value_2 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                if newLen_1\n                {\n                    value_2 := mload(add(memPtr_1, srcOffset_1))\n                }\n                sstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(value_2, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n            }\n            /// @src 12:580:622  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n            pop(fun_grantRole_6928(/** @src 12:611:621  \"msg.sender\" */ caller()))\n            /// @src 12:632:667  \"_grantRole(PAUSER_ROLE, msg.sender)\"\n            pop(fun_grantRole_6929(/** @src 12:611:621  \"msg.sender\" */ caller()))\n            /// @src 12:677:712  \"_grantRole(MINTER_ROLE, msg.sender)\"\n            pop(fun_grantRole(/** @src 12:611:621  \"msg.sender\" */ caller()))\n            /// @src 3:7509:7530  \"account == address(0)\"\n            let _5 := iszero(/** @src 12:611:621  \"msg.sender\" */ caller())\n            /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n            if /** @src 3:7509:7530  \"account == address(0)\" */ _5\n            /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n            {\n                /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src -1:-1:-1 */ 0)\n                /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n            }\n            /// @src 8:1939:2000  \"if (paused()) {...\"\n            if /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 8:1796:1803  \"_paused\" */ 0x05), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n            /// @src 8:1939:2000  \"if (paused()) {...\"\n            {\n                /// @src 8:1974:1989  \"EnforcedPause()\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:1974:1989  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                revert(/** @src -1:-1:-1 */ 0, /** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            }\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let _6 := sload(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let sum := add(_6, value)\n            if gt(_6, sum)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x11)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            sstore(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sum)\n            /// @src 3:6624:7049  \"if (to == address(0)) {...\"\n            _5 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 12:611:621  \"msg.sender\" */ caller())\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(32, /** @src -1:-1:-1 */ 0)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 64)\n            sstore(dataSlot, add(sload(/** @src 3:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value))\n            /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n            let _7 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n            mstore(_7, value)\n            /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n            log3(_7, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 12:611:621  \"msg.sender\" */ caller())\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let _8 := mload(64)\n            let _9 := datasize(\"MyToken_1498_deployed\")\n            codecopy(_8, dataoffset(\"MyToken_1498_deployed\"), _9)\n            return(_8, _9)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_6928(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, 0)\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, 0)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_6929(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 8:\"@openzeppelin/contracts/utils/Pausable.sol\", 9:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 12:\"contracts/MyToken.sol\"\n    object \"MyToken_1498_deployed\" {\n        code {\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _2, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 9:862:902  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 9:877:902  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(_1, iszero(iszero(expr)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let ret := 0\n                        let slotValue := sload(/** @src 3:1837:1842  \"_name\" */ 0x03)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let length := 0\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, 32), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 3:1837:1842  \"_name\" */ 0x03)\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 32) }\n                            {\n                                mstore(add(add(memPtr, i), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(memPtr, i), 32)\n                        }\n                        let newFreePtr := add(memPtr, and(add(sub(ret, memPtr), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, memPtr), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                        if /** @src 3:9794:9813  \"owner == address(0)\" */ iszero(/** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        let _3 := and(/** @src 3:9892:9913  \"spender == address(0)\" */ value0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                        if /** @src 3:9892:9913  \"spender == address(0)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                        /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        mstore(0, /** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(32, 1)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 3:9987:10014  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                        mstore(0x20, /** @src 3:9987:10005  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        sstore(/** @src 3:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value_1)\n                        /// @src 3:10066:10097  \"Approval(owner, spender, value)\"\n                        let _4 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_4, value_1)\n                        /// @src 3:10066:10097  \"Approval(owner, spender, value)\"\n                        log3(_4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 3:10066:10097  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 3:10066:10097  \"Approval(owner, spender, value)\" */ _3)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _5 := sload(/** @src 3:2908:2920  \"_totalSupply\" */ 0x02)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _5)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_8411()\n                        let value_2 := calldataload(68)\n                        /// @src 3:4931:4936  \"value\"\n                        fun_spendAllowance(value0_1, /** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 3:4931:4936  \"value\" */ value_2)\n                        /// @src 3:4967:4972  \"value\"\n                        fun_transfer(value0_1, value1, value_2)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret_1 := fun_getRoleAdmin(calldataload(4))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, ret_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_3 := calldataload(4)\n                        let value1_1 := abi_decode_address_8411()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4300:4318  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_3))\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole(value_3, value1_1))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 3:2761:2763  \"18\" */ 0x12)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_2 := abi_decode_address_8411()\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_2, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller()))\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 0:5478:5508  \"AccessControlBadConfirmation()\" */ shl(225, 0x334bd919))\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 4)\n                        }\n                        /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_2))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_8414()\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let _6 := sload(/** @src 8:1796:1803  \"_paused\" */ 0x05)\n                        /// @src 8:2136:2198  \"if (!paused()) {...\"\n                        if /** @src 8:2140:2149  \"!paused()\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(_6, 0xff))\n                        /// @src 8:2136:2198  \"if (!paused()) {...\"\n                        {\n                            /// @src 8:2172:2187  \"ExpectedPause()\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 8:2172:2187  \"ExpectedPause()\" */ shl(224, 0x8dfc202b))\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 4)\n                        }\n                        sstore(/** @src 8:1796:1803  \"_paused\" */ 0x05, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(_6, not(255)))\n                        /// @src 8:2674:2696  \"Unpaused(_msgSender())\"\n                        let _7 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_7, /** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 8:2674:2696  \"Unpaused(_msgSender())\"\n                        log1(_7, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 8:2674:2696  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address()\n                        let value_4 := calldataload(36)\n                        mstore(0, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(32, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_2)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, /** @src 7:735:745  \"msg.sender\" */ caller())\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(36, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 68)\n                        }\n                        let _8 := and(/** @src 3:7509:7530  \"account == address(0)\" */ value0_2, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:7509:7530  \"account == address(0)\"\n                        let _9 := iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _8)\n                        /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n                        if /** @src 3:7509:7530  \"account == address(0)\" */ _9\n                        /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let _10 := sload(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let sum := add(_10, value_4)\n                        if gt(_10, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sum)\n                        /// @src 3:6624:7049  \"if (to == address(0)) {...\"\n                        _9 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                        mstore(0, _8)\n                        mstore(32, 0)\n                        let dataSlot_4 := keccak256(0, 64)\n                        sstore(dataSlot_4, add(sload(/** @src 3:7002:7024  \"_balances[to] += value\" */ dataSlot_4), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value_4))\n                        /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                        let _11 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_11, value_4)\n                        /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                        log3(_11, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ _8)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x42966c68 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 5:692:697  \"value\"\n                        fun_burn(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(4))\n                        return(0, 0)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let converted := and(sload(/** @src 8:1796:1803  \"_paused\" */ 0x05), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, iszero(iszero(converted)))\n                        return(memPos_5, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _12 := sload(keccak256(0, 64))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _12)\n                        return(memPos_6, 32)\n                    }\n                    case 0x79cc6790 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_3 := abi_decode_address()\n                        let value_5 := calldataload(36)\n                        /// @src 5:1135:1140  \"value\"\n                        fun_spendAllowance(value0_3, /** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 5:1135:1140  \"value\" */ value_5)\n                        /// @src 5:1166:1171  \"value\"\n                        fun_burn(value0_3, value_5)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_8414()\n                        /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        sstore(/** @src 8:2398:2412  \"_paused = true\" */ 0x05, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 8:2398:2412  \"_paused = true\" */ 0x05), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 8:2408:2412  \"true\" */ 0x01))\n                        /// @src 8:2427:2447  \"Paused(_msgSender())\"\n                        let _13 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_13, /** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 8:2427:2447  \"Paused(_msgSender())\"\n                        log1(_13, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 8:2427:2447  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_3 := abi_decode_address_8411()\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_6 := /** @src -1:-1:-1 */ 0\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(value1_3, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_5)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_6 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        let converted_1 := and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_6), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, iszero(iszero(converted_1)))\n                        return(memPos_7, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr_1 := mload(64)\n                        let ret_2 := 0\n                        let slotValue_1 := sload(4)\n                        let length_1 := 0\n                        length_1 := shr(1, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr_1, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, 32), and(slotValue_1, not(255)))\n                            ret_2 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, 4)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := 0\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 32) }\n                            {\n                                mstore(add(add(memPtr_1, i_1), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, 1)\n                            }\n                            ret_2 := add(add(memPtr_1, i_1), 32)\n                        }\n                        let newFreePtr_1 := add(memPtr_1, and(add(sub(ret_2, memPtr_1), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_1), newFreePtr_1))\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, 0)\n                        return(memPos_8, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 3:3440:3445  \"value\"\n                        fun_transfer(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 3:3440:3445  \"value\" */ value0_4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(36))\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, 1)\n                        return(memPos_9, 32)\n                    }\n                    case 0xd5391393 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, /** @src 12:480:504  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_10, 32)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_6 := calldataload(4)\n                        let value1_4 := abi_decode_address_8411()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4717:4735  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_6))\n                        /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_6, value1_4))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_5 := abi_decode_address()\n                        let value1_5 := abi_decode_address_8411()\n                        mstore(0, and(value0_5, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 3:3638:3649  \"_allowances\" */ 0x01)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        /// @src 3:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(value1_5, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 3:3638:3656  \"_allowances[owner]\" */ dataSlot_7)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        let _14 := sload(/** @src 3:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_8)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, _14)\n                        return(memPos_11, 32)\n                    }\n                    case 0xe63ab1e9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_12, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_8411() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 128 @src 0:3810:3930  \"function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:3901:3907  \"_roles\" */ 0x06)\n                /// @src 0:3894:3923  \"return _roles[role].adminRole\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1))\n            }\n            /// @ast-id 1029 @src 3:10396:10872  \"function _spendAllowance(address owner, address spender, uint256 value) internal virtual {...\"\n            function fun_spendAllowance(var_owner, var_spender, var_value)\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(var_owner, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:3638:3649  \"_allowances\" */ 0x01)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 3:3638:3665  \"_allowances[owner][spender]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 3:10522:10547  \"allowance(owner, spender)\" */ var_spender, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:3638:3656  \"_allowances[owner]\" */ dataSlot)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                let _2 := sload(/** @src 3:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_1)\n                /// @src 3:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                if /** @src 3:10561:10597  \"currentAllowance < type(uint256).max\" */ lt(_2, /** @src 3:10580:10597  \"type(uint256).max\" */ not(0))\n                /// @src 3:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                {\n                    /// @src 3:10613:10743  \"if (currentAllowance < value) {...\"\n                    if /** @src 3:10617:10641  \"currentAllowance < value\" */ lt(_2, var_value)\n                    /// @src 3:10613:10743  \"if (currentAllowance < value) {...\"\n                    {\n                        /// @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ 4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(var_spender, sub(shl(160, 1), 1)))\n                        mstore(36, _2)\n                        mstore(68, var_value)\n                        /// @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                    }\n                    /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                    if /** @src 3:9794:9813  \"owner == address(0)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                    {\n                        /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                    }\n                    /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                    if /** @src 3:9892:9913  \"spender == address(0)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 3:9892:9913  \"spender == address(0)\" */ var_spender, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                    {\n                        /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                        /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                    }\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(0x20, /** @src 3:3638:3649  \"_allowances\" */ 0x01)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    /// @src 3:9987:10014  \"_allowances[owner][spender]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 3:9987:10014  \"_allowances[owner][spender]\" */ var_spender, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 3:9987:10005  \"_allowances[owner]\" */ dataSlot_2)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 3:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(/** @src 3:10809:10833  \"currentAllowance - value\" */ _2, var_value))\n                }\n            }\n            /// @ast-id 760 @src 3:5374:5674  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(/** @src 3:5457:5475  \"from == address(0)\" */ var_from, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 3:5457:5475  \"from == address(0)\"\n                let _2 := iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                /// @src 3:5453:5539  \"if (from == address(0)) {...\"\n                if /** @src 3:5457:5475  \"from == address(0)\" */ _2\n                /// @src 3:5453:5539  \"if (from == address(0)) {...\"\n                {\n                    /// @src 3:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:5498:5528  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 3:5473:5474  \"0\" */ 0x00)\n                    /// @src 3:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                let _3 := and(/** @src 3:5552:5568  \"to == address(0)\" */ var_to, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 3:5552:5568  \"to == address(0)\"\n                let _4 := iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                /// @src 3:5548:5634  \"if (to == address(0)) {...\"\n                if /** @src 3:5552:5568  \"to == address(0)\" */ _4\n                /// @src 3:5548:5634  \"if (to == address(0)) {...\"\n                {\n                    /// @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 3:5473:5474  \"0\" */ 0x00)\n                    /// @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 3:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 3:5473:5474  \"0\" */ 0x00\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _5 := sload(keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40))\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 3:6321:6340  \"fromBalance < value\" */ lt(_5, var_value)\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(36, _5)\n                    mstore(68, var_value)\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                }\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), sub(/** @src 3:6570:6589  \"fromBalance - value\" */ _5, var_value))\n                /// @src 3:6624:7049  \"if (to == address(0)) {...\"\n                _4 := /** @src 3:5473:5474  \"0\" */ 0x00\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 3:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_value))\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                let _6 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(0x40)\n                mstore(_6, var_value)\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                log3(_6, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x20, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole_8414()\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(36, /** @src 12:412:436  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(36, var_role)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_role, var_account) -> var\n            {\n                /// @src 0:6256:6260  \"bool\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 294 @src 0:6732:7049  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 0:6810:6814  \"bool\"\n                var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6830:6852  \"hasRole(role, account)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                switch /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                case /** @src 0:6826:7043  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7020:7032  \"return false\"\n                    var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                    /// @src 0:7020:7032  \"return false\"\n                    leave\n                }\n                default /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6868:6897  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6868:6880  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)))\n                    /// @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6978:6989  \"return true\"\n                    var := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 1\n                    /// @src 0:6978:6989  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 903 @src 3:7965:8171  \"function _burn(address account, uint256 value) internal {...\"\n            function fun_burn(var_account, var_value)\n            {\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(/** @src 3:8035:8056  \"account == address(0)\" */ var_account, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 3:8035:8056  \"account == address(0)\"\n                let _2 := iszero(/** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                /// @src 3:8031:8120  \"if (account == address(0)) {...\"\n                if /** @src 3:8035:8056  \"account == address(0)\" */ _2\n                /// @src 3:8031:8120  \"if (account == address(0)) {...\"\n                {\n                    /// @src 3:8079:8109  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 3:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:8079:8109  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 3:8054:8055  \"0\" */ 0x00)\n                    /// @src 3:8079:8109  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 3:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 3:8054:8055  \"0\" */ 0x00\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:8054:8055  \"0\" */ 0x00)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _3 := sload(keccak256(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40))\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 3:6321:6340  \"fromBalance < value\" */ lt(_3, var_value)\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(36, _3)\n                    mstore(68, var_value)\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                }\n                mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:8054:8055  \"0\" */ 0x00)\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(keccak256(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), sub(/** @src 3:6570:6589  \"fromBalance - value\" */ _3, var_value))\n                /// @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(/** @src 3:6791:6812  \"_totalSupply -= value\" */ 0x02, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(sload(/** @src 3:6791:6812  \"_totalSupply -= value\" */ 0x02), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_value))\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                let _4 := /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(0x40)\n                mstore(_4, var_value)\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                log3(_4, /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x20, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 3:8054:8055  \"0\" */ 0x00)\n            }\n            /// @ast-id 1272 @src 8:1878:2006  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 8:1939:2000  \"if (paused()) {...\"\n                if /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 8:1796:1803  \"_paused\" */ 0x05), /** @src 12:302:1206  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                /// @src 8:1939:2000  \"if (paused()) {...\"\n                {\n                    /// @src 8:1974:1989  \"EnforcedPause()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:1974:1989  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 8:1974:1989  \"EnforcedPause()\" */ 4)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e55ab3910a2bc1513c7f9b9150c1507912ff9558abd5e84e68980610819bf70164736f6c634300081c0033\"\n    }\n}\n",
          "hash": "d3aaaa8ab726243a3541d757f7174142482568b29de8bfd5a13fe6745b6fc161",
          "factoryDependencies": {}
        }
      }
    }
  }
}